///
/// Auto-generated by Stone, do not modify.
///

#import "DBXASYNCLaunchEmptyResult.h"
#import "DBXASYNCLaunchResultBase.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXASYNCLaunchEmptyResult 

@synthesize asyncJobId = _asyncJobId;

- (instancetype)initWithAsyncJobId:(NSString *)asyncJobId {
    self = [super init];
    if (self != nil) {
        _tag = DBXASYNCLaunchEmptyResultAsyncJobId;
        _asyncJobId = asyncJobId;
    }
    return self;
}

- (instancetype)initWithComplete {
    self = [super init];
    if (self != nil) {
        _tag = DBXASYNCLaunchEmptyResultComplete;
    }
    return self;
}

- (BOOL)isAsyncJobId {
    return _tag == DBXASYNCLaunchEmptyResultAsyncJobId;
}

- (BOOL)isComplete {
    return _tag == DBXASYNCLaunchEmptyResultComplete;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXASYNCLaunchEmptyResultAsyncJobId:
           return @"DBXASYNCLaunchEmptyResultAsyncJobId";
        case DBXASYNCLaunchEmptyResultComplete:
           return @"DBXASYNCLaunchEmptyResultComplete";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

- (NSString *)asyncJobId {
    if (_tag != DBXASYNCLaunchEmptyResultAsyncJobId) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required `DBXASYNCLaunchEmptyResultAsyncJobId`, but was %@.", [self getTagName]];
    }
    return _asyncJobId;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXASYNCLaunchEmptyResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXASYNCLaunchEmptyResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXASYNCLaunchEmptyResultSerializer serialize:self] description];
}

@end


@implementation DBXASYNCLaunchEmptyResultSerializer 

+ (NSDictionary *)serialize:(DBXASYNCLaunchEmptyResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isAsyncJobId]) {
        jsonDict[@"async_job_id"] = valueObj.asyncJobId;
        jsonDict[@".tag"] = @"async_job_id";
    }
    else if ([valueObj isComplete]) {
        jsonDict[@".tag"] = @"complete";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXASYNCLaunchEmptyResult *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"async_job_id"]) {
        NSString *asyncJobId = valueDict[@"async_job_id"];
        return [[DBXASYNCLaunchEmptyResult alloc] initWithAsyncJobId:asyncJobId];
    }
    else if ([tag isEqualToString:@"complete"]) {
        return [[DBXASYNCLaunchEmptyResult alloc] initWithComplete];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
