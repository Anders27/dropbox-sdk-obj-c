///
/// Auto-generated by Stone, do not modify.
///

#import "DbxAuthRateLimitError.h"
#import "DbxAuthRateLimitReason.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxAuthRateLimitError 

- (instancetype)initWithReason:(DbxAuthRateLimitReason *)reason retryAfter:(NSNumber *)retryAfter {

    self = [super init];
    if (self != nil) {
        _reason = reason;
        _retryAfter = retryAfter ?: [NSNumber numberWithInt:1];
    }
    return self;
}

- (instancetype)initWithReason:(DbxAuthRateLimitReason *)reason {
    return [self initWithReason:reason retryAfter:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxAuthRateLimitErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxAuthRateLimitErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxAuthRateLimitErrorSerializer serialize:self] description];
}

@end


@implementation DbxAuthRateLimitErrorSerializer 

+ (NSDictionary *)serialize:(DbxAuthRateLimitError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"reason"] = [DbxAuthRateLimitReasonSerializer serialize:valueObj.reason];
    jsonDict[@"retry_after"] = [DbxNSNumberSerializer serialize:valueObj.retryAfter];

    return jsonDict;
}

+ (DbxAuthRateLimitError *)deserialize:(NSDictionary *)valueDict {
    DbxAuthRateLimitReason *reason = [DbxAuthRateLimitReasonSerializer deserialize:valueDict];
    NSNumber *retryAfter = [DbxNSNumberSerializer deserialize:valueDict];

    return [[DbxAuthRateLimitError alloc] initWithReason:reason retryAfter:retryAfter];
}

@end
