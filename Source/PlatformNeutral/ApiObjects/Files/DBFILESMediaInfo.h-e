///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBFILESMediaInfo;
@class DBFILESMediaMetadata;

#pragma mark - API Object

///
/// The MediaInfo union.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBFILESMediaInfo : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBFILESMediaInfoTag enum type represents the possible tag states with which the
/// DBFILESMediaInfo union can exist.
typedef NS_ENUM(NSInteger, DBFILESMediaInfoTag) {
  /// Indicate the photo/video is still under processing and metadata is not available yet.
  DBFILESMediaInfoPending,

  /// The metadata for the photo/video.
  DBFILESMediaInfoMetadata,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBFILESMediaInfoTag tag;

/// The metadata for the photo/video. Ensure the isMetadata method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property(nonatomic, readonly) DBFILESMediaMetadata * _Nonnull metadata;

#pragma mark - Constructors

///
/// Initializes union class with tag state of Pending.
///
/// About the Pending tag state: Indicate the photo/video is still under processing and metadata is
/// not available yet.
///
/// @return An initialized DBFILESMediaInfo instance.
///
- (nonnull instancetype)initWithPending;

///
/// Initializes union class with tag state of Metadata.
///
/// About the Metadata tag state: The metadata for the photo/video.
///
/// @param metadata The metadata for the photo/video.
///
/// @return An initialized DBFILESMediaInfo instance.
///
- (nonnull instancetype)initWithMetadata:(DBFILESMediaMetadata * _Nonnull)metadata;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value Pending.
///
/// @return Whether the union's current tag state has value Pending.
///
- (BOOL)isPending;

///
/// Retrieves whether the union's current tag state has value Metadata.
///
/// @note Call this method and ensure it returns true before accessing the metadata property,
/// otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value Metadata.
///
- (BOOL)isMetadata;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBFILESMediaInfo union.
///
@interface DBFILESMediaInfoSerializer : NSObject

///
/// Serializes DBFILESMediaInfo instances.
///
/// @param instance An instance of the DBFILESMediaInfo API object.
///
/// @return A json-compatible dictionary representation of the DBFILESMediaInfo API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESMediaInfo * _Nonnull)instance;

///
/// Deserializes DBFILESMediaInfo instances.
///
/// @param dict A json-compatible dictionary representation of the DBFILESMediaInfo API object.
///
/// @return An instantiation of the DBFILESMediaInfo object.
///
+ (DBFILESMediaInfo * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
