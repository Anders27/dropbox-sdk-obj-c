///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBFILESSaveCopyReferenceError;
@class DBFILESWriteError;

#pragma mark - API Object

///
/// The SaveCopyReferenceError union.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBFILESSaveCopyReferenceError : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBFILESSaveCopyReferenceErrorTag enum type represents the possible tag states with which the
/// DBFILESSaveCopyReferenceError union can exist.
typedef NS_ENUM(NSInteger, DBFILESSaveCopyReferenceErrorTag) {
  /// (no description).
  DBFILESSaveCopyReferenceErrorPath,

  /// The copy reference is invalid.
  DBFILESSaveCopyReferenceErrorInvalidCopyReference,

  /// You don't have permission to save the given copy reference. Please make sure this app is
  /// same app which created the copy reference and the source user is still linked to the app.
  DBFILESSaveCopyReferenceErrorNoPermission,

  /// The file referenced by the copy reference cannot be found.
  DBFILESSaveCopyReferenceErrorNotFound,

  /// The operation would involve more than 10,000 files and folders.
  DBFILESSaveCopyReferenceErrorTooManyFiles,

  /// (no description).
  DBFILESSaveCopyReferenceErrorOther,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBFILESSaveCopyReferenceErrorTag tag;

/// (no description). Ensure the isPath method returns true before accessing, otherwise a runtime
/// exception will be raised.
@property(nonatomic, readonly) DBFILESWriteError * _Nonnull path;

#pragma mark - Constructors

///
/// Initializes union class with tag state of Path.
///
/// @param path (no description).
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithPath:(DBFILESWriteError * _Nonnull)path;

///
/// Initializes union class with tag state of InvalidCopyReference.
///
/// About the InvalidCopyReference tag state: The copy reference is invalid.
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithInvalidCopyReference;

///
/// Initializes union class with tag state of NoPermission.
///
/// About the NoPermission tag state: You don't have permission to save the given copy reference.
/// Please make sure this app is same app which created the copy reference and the source user is
/// still linked to the app.
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithNoPermission;

///
/// Initializes union class with tag state of NotFound.
///
/// About the NotFound tag state: The file referenced by the copy reference cannot be found.
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithNotFound;

///
/// Initializes union class with tag state of TooManyFiles.
///
/// About the TooManyFiles tag state: The operation would involve more than 10,000 files and
/// folders.
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithTooManyFiles;

///
/// Initializes union class with tag state of Other.
///
/// @return An initialized DBFILESSaveCopyReferenceError instance.
///
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value Path.
///
/// @note Call this method and ensure it returns true before accessing the path property, otherwise
/// a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value Path.
///
- (BOOL)isPath;

///
/// Retrieves whether the union's current tag state has value InvalidCopyReference.
///
/// @return Whether the union's current tag state has value InvalidCopyReference.
///
- (BOOL)isInvalidCopyReference;

///
/// Retrieves whether the union's current tag state has value NoPermission.
///
/// @return Whether the union's current tag state has value NoPermission.
///
- (BOOL)isNoPermission;

///
/// Retrieves whether the union's current tag state has value NotFound.
///
/// @return Whether the union's current tag state has value NotFound.
///
- (BOOL)isNotFound;

///
/// Retrieves whether the union's current tag state has value TooManyFiles.
///
/// @return Whether the union's current tag state has value TooManyFiles.
///
- (BOOL)isTooManyFiles;

///
/// Retrieves whether the union's current tag state has value Other.
///
/// @return Whether the union's current tag state has value Other.
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBFILESSaveCopyReferenceError union.
///
@interface DBFILESSaveCopyReferenceErrorSerializer : NSObject

///
/// Serializes DBFILESSaveCopyReferenceError instances.
///
/// @param instance An instance of the DBFILESSaveCopyReferenceError API object.
///
/// @return A json-compatible dictionary representation of the DBFILESSaveCopyReferenceError API
/// object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESSaveCopyReferenceError * _Nonnull)instance;

///
/// Deserializes DBFILESSaveCopyReferenceError instances.
///
/// @param dict A json-compatible dictionary representation of the DBFILESSaveCopyReferenceError API
/// object.
///
/// @return An instantiation of the DBFILESSaveCopyReferenceError object.
///
+ (DBFILESSaveCopyReferenceError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
