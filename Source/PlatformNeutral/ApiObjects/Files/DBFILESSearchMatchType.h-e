///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBFILESSearchMatchType;

#pragma mark - API Object

///
/// The SearchMatchType union.
///
/// Indicates what type of match was found for a given item.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBFILESSearchMatchType : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBFILESSearchMatchTypeTag enum type represents the possible tag states with which the
/// DBFILESSearchMatchType union can exist.
typedef NS_ENUM(NSInteger, DBFILESSearchMatchTypeTag) {
  /// This item was matched on its file or folder name.
  DBFILESSearchMatchTypeFilename,

  /// This item was matched based on its file contents.
  DBFILESSearchMatchTypeContent,

  /// This item was matched based on both its contents and its file name.
  DBFILESSearchMatchTypeBoth,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBFILESSearchMatchTypeTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of Filename.
///
/// About the Filename tag state: This item was matched on its file or folder name.
///
/// @return An initialized DBFILESSearchMatchType instance.
///
- (nonnull instancetype)initWithFilename;

///
/// Initializes union class with tag state of Content.
///
/// About the Content tag state: This item was matched based on its file contents.
///
/// @return An initialized DBFILESSearchMatchType instance.
///
- (nonnull instancetype)initWithContent;

///
/// Initializes union class with tag state of Both.
///
/// About the Both tag state: This item was matched based on both its contents and its file name.
///
/// @return An initialized DBFILESSearchMatchType instance.
///
- (nonnull instancetype)initWithBoth;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value Filename.
///
/// @return Whether the union's current tag state has value Filename.
///
- (BOOL)isFilename;

///
/// Retrieves whether the union's current tag state has value Content.
///
/// @return Whether the union's current tag state has value Content.
///
- (BOOL)isContent;

///
/// Retrieves whether the union's current tag state has value Both.
///
/// @return Whether the union's current tag state has value Both.
///
- (BOOL)isBoth;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBFILESSearchMatchType union.
///
@interface DBFILESSearchMatchTypeSerializer : NSObject

///
/// Serializes DBFILESSearchMatchType instances.
///
/// @param instance An instance of the DBFILESSearchMatchType API object.
///
/// @return A json-compatible dictionary representation of the DBFILESSearchMatchType API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESSearchMatchType * _Nonnull)instance;

///
/// Deserializes DBFILESSearchMatchType instances.
///
/// @param dict A json-compatible dictionary representation of the DBFILESSearchMatchType API
/// object.
///
/// @return An instantiation of the DBFILESSearchMatchType object.
///
+ (DBFILESSearchMatchType * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
