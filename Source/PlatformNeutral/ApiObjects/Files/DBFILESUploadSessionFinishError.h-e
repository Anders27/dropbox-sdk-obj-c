///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBFILESUploadSessionFinishError;
@class DBFILESUploadSessionLookupError;
@class DBFILESWriteError;

#pragma mark - API Object

///
/// The UploadSessionFinishError union.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBFILESUploadSessionFinishError : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBFILESUploadSessionFinishErrorTag enum type represents the possible tag states with which
/// the DBFILESUploadSessionFinishError union can exist.
typedef NS_ENUM(NSInteger, DBFILESUploadSessionFinishErrorTag) {
  /// The session arguments are incorrect; the value explains the reason.
  DBFILESUploadSessionFinishErrorLookupFailed,

  /// Unable to save the uploaded contents to a file.
  DBFILESUploadSessionFinishErrorPath,

  /// The batch request commits files into too many different shared folders. Please limit your
  /// batch request to files contained in a single shared folder.
  DBFILESUploadSessionFinishErrorTooManySharedFolderTargets,

  /// (no description).
  DBFILESUploadSessionFinishErrorOther,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBFILESUploadSessionFinishErrorTag tag;

/// The session arguments are incorrect; the value explains the reason. Ensure the isLookupFailed
/// method returns true before accessing, otherwise a runtime exception will be raised.
@property(nonatomic, readonly) DBFILESUploadSessionLookupError * _Nonnull lookupFailed;

/// Unable to save the uploaded contents to a file. Ensure the isPath method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property(nonatomic, readonly) DBFILESWriteError * _Nonnull path;

#pragma mark - Constructors

///
/// Initializes union class with tag state of LookupFailed.
///
/// About the LookupFailed tag state: The session arguments are incorrect; the value explains the
/// reason.
///
/// @param lookupFailed The session arguments are incorrect; the value explains the reason.
///
/// @return An initialized DBFILESUploadSessionFinishError instance.
///
- (nonnull instancetype)initWithLookupFailed:(DBFILESUploadSessionLookupError * _Nonnull)lookupFailed;

///
/// Initializes union class with tag state of Path.
///
/// About the Path tag state: Unable to save the uploaded contents to a file.
///
/// @param path Unable to save the uploaded contents to a file.
///
/// @return An initialized DBFILESUploadSessionFinishError instance.
///
- (nonnull instancetype)initWithPath:(DBFILESWriteError * _Nonnull)path;

///
/// Initializes union class with tag state of TooManySharedFolderTargets.
///
/// About the TooManySharedFolderTargets tag state: The batch request commits files into too many
/// different shared folders. Please limit your batch request to files contained in a single shared
/// folder.
///
/// @return An initialized DBFILESUploadSessionFinishError instance.
///
- (nonnull instancetype)initWithTooManySharedFolderTargets;

///
/// Initializes union class with tag state of Other.
///
/// @return An initialized DBFILESUploadSessionFinishError instance.
///
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value LookupFailed.
///
/// @note Call this method and ensure it returns true before accessing the lookupFailed property,
/// otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value LookupFailed.
///
- (BOOL)isLookupFailed;

///
/// Retrieves whether the union's current tag state has value Path.
///
/// @note Call this method and ensure it returns true before accessing the path property, otherwise
/// a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value Path.
///
- (BOOL)isPath;

///
/// Retrieves whether the union's current tag state has value TooManySharedFolderTargets.
///
/// @return Whether the union's current tag state has value TooManySharedFolderTargets.
///
- (BOOL)isTooManySharedFolderTargets;

///
/// Retrieves whether the union's current tag state has value Other.
///
/// @return Whether the union's current tag state has value Other.
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBFILESUploadSessionFinishError union.
///
@interface DBFILESUploadSessionFinishErrorSerializer : NSObject

///
/// Serializes DBFILESUploadSessionFinishError instances.
///
/// @param instance An instance of the DBFILESUploadSessionFinishError API object.
///
/// @return A json-compatible dictionary representation of the DBFILESUploadSessionFinishError API
/// object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESUploadSessionFinishError * _Nonnull)instance;

///
/// Deserializes DBFILESUploadSessionFinishError instances.
///
/// @param dict A json-compatible dictionary representation of the DBFILESUploadSessionFinishError
/// API object.
///
/// @return An instantiation of the DBFILESUploadSessionFinishError object.
///
+ (DBFILESUploadSessionFinishError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
