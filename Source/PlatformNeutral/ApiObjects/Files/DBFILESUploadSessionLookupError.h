///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBFILESUploadSessionLookupError;
@class DBFILESUploadSessionOffsetError;

#pragma mark - API Object

/// 
/// The UploadSessionLookupError union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBFILESUploadSessionLookupError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBFILESUploadSessionLookupErrorTag enum type represents the possible tag
/// states with which the DBFILESUploadSessionLookupError union can exist.
typedef NS_ENUM(NSInteger, DBFILESUploadSessionLookupErrorTag) {
    /// The upload session id was not found.
    DBFILESUploadSessionLookupErrorNotFound,

    /// The specified offset was incorrect. See the value for the correct
    /// offset. (This error may occur when a previous request was received and
    /// processed successfully but the client did not receive the response, e.g.
    /// due to a network error.)
    DBFILESUploadSessionLookupErrorIncorrectOffset,

    /// You are attempting to append data to an upload session that has alread
    /// been closed (i.e. committed).
    DBFILESUploadSessionLookupErrorClosed,

    /// The session must be closed before calling upload_session/finish_batch.
    DBFILESUploadSessionLookupErrorNotClosed,

    /// (no description).
    DBFILESUploadSessionLookupErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBFILESUploadSessionLookupErrorTag tag;

/// The specified offset was incorrect. See the value for the correct offset.
/// (This error may occur when a previous request was received and processed
/// successfully but the client did not receive the response, e.g. due to a
/// network error.) Ensure the isIncorrectOffset method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBFILESUploadSessionOffsetError * _Nonnull incorrectOffset;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of NotFound.
/// 
/// About the NotFound tag state: The upload session id was not found.
/// 
/// @return An initialized DBFILESUploadSessionLookupError instance.
/// 
- (nonnull instancetype)initWithNotFound;

/// 
/// Initializes union class with tag state of IncorrectOffset.
/// 
/// About the IncorrectOffset tag state: The specified offset was incorrect. See
/// the value for the correct offset. (This error may occur when a previous
/// request was received and processed successfully but the client did not
/// receive the response, e.g. due to a network error.)
/// 
/// @param incorrectOffset The specified offset was incorrect. See the value for
/// the correct offset. (This error may occur when a previous request was
/// received and processed successfully but the client did not receive the
/// response, e.g. due to a network error.)
/// 
/// @return An initialized DBFILESUploadSessionLookupError instance.
/// 
- (nonnull instancetype)initWithIncorrectOffset:(DBFILESUploadSessionOffsetError * _Nonnull)incorrectOffset;

/// 
/// Initializes union class with tag state of Closed.
/// 
/// About the Closed tag state: You are attempting to append data to an upload
/// session that has alread been closed (i.e. committed).
/// 
/// @return An initialized DBFILESUploadSessionLookupError instance.
/// 
- (nonnull instancetype)initWithClosed;

/// 
/// Initializes union class with tag state of NotClosed.
/// 
/// About the NotClosed tag state: The session must be closed before calling
/// upload_session/finish_batch.
/// 
/// @return An initialized DBFILESUploadSessionLookupError instance.
/// 
- (nonnull instancetype)initWithNotClosed;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBFILESUploadSessionLookupError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value NotFound.
/// 
/// @return Whether the union's current tag state has value NotFound.
/// 
- (BOOL)isNotFound;

/// 
/// Retrieves whether the union's current tag state has value IncorrectOffset.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// incorrectOffset property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value IncorrectOffset.
/// 
- (BOOL)isIncorrectOffset;

/// 
/// Retrieves whether the union's current tag state has value Closed.
/// 
/// @return Whether the union's current tag state has value Closed.
/// 
- (BOOL)isClosed;

/// 
/// Retrieves whether the union's current tag state has value NotClosed.
/// 
/// @return Whether the union's current tag state has value NotClosed.
/// 
- (BOOL)isNotClosed;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBFILESUploadSessionLookupError union.
/// 
@interface DBFILESUploadSessionLookupErrorSerializer : NSObject 

/// 
/// Serializes DBFILESUploadSessionLookupError instances.
/// 
/// @param instance An instance of the DBFILESUploadSessionLookupError API
/// object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBFILESUploadSessionLookupError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBFILESUploadSessionLookupError * _Nonnull)instance;

/// 
/// Deserializes DBFILESUploadSessionLookupError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBFILESUploadSessionLookupError API object.
/// 
/// @return An instantiation of the DBFILESUploadSessionLookupError object.
/// 
+ (DBFILESUploadSessionLookupError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
