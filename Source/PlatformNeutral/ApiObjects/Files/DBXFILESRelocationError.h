///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXFILESLookupError;
@class DBXFILESRelocationError;
@class DBXFILESWriteError;

/// 
/// The RelocationError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXFILESRelocationError : NSObject <DBXSerializable> 

/// The `DBXFILESRelocationErrorTag` enum type represents the possible tag
/// states with which the `DBXFILESRelocationError` union can exist.
typedef NS_ENUM(NSInteger, DBXFILESRelocationErrorTag) {
    /// (no description).
    DBXFILESRelocationErrorFromLookup,

    /// (no description).
    DBXFILESRelocationErrorFromWrite,

    /// (no description).
    DBXFILESRelocationErrorTo,

    /// Shared folders can't be copied.
    DBXFILESRelocationErrorCantCopySharedFolder,

    /// Your move operation would result in nested shared folders.  This is not
    /// allowed.
    DBXFILESRelocationErrorCantNestSharedFolder,

    /// You cannot move a folder into itself.
    DBXFILESRelocationErrorCantMoveFolderIntoItself,

    /// The operation would involve more than 10,000 files and folders.
    DBXFILESRelocationErrorTooManyFiles,

    /// (no description).
    DBXFILESRelocationErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXFILESRelocationErrorTag tag;

/// (no description).
@property (nonatomic, readonly) DBXFILESLookupError * _Nonnull fromLookup;

/// (no description).
@property (nonatomic, readonly) DBXFILESWriteError * _Nonnull fromWrite;

/// (no description).
@property (nonatomic, readonly) DBXFILESWriteError * _Nonnull to;

/// 
/// Initializes union class with tag state of `FromLookup`.
/// 
/// - parameter fromLookup: (no description).
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithFromLookup:(DBXFILESLookupError * _Nonnull)fromLookup;

/// 
/// Initializes union class with tag state of `FromWrite`.
/// 
/// - parameter fromWrite: (no description).
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithFromWrite:(DBXFILESWriteError * _Nonnull)fromWrite;

/// 
/// Initializes union class with tag state of `To`.
/// 
/// - parameter to: (no description).
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithTo:(DBXFILESWriteError * _Nonnull)to;

/// 
/// Initializes union class with tag state of `CantCopySharedFolder`.
/// 
/// About the `CantCopySharedFolder` tag state: Shared folders can't be copied.
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithCantCopySharedFolder;

/// 
/// Initializes union class with tag state of `CantNestSharedFolder`.
/// 
/// About the `CantNestSharedFolder` tag state: Your move operation would result
/// in nested shared folders.  This is not allowed.
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithCantNestSharedFolder;

/// 
/// Initializes union class with tag state of `CantMoveFolderIntoItself`.
/// 
/// About the `CantMoveFolderIntoItself` tag state: You cannot move a folder
/// into itself.
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithCantMoveFolderIntoItself;

/// 
/// Initializes union class with tag state of `TooManyFiles`.
/// 
/// About the `TooManyFiles` tag state: The operation would involve more than
/// 10,000 files and folders.
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithTooManyFiles;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXFILESRelocationError` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `FromLookup`.
/// 
/// - returns: Whether the union's current tag state has value `FromLookup`.
/// 
- (BOOL)isFromLookup;

/// 
/// Retrieves whether the union's current tag state has value `FromWrite`.
/// 
/// - returns: Whether the union's current tag state has value `FromWrite`.
/// 
- (BOOL)isFromWrite;

/// 
/// Retrieves whether the union's current tag state has value `To`.
/// 
/// - returns: Whether the union's current tag state has value `To`.
/// 
- (BOOL)isTo;

/// 
/// Retrieves whether the union's current tag state has value
/// `CantCopySharedFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `CantCopySharedFolder`.
/// 
- (BOOL)isCantCopySharedFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// `CantNestSharedFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `CantNestSharedFolder`.
/// 
- (BOOL)isCantNestSharedFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// `CantMoveFolderIntoItself`.
/// 
/// - returns: Whether the union's current tag state has value
/// `CantMoveFolderIntoItself`.
/// 
- (BOOL)isCantMoveFolderIntoItself;

/// 
/// Retrieves whether the union's current tag state has value `TooManyFiles`.
/// 
/// - returns: Whether the union's current tag state has value `TooManyFiles`.
/// 
- (BOOL)isTooManyFiles;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXFILESRelocationError` union.
/// 
@interface DBXFILESRelocationErrorSerializer : NSObject 

/// 
/// Serializes `DBXFILESRelocationError` instances.
/// 
///  - parameter instance: An instance of the `DBXFILESRelocationError` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXFILESRelocationError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXFILESRelocationError * _Nonnull)instance;

/// 
/// Deserializes `DBXFILESRelocationError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXFILESRelocationError` API object.
/// 
///  - returns: An instantiation of the `DBXFILESRelocationError` object.
/// 
+ (DBXFILESRelocationError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
