///
/// Auto-generated by Stone, do not modify.
///

#import "DBXFILESThumbnailSize.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXFILESThumbnailSize 

- (instancetype)initWithW32h32 {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailSizeW32h32;
    }
    return self;
}

- (instancetype)initWithW64h64 {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailSizeW64h64;
    }
    return self;
}

- (instancetype)initWithW128h128 {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailSizeW128h128;
    }
    return self;
}

- (instancetype)initWithW640h480 {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailSizeW640h480;
    }
    return self;
}

- (instancetype)initWithW1024h768 {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailSizeW1024h768;
    }
    return self;
}

- (BOOL)isW32h32 {
    return _tag == DBXFILESThumbnailSizeW32h32;
}

- (BOOL)isW64h64 {
    return _tag == DBXFILESThumbnailSizeW64h64;
}

- (BOOL)isW128h128 {
    return _tag == DBXFILESThumbnailSizeW128h128;
}

- (BOOL)isW640h480 {
    return _tag == DBXFILESThumbnailSizeW640h480;
}

- (BOOL)isW1024h768 {
    return _tag == DBXFILESThumbnailSizeW1024h768;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXFILESThumbnailSizeW32h32:
           return @"DBXFILESThumbnailSizeW32h32";
        case DBXFILESThumbnailSizeW64h64:
           return @"DBXFILESThumbnailSizeW64h64";
        case DBXFILESThumbnailSizeW128h128:
           return @"DBXFILESThumbnailSizeW128h128";
        case DBXFILESThumbnailSizeW640h480:
           return @"DBXFILESThumbnailSizeW640h480";
        case DBXFILESThumbnailSizeW1024h768:
           return @"DBXFILESThumbnailSizeW1024h768";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXFILESThumbnailSizeSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXFILESThumbnailSizeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXFILESThumbnailSizeSerializer serialize:self] description];
}

@end


@implementation DBXFILESThumbnailSizeSerializer 

+ (NSDictionary *)serialize:(DBXFILESThumbnailSize *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isW32h32]) {
        jsonDict[@".tag"] = @"w32h32";
    }
    else if ([valueObj isW64h64]) {
        jsonDict[@".tag"] = @"w64h64";
    }
    else if ([valueObj isW128h128]) {
        jsonDict[@".tag"] = @"w128h128";
    }
    else if ([valueObj isW640h480]) {
        jsonDict[@".tag"] = @"w640h480";
    }
    else if ([valueObj isW1024h768]) {
        jsonDict[@".tag"] = @"w1024h768";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXFILESThumbnailSize *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"w32h32"]) {
        return [[DBXFILESThumbnailSize alloc] initWithW32h32];
    }
    else if ([tag isEqualToString:@"w64h64"]) {
        return [[DBXFILESThumbnailSize alloc] initWithW64h64];
    }
    else if ([tag isEqualToString:@"w128h128"]) {
        return [[DBXFILESThumbnailSize alloc] initWithW128h128];
    }
    else if ([tag isEqualToString:@"w640h480"]) {
        return [[DBXFILESThumbnailSize alloc] initWithW640h480];
    }
    else if ([tag isEqualToString:@"w1024h768"]) {
        return [[DBXFILESThumbnailSize alloc] initWithW1024h768];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
