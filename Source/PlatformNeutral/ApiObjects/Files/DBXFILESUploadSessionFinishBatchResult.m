///
/// Auto-generated by Stone, do not modify.
///

#import "DBXFILESUploadSessionFinishBatchResult.h"
#import "DBXFILESUploadSessionFinishBatchResultEntry.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXFILESUploadSessionFinishBatchResult 

- (instancetype)initWithEntries:(NSArray<DBXFILESUploadSessionFinishBatchResultEntry *> *)entries {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](entries);

    self = [super init];
    if (self != nil) {
        _entries = entries;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXFILESUploadSessionFinishBatchResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXFILESUploadSessionFinishBatchResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXFILESUploadSessionFinishBatchResultSerializer serialize:self] description];
}

@end


@implementation DBXFILESUploadSessionFinishBatchResultSerializer 

+ (NSDictionary *)serialize:(DBXFILESUploadSessionFinishBatchResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"entries"] = [DBXArraySerializer serialize:valueObj.entries withBlock:^id(id elem) { return [DBXFILESUploadSessionFinishBatchResultEntrySerializer serialize:elem]; }];

    return jsonDict;
}

+ (DBXFILESUploadSessionFinishBatchResult *)deserialize:(NSDictionary *)valueDict {
    NSArray<DBXFILESUploadSessionFinishBatchResultEntry *> *entries = [DBXArraySerializer deserialize:valueDict[@"entries"] withBlock:^id(id elem) { return [DBXFILESUploadSessionFinishBatchResultEntrySerializer deserialize:elem]; }];

    return [[DBXFILESUploadSessionFinishBatchResult alloc] initWithEntries:entries];
}

@end
