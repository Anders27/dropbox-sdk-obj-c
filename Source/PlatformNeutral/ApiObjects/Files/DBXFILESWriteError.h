///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXFILESWriteConflictError;
@class DBXFILESWriteError;

/// 
/// The `DBXFILESWriteError` union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXFILESWriteError : NSObject <DBXSerializable> 

/// The `DBXFILESWriteErrorTag` enum type represents the possible tag states
/// that the `DBXFILESWriteError` union can exist in.
typedef NS_ENUM(NSInteger, DBXFILESWriteErrorTag) {
    /// (no description).
    DBXFILESWriteErrorMalformedPath,

    /// Couldn't write to the target path because there was something in the
    /// way.
    DBXFILESWriteErrorConflict,

    /// The user doesn't have permissions to write to the target location.
    DBXFILESWriteErrorNoWritePermission,

    /// The user doesn't have enough available space (bytes) to write more data.
    DBXFILESWriteErrorInsufficientSpace,

    /// Dropbox will not save the file or folder because of its name.
    DBXFILESWriteErrorDisallowedName,

    /// (no description).
    DBXFILESWriteErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXFILESWriteErrorTag tag;

/// (no description).
@property (nonatomic, readonly, copy) NSString * _Nullable malformedPath;

/// Couldn't write to the target path because there was something in the way.
@property (nonatomic, readonly) DBXFILESWriteConflictError * _Nonnull conflict;

/// Initializes union class with tag state of `MalformedPath`.
- (nonnull instancetype)initWithMalformedPath:(NSString * _Nullable)malformedPath;

/// Initializes union class with tag state of `Conflict`.
- (nonnull instancetype)initWithConflict:(DBXFILESWriteConflictError * _Nonnull)conflict;

/// Initializes union class with tag state of `NoWritePermission`.
- (nonnull instancetype)initWithNoWritePermission;

/// Initializes union class with tag state of `InsufficientSpace`.
- (nonnull instancetype)initWithInsufficientSpace;

/// Initializes union class with tag state of `DisallowedName`.
- (nonnull instancetype)initWithDisallowedName;

/// Initializes union class with tag state of `Other`.
- (nonnull instancetype)initWithOther;

/// Returns whether the union's current tag state has value `MalformedPath`.
- (BOOL)isMalformedPath;

/// Returns whether the union's current tag state has value `Conflict`.
- (BOOL)isConflict;

/// Returns whether the union's current tag state has value `NoWritePermission`.
- (BOOL)isNoWritePermission;

/// Returns whether the union's current tag state has value `InsufficientSpace`.
- (BOOL)isInsufficientSpace;

/// Returns whether the union's current tag state has value `DisallowedName`.
- (BOOL)isDisallowedName;

/// Returns whether the union's current tag state has value `Other`.
- (BOOL)isOther;

/// Returns a human-readable string representing the union's current tag state.
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXFILESWriteError` union.
/// 
@interface DBXFILESWriteErrorSerializer : NSObject 

/// Returns a json-compatible dictionary representation of the
/// `DBXFILESWriteError` object from an instantiation.
+ (NSDictionary * _Nonnull)serialize:(DBXFILESWriteError * _Nonnull)obj;

/// Returns an instantiation of the `DBXFILESWriteError` object from a
/// json-compatible dictionary representation.
+ (DBXFILESWriteError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
