///
/// Auto-generated by Stone, do not modify.
///

#import "DbxFilesListFolderLongpollError.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxFilesListFolderLongpollError 

- (instancetype)initWithReset {
    self = [super init];
    if (self != nil) {
        _tag = (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorReset;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorOther;
    }
    return self;
}

- (BOOL)isReset {
    return _tag == (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorReset;
}

- (BOOL)isOther {
    return _tag == (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorOther;
}

- (NSString *)getTagName {
    if (_tag == (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorReset) {
        return @"(FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorReset";
    }
    if (_tag == (FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorOther) {
        return @"(FilesListFolderLongpollErrorTag)FilesListFolderLongpollErrorOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxFilesListFolderLongpollErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxFilesListFolderLongpollErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxFilesListFolderLongpollErrorSerializer serialize:self] description];
}

@end


@implementation DbxFilesListFolderLongpollErrorSerializer 

+ (NSDictionary *)serialize:(DbxFilesListFolderLongpollError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isReset]) {
        jsonDict[@".tag"] = @"reset";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxFilesListFolderLongpollError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"reset"]) {
        return [[DbxFilesListFolderLongpollError alloc] initWithReset];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxFilesListFolderLongpollError alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
