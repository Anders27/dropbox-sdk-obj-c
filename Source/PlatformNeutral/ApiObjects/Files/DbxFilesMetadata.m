///
/// Auto-generated by Stone, do not modify.
///

#import "DbxFilesDeletedMetadata.h"
#import "DbxFilesFileMetadata.h"
#import "DbxFilesFolderMetadata.h"
#import "DbxFilesMetadata.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxFilesMetadata 

- (instancetype)initWithName:(NSString *)name pathLower:(NSString *)pathLower pathDisplay:(NSString *)pathDisplay parentSharedFolderId:(NSString *)parentSharedFolderId {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"]](parentSharedFolderId);

    self = [super init];
    if (self != nil) {
        _name = name;
        _pathLower = pathLower;
        _pathDisplay = pathDisplay;
        _parentSharedFolderId = parentSharedFolderId;
    }
    return self;
}

- (instancetype)initWithName:(NSString *)name {
    return [self initWithName:name pathLower:nil pathDisplay:nil parentSharedFolderId:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxFilesMetadataSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxFilesMetadataSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxFilesMetadataSerializer serialize:self] description];
}

@end


@implementation DbxFilesMetadataSerializer 

+ (NSDictionary *)serialize:(DbxFilesMetadata *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"name"] = [DbxStringSerializer serialize:valueObj.name];
    if (valueObj.pathLower != nil) {
        jsonDict[@"path_lower"] = [DbxStringSerializer serialize:valueObj.pathLower];
    }
    if (valueObj.pathDisplay != nil) {
        jsonDict[@"path_display"] = [DbxStringSerializer serialize:valueObj.pathDisplay];
    }
    if (valueObj.parentSharedFolderId != nil) {
        jsonDict[@"parent_shared_folder_id"] = [DbxStringSerializer serialize:valueObj.parentSharedFolderId];
    }

    if ([valueObj isKindOfClass:[DbxFilesFileMetadata class]]) {
        NSDictionary *subTypeFields = [DbxFilesFileMetadataSerializer serialize:(DbxFilesFileMetadata *)valueObj];
        for (NSString* key in subTypeFields) {
            jsonDict[key] = subTypeFields[key];
        }
        jsonDict[@".tag"] = @"file";
    }
    if ([valueObj isKindOfClass:[DbxFilesFolderMetadata class]]) {
        NSDictionary *subTypeFields = [DbxFilesFolderMetadataSerializer serialize:(DbxFilesFolderMetadata *)valueObj];
        for (NSString* key in subTypeFields) {
            jsonDict[key] = subTypeFields[key];
        }
        jsonDict[@".tag"] = @"folder";
    }
    if ([valueObj isKindOfClass:[DbxFilesDeletedMetadata class]]) {
        NSDictionary *subTypeFields = [DbxFilesDeletedMetadataSerializer serialize:(DbxFilesDeletedMetadata *)valueObj];
        for (NSString* key in subTypeFields) {
            jsonDict[key] = subTypeFields[key];
        }
        jsonDict[@".tag"] = @"deleted";
    }

    return jsonDict;
}

+ (DbxFilesMetadata *)deserialize:(NSDictionary *)valueDict {
    if ([valueDict[@".tag"] isEqualToString:@"file"]) {
        return [DbxFilesFileMetadataSerializer deserialize:valueDict];
    }
    if ([valueDict[@".tag"] isEqualToString:@"folder"]) {
        return [DbxFilesFolderMetadataSerializer deserialize:valueDict];
    }
    if ([valueDict[@".tag"] isEqualToString:@"deleted"]) {
        return [DbxFilesDeletedMetadataSerializer deserialize:valueDict];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
