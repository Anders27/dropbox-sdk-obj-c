///
/// Auto-generated by Stone, do not modify.
///

#import "DbxAsyncPollResultBase.h"
#import "DbxFilesFileMetadata.h"
#import "DbxFilesSaveUrlError.h"
#import "DbxFilesSaveUrlJobStatus.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxFilesSaveUrlJobStatus 

- (instancetype)initWithInProgress {
    self = [super init];
    if (self != nil) {
        _tag = (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusInProgress;
    }
    return self;
}

- (instancetype)initWithComplete:(DbxFilesFileMetadata *)complete {
    self = [super init];
    if (self != nil) {
        _tag = (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete;
        _complete = complete;
    }
    return self;
}

- (instancetype)initWithFailed:(DbxFilesSaveUrlError *)failed {
    self = [super init];
    if (self != nil) {
        _tag = (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed;
        _failed = failed;
    }
    return self;
}

- (BOOL)isInProgress {
    return _tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusInProgress;
}

- (BOOL)isComplete {
    return _tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete;
}

- (BOOL)isFailed {
    return _tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed;
}

- (NSString *)getTagName {
    if (_tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusInProgress) {
        return @"(FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusInProgress";
    }
    if (_tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete) {
        return @"(FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete";
    }
    if (_tag == (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed) {
        return @"(FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

- (DbxFilesFileMetadata *)complete {
    if (_tag != (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusComplete, but was %@.", [self getTagName]];
    }
    return _complete;
}

- (DbxFilesSaveUrlError *)failed {
    if (_tag != (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (FilesSaveUrlJobStatusTag)FilesSaveUrlJobStatusFailed, but was %@.", [self getTagName]];
    }
    return _failed;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxFilesSaveUrlJobStatusSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxFilesSaveUrlJobStatusSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxFilesSaveUrlJobStatusSerializer serialize:self] description];
}

@end


@implementation DbxFilesSaveUrlJobStatusSerializer 

+ (NSDictionary *)serialize:(DbxFilesSaveUrlJobStatus *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isInProgress]) {
        jsonDict[@".tag"] = @"in_progress";
    }
    else if ([valueObj isComplete]) {
        jsonDict[@"complete"] = [DbxFilesFileMetadataSerializer serialize:valueObj.complete];
        jsonDict[@".tag"] = @"complete";
    }
    else if ([valueObj isFailed]) {
        jsonDict[@"failed"] = [DbxFilesSaveUrlErrorSerializer serialize:valueObj.failed];
        jsonDict[@".tag"] = @"failed";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxFilesSaveUrlJobStatus *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"in_progress"]) {
        return [[DbxFilesSaveUrlJobStatus alloc] initWithInProgress];
    }
    if ([tag isEqualToString:@"complete"]) {
        DbxFilesFileMetadata *complete = [DbxFilesFileMetadataSerializer deserialize:valueDict[@"complete"]];
        return [[DbxFilesSaveUrlJobStatus alloc] initWithComplete:complete];
    }
    if ([tag isEqualToString:@"failed"]) {
        DbxFilesSaveUrlError *failed = [DbxFilesSaveUrlErrorSerializer deserialize:valueDict[@"failed"]];
        return [[DbxFilesSaveUrlJobStatus alloc] initWithFailed:failed];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
