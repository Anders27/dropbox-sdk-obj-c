///
/// Auto-generated by Stone, do not modify.
///

#import "DBXFILESThumbnailFormat.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXFILESThumbnailFormat 

- (instancetype)initWithJpeg {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailFormatJpeg;
    }
    return self;
}

- (instancetype)initWithPng {
    self = [super init];
    if (self != nil) {
        _tag = DBXFILESThumbnailFormatPng;
    }
    return self;
}

- (BOOL)isJpeg {
    return _tag == DBXFILESThumbnailFormatJpeg;
}

- (BOOL)isPng {
    return _tag == DBXFILESThumbnailFormatPng;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXFILESThumbnailFormatJpeg:
           return @"DBXFILESThumbnailFormatJpeg";
        case DBXFILESThumbnailFormatPng:
           return @"DBXFILESThumbnailFormatPng";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXFILESThumbnailFormatSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXFILESThumbnailFormatSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXFILESThumbnailFormatSerializer serialize:self] description];
}

@end


@implementation DBXFILESThumbnailFormatSerializer 

+ (NSDictionary *)serialize:(DBXFILESThumbnailFormat *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isJpeg]) {
        jsonDict[@".tag"] = @"jpeg";
    }
    else if ([valueObj isPng]) {
        jsonDict[@".tag"] = @"png";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXFILESThumbnailFormat *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"jpeg"]) {
        return [[DBXFILESThumbnailFormat alloc] initWithJpeg];
    }
    else if ([tag isEqualToString:@"png"]) {
        return [[DBXFILESThumbnailFormat alloc] initWithPng];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
