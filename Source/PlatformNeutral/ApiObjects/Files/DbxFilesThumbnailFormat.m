///
/// Auto-generated by Stone, do not modify.
///

#import "DbxFilesThumbnailFormat.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxFilesThumbnailFormat 

- (instancetype)initWithJpeg {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailFormatTag)FilesThumbnailFormatJpeg;
    }
    return self;
}

- (instancetype)initWithPng {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailFormatTag)FilesThumbnailFormatPng;
    }
    return self;
}

- (BOOL)isJpeg {
    return _tag == (FilesThumbnailFormatTag)FilesThumbnailFormatJpeg;
}

- (BOOL)isPng {
    return _tag == (FilesThumbnailFormatTag)FilesThumbnailFormatPng;
}

- (NSString *)getTagName {
    if (_tag == (FilesThumbnailFormatTag)FilesThumbnailFormatJpeg) {
        return @"(FilesThumbnailFormatTag)FilesThumbnailFormatJpeg";
    }
    if (_tag == (FilesThumbnailFormatTag)FilesThumbnailFormatPng) {
        return @"(FilesThumbnailFormatTag)FilesThumbnailFormatPng";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxFilesThumbnailFormatSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxFilesThumbnailFormatSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxFilesThumbnailFormatSerializer serialize:self] description];
}

@end


@implementation DbxFilesThumbnailFormatSerializer 

+ (NSDictionary *)serialize:(DbxFilesThumbnailFormat *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isJpeg]) {
        jsonDict[@".tag"] = @"jpeg";
    }
    else if ([valueObj isPng]) {
        jsonDict[@".tag"] = @"png";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxFilesThumbnailFormat *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"jpeg"]) {
        return [[DbxFilesThumbnailFormat alloc] initWithJpeg];
    }
    if ([tag isEqualToString:@"png"]) {
        return [[DbxFilesThumbnailFormat alloc] initWithPng];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
