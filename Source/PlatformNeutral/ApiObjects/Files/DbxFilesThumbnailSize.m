///
/// Auto-generated by Stone, do not modify.
///

#import "DbxFilesThumbnailSize.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxFilesThumbnailSize 

- (instancetype)initWithW32h32 {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailSizeTag)FilesThumbnailSizeW32h32;
    }
    return self;
}

- (instancetype)initWithW64h64 {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailSizeTag)FilesThumbnailSizeW64h64;
    }
    return self;
}

- (instancetype)initWithW128h128 {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailSizeTag)FilesThumbnailSizeW128h128;
    }
    return self;
}

- (instancetype)initWithW640h480 {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailSizeTag)FilesThumbnailSizeW640h480;
    }
    return self;
}

- (instancetype)initWithW1024h768 {
    self = [super init];
    if (self != nil) {
        _tag = (FilesThumbnailSizeTag)FilesThumbnailSizeW1024h768;
    }
    return self;
}

- (BOOL)isW32h32 {
    return _tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW32h32;
}

- (BOOL)isW64h64 {
    return _tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW64h64;
}

- (BOOL)isW128h128 {
    return _tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW128h128;
}

- (BOOL)isW640h480 {
    return _tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW640h480;
}

- (BOOL)isW1024h768 {
    return _tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW1024h768;
}

- (NSString *)getTagName {
    if (_tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW32h32) {
        return @"(FilesThumbnailSizeTag)FilesThumbnailSizeW32h32";
    }
    if (_tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW64h64) {
        return @"(FilesThumbnailSizeTag)FilesThumbnailSizeW64h64";
    }
    if (_tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW128h128) {
        return @"(FilesThumbnailSizeTag)FilesThumbnailSizeW128h128";
    }
    if (_tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW640h480) {
        return @"(FilesThumbnailSizeTag)FilesThumbnailSizeW640h480";
    }
    if (_tag == (FilesThumbnailSizeTag)FilesThumbnailSizeW1024h768) {
        return @"(FilesThumbnailSizeTag)FilesThumbnailSizeW1024h768";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxFilesThumbnailSizeSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxFilesThumbnailSizeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxFilesThumbnailSizeSerializer serialize:self] description];
}

@end


@implementation DbxFilesThumbnailSizeSerializer 

+ (NSDictionary *)serialize:(DbxFilesThumbnailSize *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isW32h32]) {
        jsonDict[@".tag"] = @"w32h32";
    }
    else if ([valueObj isW64h64]) {
        jsonDict[@".tag"] = @"w64h64";
    }
    else if ([valueObj isW128h128]) {
        jsonDict[@".tag"] = @"w128h128";
    }
    else if ([valueObj isW640h480]) {
        jsonDict[@".tag"] = @"w640h480";
    }
    else if ([valueObj isW1024h768]) {
        jsonDict[@".tag"] = @"w1024h768";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxFilesThumbnailSize *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"w32h32"]) {
        return [[DbxFilesThumbnailSize alloc] initWithW32h32];
    }
    if ([tag isEqualToString:@"w64h64"]) {
        return [[DbxFilesThumbnailSize alloc] initWithW64h64];
    }
    if ([tag isEqualToString:@"w128h128"]) {
        return [[DbxFilesThumbnailSize alloc] initWithW128h128];
    }
    if ([tag isEqualToString:@"w640h480"]) {
        return [[DbxFilesThumbnailSize alloc] initWithW640h480];
    }
    if ([tag isEqualToString:@"w1024h768"]) {
        return [[DbxFilesThumbnailSize alloc] initWithW1024h768];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
