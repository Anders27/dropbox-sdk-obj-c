///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DbxStoneSerializers.h"

@class DbxFilesWriteConflictError;
@class DbxFilesWriteError;

/// 
/// The DbxFilesWriteError union.
/// 
@interface DbxFilesWriteError : NSObject <DbxSerializable> 

typedef NS_ENUM(NSInteger, FilesWriteErrorTag) {
    /// (no description)
    FilesWriteErrorMalformedPath,
    /// Couldn't write to the target path because there was something in the
    /// way.
    FilesWriteErrorConflict,
    /// The user doesn't have permissions to write to the target location.
    FilesWriteErrorNoWritePermission,
    /// The user doesn't have enough available space (bytes) to write more data.
    FilesWriteErrorInsufficientSpace,
    /// Dropbox will not save the file or folder because of its name.
    FilesWriteErrorDisallowedName,
    /// (no description)
    FilesWriteErrorOther,
};

- (nonnull instancetype)initWithMalformedPath:(NSString * _Nullable)malformedPath;

- (nonnull instancetype)initWithConflict:(DbxFilesWriteConflictError * _Nonnull)conflict;

- (nonnull instancetype)initWithNoWritePermission;

- (nonnull instancetype)initWithInsufficientSpace;

- (nonnull instancetype)initWithDisallowedName;

- (nonnull instancetype)initWithOther;

- (BOOL)isMalformedPath;

- (BOOL)isConflict;

- (BOOL)isNoWritePermission;

- (BOOL)isInsufficientSpace;

- (BOOL)isDisallowedName;

- (BOOL)isOther;

- (NSString * _Nonnull)getTagName;

- (NSString * _Nonnull)description;

/// Current state of the DbxFilesWriteError union type.
@property (nonatomic) FilesWriteErrorTag tag;
@property (nonatomic, copy) NSString * _Nullable malformedPath;
@property (nonatomic) DbxFilesWriteConflictError * _Nonnull conflict;

@end


@interface DbxFilesWriteErrorSerializer : NSObject 

+ (NSDictionary * _Nonnull)serialize:(DbxFilesWriteError * _Nonnull)obj;

+ (DbxFilesWriteError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
