///
/// Auto-generated by Stone, do not modify.
///

#import "DBXPROPERTIESPropertyType.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXPROPERTIESPropertyType 

- (instancetype)initWithString {
    self = [super init];
    if (self) {
        _tag = DBXPROPERTIESPropertyTypeString;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self) {
        _tag = DBXPROPERTIESPropertyTypeOther;
    }
    return self;
}

- (BOOL)isString {
    return _tag == DBXPROPERTIESPropertyTypeString;
}

- (BOOL)isOther {
    return _tag == DBXPROPERTIESPropertyTypeOther;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXPROPERTIESPropertyTypeString:
           return @"DBXPROPERTIESPropertyTypeString";
        case DBXPROPERTIESPropertyTypeOther:
           return @"DBXPROPERTIESPropertyTypeOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXPROPERTIESPropertyTypeSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXPROPERTIESPropertyTypeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXPROPERTIESPropertyTypeSerializer serialize:self] description];
}

@end


@implementation DBXPROPERTIESPropertyTypeSerializer 

+ (NSDictionary *)serialize:(DBXPROPERTIESPropertyType *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isString]) {
        jsonDict[@".tag"] = @"string";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXPROPERTIESPropertyType *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"string"]) {
        return [[DBXPROPERTIESPropertyType alloc] initWithString];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXPROPERTIESPropertyType alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
