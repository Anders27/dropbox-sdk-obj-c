///
/// Auto-generated by Stone, do not modify.
///

#import "DBXPROPERTIESListPropertyTemplateIds.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXPROPERTIESListPropertyTemplateIds 

- (instancetype)initWithTemplateIds:(NSArray<NSString *> *)templateIds {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:[DBXStoneValidators stringValidator:[NSNumber numberWithInt:1] maxLength:nil pattern:@"(/|ptid:).*"]](templateIds);

    self = [super init];
    if (self != nil) {
        _templateIds = templateIds;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXPROPERTIESListPropertyTemplateIdsSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXPROPERTIESListPropertyTemplateIdsSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXPROPERTIESListPropertyTemplateIdsSerializer serialize:self] description];
}

@end


@implementation DBXPROPERTIESListPropertyTemplateIdsSerializer 

+ (NSDictionary *)serialize:(DBXPROPERTIESListPropertyTemplateIds *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"template_ids"] = [DBXArraySerializer serialize:valueObj.templateIds withBlock:^id(id elem) { return elem; }];

    return jsonDict;
}

+ (DBXPROPERTIESListPropertyTemplateIds *)deserialize:(NSDictionary *)valueDict {
    NSArray<NSString *> *templateIds = [DBXArraySerializer deserialize:valueDict[@"template_ids"] withBlock:^id(id elem) { return elem; }];

    return [[DBXPROPERTIESListPropertyTemplateIds alloc] initWithTemplateIds:templateIds];
}

@end
