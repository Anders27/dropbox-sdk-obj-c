///
/// Auto-generated by Stone, do not modify.
///

#import "DBXPROPERTIESPropertyFieldTemplate.h"
#import "DBXPROPERTIESPropertyGroupTemplate.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXPROPERTIESPropertyGroupTemplate 

- (instancetype)initWithName:(NSString *)name description_:(NSString *)description_ fields:(NSArray<DBXPROPERTIESPropertyFieldTemplate *> *)fields {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](fields);

    self = [super init];
    if (self != nil) {
        _name = name;
        _description_ = description_;
        _fields = fields;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXPROPERTIESPropertyGroupTemplateSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXPROPERTIESPropertyGroupTemplateSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXPROPERTIESPropertyGroupTemplateSerializer serialize:self] description];
}

@end


@implementation DBXPROPERTIESPropertyGroupTemplateSerializer 

+ (NSDictionary *)serialize:(DBXPROPERTIESPropertyGroupTemplate *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"name"] = valueObj.name;
    jsonDict[@"description"] = valueObj.description_;
    jsonDict[@"fields"] = [DBXArraySerializer serialize:valueObj.fields withBlock:^id(id elem) { return [DBXPROPERTIESPropertyFieldTemplateSerializer serialize:elem]; }];

    return jsonDict;
}

+ (DBXPROPERTIESPropertyGroupTemplate *)deserialize:(NSDictionary *)valueDict {
    NSString *name = valueDict[@"name"];
    NSString *description_ = valueDict[@"description"];
    NSArray<DBXPROPERTIESPropertyFieldTemplate *> *fields = [DBXArraySerializer deserialize:valueDict[@"fields"] withBlock:^id(id elem) { return [DBXPROPERTIESPropertyFieldTemplateSerializer deserialize:elem]; }];

    return [[DBXPROPERTIESPropertyGroupTemplate alloc] initWithName:name description_:description_ fields:fields];
}

@end
