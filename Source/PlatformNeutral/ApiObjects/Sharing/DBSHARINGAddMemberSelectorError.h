///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGAddMemberSelectorError;

#pragma mark - API Object

/// 
/// The AddMemberSelectorError union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGAddMemberSelectorError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGAddMemberSelectorErrorTag enum type represents the possible tag
/// states with which the DBSHARINGAddMemberSelectorError union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGAddMemberSelectorErrorTag) {
    /// Automatically created groups can only be added to team folders.
    DBSHARINGAddMemberSelectorErrorAutomaticGroup,

    /// The value is the ID that could not be identified.
    DBSHARINGAddMemberSelectorErrorInvalidDropboxId,

    /// The value is the e-email address that is malformed.
    DBSHARINGAddMemberSelectorErrorInvalidEmail,

    /// The value is the ID of the Dropbox user with an unverified e-mail
    /// address.  Invite unverified users by e-mail address instead of by their
    /// Dropbox ID.
    DBSHARINGAddMemberSelectorErrorUnverifiedDropboxId,

    /// At least one of the specified groups in members in AddFolderMemberArg is
    /// deleted.
    DBSHARINGAddMemberSelectorErrorGroupDeleted,

    /// Sharing to a group that is not on the current user's team.
    DBSHARINGAddMemberSelectorErrorGroupNotOnTeam,

    /// (no description).
    DBSHARINGAddMemberSelectorErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGAddMemberSelectorErrorTag tag;

/// The value is the ID that could not be identified. Ensure the
/// isInvalidDropboxId method returns true before accessing, otherwise a runtime
/// exception will be raised.
@property (nonatomic, readonly, copy) NSString * _Nonnull invalidDropboxId;

/// The value is the e-email address that is malformed. Ensure the
/// isInvalidEmail method returns true before accessing, otherwise a runtime
/// exception will be raised.
@property (nonatomic, readonly, copy) NSString * _Nonnull invalidEmail;

/// The value is the ID of the Dropbox user with an unverified e-mail address.
/// Invite unverified users by e-mail address instead of by their Dropbox ID.
/// Ensure the isUnverifiedDropboxId method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly, copy) NSString * _Nonnull unverifiedDropboxId;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of AutomaticGroup.
/// 
/// About the AutomaticGroup tag state: Automatically created groups can only be
/// added to team folders.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithAutomaticGroup;

/// 
/// Initializes union class with tag state of InvalidDropboxId.
/// 
/// About the InvalidDropboxId tag state: The value is the ID that could not be
/// identified.
/// 
/// @param invalidDropboxId The value is the ID that could not be identified.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithInvalidDropboxId:(NSString * _Nonnull)invalidDropboxId;

/// 
/// Initializes union class with tag state of InvalidEmail.
/// 
/// About the InvalidEmail tag state: The value is the e-email address that is
/// malformed.
/// 
/// @param invalidEmail The value is the e-email address that is malformed.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithInvalidEmail:(NSString * _Nonnull)invalidEmail;

/// 
/// Initializes union class with tag state of UnverifiedDropboxId.
/// 
/// About the UnverifiedDropboxId tag state: The value is the ID of the Dropbox
/// user with an unverified e-mail address.  Invite unverified users by e-mail
/// address instead of by their Dropbox ID.
/// 
/// @param unverifiedDropboxId The value is the ID of the Dropbox user with an
/// unverified e-mail address.  Invite unverified users by e-mail address
/// instead of by their Dropbox ID.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithUnverifiedDropboxId:(NSString * _Nonnull)unverifiedDropboxId;

/// 
/// Initializes union class with tag state of GroupDeleted.
/// 
/// About the GroupDeleted tag state: At least one of the specified groups in
/// :field:`AddFolderMemberArg.members` is deleted.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithGroupDeleted;

/// 
/// Initializes union class with tag state of GroupNotOnTeam.
/// 
/// About the GroupNotOnTeam tag state: Sharing to a group that is not on the
/// current user's team.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithGroupNotOnTeam;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBSHARINGAddMemberSelectorError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value AutomaticGroup.
/// 
/// @return Whether the union's current tag state has value AutomaticGroup.
/// 
- (BOOL)isAutomaticGroup;

/// 
/// Retrieves whether the union's current tag state has value InvalidDropboxId.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// invalidDropboxId property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value InvalidDropboxId.
/// 
- (BOOL)isInvalidDropboxId;

/// 
/// Retrieves whether the union's current tag state has value InvalidEmail.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// invalidEmail property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value InvalidEmail.
/// 
- (BOOL)isInvalidEmail;

/// 
/// Retrieves whether the union's current tag state has value
/// UnverifiedDropboxId.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// unverifiedDropboxId property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value UnverifiedDropboxId.
/// 
- (BOOL)isUnverifiedDropboxId;

/// 
/// Retrieves whether the union's current tag state has value GroupDeleted.
/// 
/// @return Whether the union's current tag state has value GroupDeleted.
/// 
- (BOOL)isGroupDeleted;

/// 
/// Retrieves whether the union's current tag state has value GroupNotOnTeam.
/// 
/// @return Whether the union's current tag state has value GroupNotOnTeam.
/// 
- (BOOL)isGroupNotOnTeam;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGAddMemberSelectorError union.
/// 
@interface DBSHARINGAddMemberSelectorErrorSerializer : NSObject 

/// 
/// Serializes DBSHARINGAddMemberSelectorError instances.
/// 
/// @param instance An instance of the DBSHARINGAddMemberSelectorError API
/// object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGAddMemberSelectorError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGAddMemberSelectorError * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGAddMemberSelectorError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGAddMemberSelectorError API object.
/// 
/// @return An instantiation of the DBSHARINGAddMemberSelectorError object.
/// 
+ (DBSHARINGAddMemberSelectorError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
