///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBSHARINGFolderAction;

#pragma mark - API Object

///
/// The FolderAction union.
///
/// Actions that may be taken on shared folders.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBSHARINGFolderAction : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBSHARINGFolderActionTag enum type represents the possible tag states with which the
/// DBSHARINGFolderAction union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGFolderActionTag) {
  /// Change folder options, such as who can be invited to join the folder.
  DBSHARINGFolderActionChangeOptions,

  /// Change or edit contents of the folder.
  DBSHARINGFolderActionEditContents,

  /// Invite a user or group to join the folder with read and write permission.
  DBSHARINGFolderActionInviteEditor,

  /// Invite a user or group to join the folder with read permission.
  DBSHARINGFolderActionInviteViewer,

  /// Invite a user or group to join the folder with read permission but no comment permissions.
  DBSHARINGFolderActionInviteViewerNoComment,

  /// Relinquish one's own membership in the folder.
  DBSHARINGFolderActionRelinquishMembership,

  /// Unmount the folder.
  DBSHARINGFolderActionUnmount,

  /// Stop sharing this folder.
  DBSHARINGFolderActionUnshare,

  /// Keep a copy of the contents upon leaving or being kicked from the folder.
  DBSHARINGFolderActionLeaveACopy,

  /// Create a shared link for folder.
  DBSHARINGFolderActionShareLink,

  /// (no description).
  DBSHARINGFolderActionOther,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBSHARINGFolderActionTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of ChangeOptions.
///
/// About the ChangeOptions tag state: Change folder options, such as who can be invited to join the
/// folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithChangeOptions;

///
/// Initializes union class with tag state of EditContents.
///
/// About the EditContents tag state: Change or edit contents of the folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithEditContents;

///
/// Initializes union class with tag state of InviteEditor.
///
/// About the InviteEditor tag state: Invite a user or group to join the folder with read and write
/// permission.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithInviteEditor;

///
/// Initializes union class with tag state of InviteViewer.
///
/// About the InviteViewer tag state: Invite a user or group to join the folder with read
/// permission.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithInviteViewer;

///
/// Initializes union class with tag state of InviteViewerNoComment.
///
/// About the InviteViewerNoComment tag state: Invite a user or group to join the folder with read
/// permission but no comment permissions.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithInviteViewerNoComment;

///
/// Initializes union class with tag state of RelinquishMembership.
///
/// About the RelinquishMembership tag state: Relinquish one's own membership in the folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithRelinquishMembership;

///
/// Initializes union class with tag state of Unmount.
///
/// About the Unmount tag state: Unmount the folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithUnmount;

///
/// Initializes union class with tag state of Unshare.
///
/// About the Unshare tag state: Stop sharing this folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithUnshare;

///
/// Initializes union class with tag state of LeaveACopy.
///
/// About the LeaveACopy tag state: Keep a copy of the contents upon leaving or being kicked from
/// the folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithLeaveACopy;

///
/// Initializes union class with tag state of ShareLink.
///
/// About the ShareLink tag state: Create a shared link for folder.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithShareLink;

///
/// Initializes union class with tag state of Other.
///
/// @return An initialized DBSHARINGFolderAction instance.
///
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value ChangeOptions.
///
/// @return Whether the union's current tag state has value ChangeOptions.
///
- (BOOL)isChangeOptions;

///
/// Retrieves whether the union's current tag state has value EditContents.
///
/// @return Whether the union's current tag state has value EditContents.
///
- (BOOL)isEditContents;

///
/// Retrieves whether the union's current tag state has value InviteEditor.
///
/// @return Whether the union's current tag state has value InviteEditor.
///
- (BOOL)isInviteEditor;

///
/// Retrieves whether the union's current tag state has value InviteViewer.
///
/// @return Whether the union's current tag state has value InviteViewer.
///
- (BOOL)isInviteViewer;

///
/// Retrieves whether the union's current tag state has value InviteViewerNoComment.
///
/// @return Whether the union's current tag state has value InviteViewerNoComment.
///
- (BOOL)isInviteViewerNoComment;

///
/// Retrieves whether the union's current tag state has value RelinquishMembership.
///
/// @return Whether the union's current tag state has value RelinquishMembership.
///
- (BOOL)isRelinquishMembership;

///
/// Retrieves whether the union's current tag state has value Unmount.
///
/// @return Whether the union's current tag state has value Unmount.
///
- (BOOL)isUnmount;

///
/// Retrieves whether the union's current tag state has value Unshare.
///
/// @return Whether the union's current tag state has value Unshare.
///
- (BOOL)isUnshare;

///
/// Retrieves whether the union's current tag state has value LeaveACopy.
///
/// @return Whether the union's current tag state has value LeaveACopy.
///
- (BOOL)isLeaveACopy;

///
/// Retrieves whether the union's current tag state has value ShareLink.
///
/// @return Whether the union's current tag state has value ShareLink.
///
- (BOOL)isShareLink;

///
/// Retrieves whether the union's current tag state has value Other.
///
/// @return Whether the union's current tag state has value Other.
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBSHARINGFolderAction union.
///
@interface DBSHARINGFolderActionSerializer : NSObject

///
/// Serializes DBSHARINGFolderAction instances.
///
/// @param instance An instance of the DBSHARINGFolderAction API object.
///
/// @return A json-compatible dictionary representation of the DBSHARINGFolderAction API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGFolderAction * _Nonnull)instance;

///
/// Deserializes DBSHARINGFolderAction instances.
///
/// @param dict A json-compatible dictionary representation of the DBSHARINGFolderAction API object.
///
/// @return An instantiation of the DBSHARINGFolderAction object.
///
+ (DBSHARINGFolderAction * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
