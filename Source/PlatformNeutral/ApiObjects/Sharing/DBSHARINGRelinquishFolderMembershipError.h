///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGRelinquishFolderMembershipError;
@class DBSHARINGSharedFolderAccessError;

#pragma mark - API Object

/// 
/// The RelinquishFolderMembershipError union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGRelinquishFolderMembershipError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGRelinquishFolderMembershipErrorTag enum type represents the
/// possible tag states with which the DBSHARINGRelinquishFolderMembershipError
/// union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGRelinquishFolderMembershipErrorTag) {
    /// (no description).
    DBSHARINGRelinquishFolderMembershipErrorAccessError,

    /// The current user is the owner of the shared folder. Owners cannot
    /// relinquish membership to their own folders. Try unsharing or
    /// transferring ownership first.
    DBSHARINGRelinquishFolderMembershipErrorFolderOwner,

    /// The shared folder is currently mounted.  Unmount the shared folder
    /// before relinquishing membership.
    DBSHARINGRelinquishFolderMembershipErrorMounted,

    /// The current user has access to the shared folder via a group.  You can't
    /// relinquish membership to folders shared via groups.
    DBSHARINGRelinquishFolderMembershipErrorGroupAccess,

    /// This action cannot be performed on a team shared folder.
    DBSHARINGRelinquishFolderMembershipErrorTeamFolder,

    /// The current user does not have permission to perform this action.
    DBSHARINGRelinquishFolderMembershipErrorNoPermission,

    /// (no description).
    DBSHARINGRelinquishFolderMembershipErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGRelinquishFolderMembershipErrorTag tag;

/// (no description). Ensure the isAccessError method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGSharedFolderAccessError * _Nonnull accessError;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of AccessError.
/// 
/// @param accessError (no description).
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithAccessError:(DBSHARINGSharedFolderAccessError * _Nonnull)accessError;

/// 
/// Initializes union class with tag state of FolderOwner.
/// 
/// About the FolderOwner tag state: The current user is the owner of the shared
/// folder. Owners cannot relinquish membership to their own folders. Try
/// unsharing or transferring ownership first.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithFolderOwner;

/// 
/// Initializes union class with tag state of Mounted.
/// 
/// About the Mounted tag state: The shared folder is currently mounted.
/// Unmount the shared folder before relinquishing membership.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithMounted;

/// 
/// Initializes union class with tag state of GroupAccess.
/// 
/// About the GroupAccess tag state: The current user has access to the shared
/// folder via a group.  You can't relinquish membership to folders shared via
/// groups.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithGroupAccess;

/// 
/// Initializes union class with tag state of TeamFolder.
/// 
/// About the TeamFolder tag state: This action cannot be performed on a team
/// shared folder.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithTeamFolder;

/// 
/// Initializes union class with tag state of NoPermission.
/// 
/// About the NoPermission tag state: The current user does not have permission
/// to perform this action.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithNoPermission;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBSHARINGRelinquishFolderMembershipError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value AccessError.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// accessError property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value AccessError.
/// 
- (BOOL)isAccessError;

/// 
/// Retrieves whether the union's current tag state has value FolderOwner.
/// 
/// @return Whether the union's current tag state has value FolderOwner.
/// 
- (BOOL)isFolderOwner;

/// 
/// Retrieves whether the union's current tag state has value Mounted.
/// 
/// @return Whether the union's current tag state has value Mounted.
/// 
- (BOOL)isMounted;

/// 
/// Retrieves whether the union's current tag state has value GroupAccess.
/// 
/// @return Whether the union's current tag state has value GroupAccess.
/// 
- (BOOL)isGroupAccess;

/// 
/// Retrieves whether the union's current tag state has value TeamFolder.
/// 
/// @return Whether the union's current tag state has value TeamFolder.
/// 
- (BOOL)isTeamFolder;

/// 
/// Retrieves whether the union's current tag state has value NoPermission.
/// 
/// @return Whether the union's current tag state has value NoPermission.
/// 
- (BOOL)isNoPermission;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGRelinquishFolderMembershipError
/// union.
/// 
@interface DBSHARINGRelinquishFolderMembershipErrorSerializer : NSObject 

/// 
/// Serializes DBSHARINGRelinquishFolderMembershipError instances.
/// 
/// @param instance An instance of the DBSHARINGRelinquishFolderMembershipError
/// API object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGRelinquishFolderMembershipError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGRelinquishFolderMembershipError * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGRelinquishFolderMembershipError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGRelinquishFolderMembershipError API object.
/// 
/// @return An instantiation of the DBSHARINGRelinquishFolderMembershipError
/// object.
/// 
+ (DBSHARINGRelinquishFolderMembershipError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
