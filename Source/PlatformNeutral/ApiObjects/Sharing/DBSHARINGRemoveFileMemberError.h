///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGMemberAccessLevelResult;
@class DBSHARINGRemoveFileMemberError;
@class DBSHARINGSharingFileAccessError;
@class DBSHARINGSharingUserError;

#pragma mark - API Object

/// 
/// The RemoveFileMemberError union.
/// 
/// Errors for removeFileMember2.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGRemoveFileMemberError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGRemoveFileMemberErrorTag enum type represents the possible tag
/// states with which the DBSHARINGRemoveFileMemberError union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGRemoveFileMemberErrorTag) {
    /// (no description).
    DBSHARINGRemoveFileMemberErrorUserError,

    /// (no description).
    DBSHARINGRemoveFileMemberErrorAccessError,

    /// This member does not have explicit access to the file and therefore
    /// cannot be removed. The return value is the access that a user might have
    /// to the file from a parent folder.
    DBSHARINGRemoveFileMemberErrorNoExplicitAccess,

    /// (no description).
    DBSHARINGRemoveFileMemberErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGRemoveFileMemberErrorTag tag;

/// (no description). Ensure the isUserError method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGSharingUserError * _Nonnull userError;

/// (no description). Ensure the isAccessError method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGSharingFileAccessError * _Nonnull accessError;

/// This member does not have explicit access to the file and therefore cannot
/// be removed. The return value is the access that a user might have to the
/// file from a parent folder. Ensure the isNoExplicitAccess method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGMemberAccessLevelResult * _Nonnull noExplicitAccess;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of UserError.
/// 
/// @param userError (no description).
/// 
/// @return An initialized DBSHARINGRemoveFileMemberError instance.
/// 
- (nonnull instancetype)initWithUserError:(DBSHARINGSharingUserError * _Nonnull)userError;

/// 
/// Initializes union class with tag state of AccessError.
/// 
/// @param accessError (no description).
/// 
/// @return An initialized DBSHARINGRemoveFileMemberError instance.
/// 
- (nonnull instancetype)initWithAccessError:(DBSHARINGSharingFileAccessError * _Nonnull)accessError;

/// 
/// Initializes union class with tag state of NoExplicitAccess.
/// 
/// About the NoExplicitAccess tag state: This member does not have explicit
/// access to the file and therefore cannot be removed. The return value is the
/// access that a user might have to the file from a parent folder.
/// 
/// @param noExplicitAccess This member does not have explicit access to the
/// file and therefore cannot be removed. The return value is the access that a
/// user might have to the file from a parent folder.
/// 
/// @return An initialized DBSHARINGRemoveFileMemberError instance.
/// 
- (nonnull instancetype)initWithNoExplicitAccess:(DBSHARINGMemberAccessLevelResult * _Nonnull)noExplicitAccess;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBSHARINGRemoveFileMemberError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value UserError.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// userError property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value UserError.
/// 
- (BOOL)isUserError;

/// 
/// Retrieves whether the union's current tag state has value AccessError.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// accessError property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value AccessError.
/// 
- (BOOL)isAccessError;

/// 
/// Retrieves whether the union's current tag state has value NoExplicitAccess.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// noExplicitAccess property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value NoExplicitAccess.
/// 
- (BOOL)isNoExplicitAccess;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGRemoveFileMemberError union.
/// 
@interface DBSHARINGRemoveFileMemberErrorSerializer : NSObject 

/// 
/// Serializes DBSHARINGRemoveFileMemberError instances.
/// 
/// @param instance An instance of the DBSHARINGRemoveFileMemberError API
/// object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGRemoveFileMemberError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGRemoveFileMemberError * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGRemoveFileMemberError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGRemoveFileMemberError API object.
/// 
/// @return An instantiation of the DBSHARINGRemoveFileMemberError object.
/// 
+ (DBSHARINGRemoveFileMemberError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
