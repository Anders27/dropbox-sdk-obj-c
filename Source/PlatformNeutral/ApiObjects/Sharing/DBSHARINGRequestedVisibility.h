///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGRequestedVisibility;

#pragma mark - API Object

/// 
/// The RequestedVisibility union.
/// 
/// The access permission that can be requested by the caller for the shared
/// link. Note that the final resolved visibility of the shared link takes into
/// account other aspects, such as team and shared folder settings. Check the
/// ResolvedVisibility for more info on the possible resolved visibility values
/// of shared links.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGRequestedVisibility : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGRequestedVisibilityTag enum type represents the possible tag
/// states with which the DBSHARINGRequestedVisibility union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGRequestedVisibilityTag) {
    /// Anyone who has received the link can access it. No login required.
    DBSHARINGRequestedVisibilityPublic,

    /// Only members of the same team can access the link. Login is required.
    DBSHARINGRequestedVisibilityTeamOnly,

    /// A link-specific password is required to access the link. Login is not
    /// required.
    DBSHARINGRequestedVisibilityPassword,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGRequestedVisibilityTag tag;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of Public.
/// 
/// About the Public tag state: Anyone who has received the link can access it.
/// No login required.
/// 
/// @return An initialized DBSHARINGRequestedVisibility instance.
/// 
- (nonnull instancetype)initWithPublic;

/// 
/// Initializes union class with tag state of TeamOnly.
/// 
/// About the TeamOnly tag state: Only members of the same team can access the
/// link. Login is required.
/// 
/// @return An initialized DBSHARINGRequestedVisibility instance.
/// 
- (nonnull instancetype)initWithTeamOnly;

/// 
/// Initializes union class with tag state of Password.
/// 
/// About the Password tag state: A link-specific password is required to access
/// the link. Login is not required.
/// 
/// @return An initialized DBSHARINGRequestedVisibility instance.
/// 
- (nonnull instancetype)initWithPassword;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value Public.
/// 
/// @return Whether the union's current tag state has value Public.
/// 
- (BOOL)isPublic;

/// 
/// Retrieves whether the union's current tag state has value TeamOnly.
/// 
/// @return Whether the union's current tag state has value TeamOnly.
/// 
- (BOOL)isTeamOnly;

/// 
/// Retrieves whether the union's current tag state has value Password.
/// 
/// @return Whether the union's current tag state has value Password.
/// 
- (BOOL)isPassword;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGRequestedVisibility union.
/// 
@interface DBSHARINGRequestedVisibilitySerializer : NSObject 

/// 
/// Serializes DBSHARINGRequestedVisibility instances.
/// 
/// @param instance An instance of the DBSHARINGRequestedVisibility API object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGRequestedVisibility API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGRequestedVisibility * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGRequestedVisibility instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGRequestedVisibility API object.
/// 
/// @return An instantiation of the DBSHARINGRequestedVisibility object.
/// 
+ (DBSHARINGRequestedVisibility * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
