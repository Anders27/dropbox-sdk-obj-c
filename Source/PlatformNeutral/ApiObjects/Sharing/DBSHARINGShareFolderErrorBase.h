///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGShareFolderErrorBase;
@class DBSHARINGSharePathError;

#pragma mark - API Object

/// 
/// The ShareFolderErrorBase union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGShareFolderErrorBase : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGShareFolderErrorBaseTag enum type represents the possible tag
/// states with which the DBSHARINGShareFolderErrorBase union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGShareFolderErrorBaseTag) {
    /// The current user's e-mail address is unverified.
    DBSHARINGShareFolderErrorBaseEmailUnverified,

    /// path in ShareFolderArg is invalid.
    DBSHARINGShareFolderErrorBaseBadPath,

    /// Team policy is more restrictive than memberPolicy in ShareFolderArg.
    DBSHARINGShareFolderErrorBaseTeamPolicyDisallowsMemberPolicy,

    /// The current user's account is not allowed to select the specified
    /// sharedLinkPolicy in ShareFolderArg.
    DBSHARINGShareFolderErrorBaseDisallowedSharedLinkPolicy,

    /// (no description).
    DBSHARINGShareFolderErrorBaseOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGShareFolderErrorBaseTag tag;

/// path in ShareFolderArg is invalid. Ensure the isBadPath method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGSharePathError * _Nonnull badPath;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of EmailUnverified.
/// 
/// About the EmailUnverified tag state: The current user's e-mail address is
/// unverified.
/// 
/// @return An initialized DBSHARINGShareFolderErrorBase instance.
/// 
- (nonnull instancetype)initWithEmailUnverified;

/// 
/// Initializes union class with tag state of BadPath.
/// 
/// About the BadPath tag state: :field:`ShareFolderArg.path` is invalid.
/// 
/// @param badPath :field:`ShareFolderArg.path` is invalid.
/// 
/// @return An initialized DBSHARINGShareFolderErrorBase instance.
/// 
- (nonnull instancetype)initWithBadPath:(DBSHARINGSharePathError * _Nonnull)badPath;

/// 
/// Initializes union class with tag state of TeamPolicyDisallowsMemberPolicy.
/// 
/// About the TeamPolicyDisallowsMemberPolicy tag state: Team policy is more
/// restrictive than :field:`ShareFolderArg.member_policy`.
/// 
/// @return An initialized DBSHARINGShareFolderErrorBase instance.
/// 
- (nonnull instancetype)initWithTeamPolicyDisallowsMemberPolicy;

/// 
/// Initializes union class with tag state of DisallowedSharedLinkPolicy.
/// 
/// About the DisallowedSharedLinkPolicy tag state: The current user's account
/// is not allowed to select the specified
/// :field:`ShareFolderArg.shared_link_policy`.
/// 
/// @return An initialized DBSHARINGShareFolderErrorBase instance.
/// 
- (nonnull instancetype)initWithDisallowedSharedLinkPolicy;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBSHARINGShareFolderErrorBase instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value EmailUnverified.
/// 
/// @return Whether the union's current tag state has value EmailUnverified.
/// 
- (BOOL)isEmailUnverified;

/// 
/// Retrieves whether the union's current tag state has value BadPath.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// badPath property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value BadPath.
/// 
- (BOOL)isBadPath;

/// 
/// Retrieves whether the union's current tag state has value
/// TeamPolicyDisallowsMemberPolicy.
/// 
/// @return Whether the union's current tag state has value
/// TeamPolicyDisallowsMemberPolicy.
/// 
- (BOOL)isTeamPolicyDisallowsMemberPolicy;

/// 
/// Retrieves whether the union's current tag state has value
/// DisallowedSharedLinkPolicy.
/// 
/// @return Whether the union's current tag state has value
/// DisallowedSharedLinkPolicy.
/// 
- (BOOL)isDisallowedSharedLinkPolicy;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGShareFolderErrorBase union.
/// 
@interface DBSHARINGShareFolderErrorBaseSerializer : NSObject 

/// 
/// Serializes DBSHARINGShareFolderErrorBase instances.
/// 
/// @param instance An instance of the DBSHARINGShareFolderErrorBase API object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGShareFolderErrorBase API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGShareFolderErrorBase * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGShareFolderErrorBase instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGShareFolderErrorBase API object.
/// 
/// @return An instantiation of the DBSHARINGShareFolderErrorBase object.
/// 
+ (DBSHARINGShareFolderErrorBase * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
