///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBSHARINGSharePathError;
@class DBSHARINGSharedFolderMetadata;

#pragma mark - API Object

/// 
/// The SharePathError union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBSHARINGSharePathError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBSHARINGSharePathErrorTag enum type represents the possible tag states
/// with which the DBSHARINGSharePathError union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGSharePathErrorTag) {
    /// A file is at the specified path.
    DBSHARINGSharePathErrorIsFile,

    /// We do not support sharing a folder inside a shared folder.
    DBSHARINGSharePathErrorInsideSharedFolder,

    /// We do not support shared folders that contain shared folders.
    DBSHARINGSharePathErrorContainsSharedFolder,

    /// We do not support sharing an app folder.
    DBSHARINGSharePathErrorIsAppFolder,

    /// We do not support sharing a folder inside an app folder.
    DBSHARINGSharePathErrorInsideAppFolder,

    /// A public folder can't be shared this way. Use a public link instead.
    DBSHARINGSharePathErrorIsPublicFolder,

    /// A folder inside a public folder can't be shared this way. Use a public
    /// link instead.
    DBSHARINGSharePathErrorInsidePublicFolder,

    /// Folder is already shared. Contains metadata about the existing shared
    /// folder.
    DBSHARINGSharePathErrorAlreadyShared,

    /// Path is not valid.
    DBSHARINGSharePathErrorInvalidPath,

    /// We do not support sharing a Mac OS X package.
    DBSHARINGSharePathErrorIsOsxPackage,

    /// We do not support sharing a folder inside a Mac OS X package.
    DBSHARINGSharePathErrorInsideOsxPackage,

    /// (no description).
    DBSHARINGSharePathErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBSHARINGSharePathErrorTag tag;

/// Folder is already shared. Contains metadata about the existing shared
/// folder. Ensure the isAlreadyShared method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBSHARINGSharedFolderMetadata * _Nonnull alreadyShared;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of IsFile.
/// 
/// About the IsFile tag state: A file is at the specified path.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithIsFile;

/// 
/// Initializes union class with tag state of InsideSharedFolder.
/// 
/// About the InsideSharedFolder tag state: We do not support sharing a folder
/// inside a shared folder.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithInsideSharedFolder;

/// 
/// Initializes union class with tag state of ContainsSharedFolder.
/// 
/// About the ContainsSharedFolder tag state: We do not support shared folders
/// that contain shared folders.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithContainsSharedFolder;

/// 
/// Initializes union class with tag state of IsAppFolder.
/// 
/// About the IsAppFolder tag state: We do not support sharing an app folder.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithIsAppFolder;

/// 
/// Initializes union class with tag state of InsideAppFolder.
/// 
/// About the InsideAppFolder tag state: We do not support sharing a folder
/// inside an app folder.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithInsideAppFolder;

/// 
/// Initializes union class with tag state of IsPublicFolder.
/// 
/// About the IsPublicFolder tag state: A public folder can't be shared this
/// way. Use a public link instead.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithIsPublicFolder;

/// 
/// Initializes union class with tag state of InsidePublicFolder.
/// 
/// About the InsidePublicFolder tag state: A folder inside a public folder
/// can't be shared this way. Use a public link instead.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithInsidePublicFolder;

/// 
/// Initializes union class with tag state of AlreadyShared.
/// 
/// About the AlreadyShared tag state: Folder is already shared. Contains
/// metadata about the existing shared folder.
/// 
/// @param alreadyShared Folder is already shared. Contains metadata about the
/// existing shared folder.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithAlreadyShared:(DBSHARINGSharedFolderMetadata * _Nonnull)alreadyShared;

/// 
/// Initializes union class with tag state of InvalidPath.
/// 
/// About the InvalidPath tag state: Path is not valid.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithInvalidPath;

/// 
/// Initializes union class with tag state of IsOsxPackage.
/// 
/// About the IsOsxPackage tag state: We do not support sharing a Mac OS X
/// package.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithIsOsxPackage;

/// 
/// Initializes union class with tag state of InsideOsxPackage.
/// 
/// About the InsideOsxPackage tag state: We do not support sharing a folder
/// inside a Mac OS X package.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithInsideOsxPackage;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBSHARINGSharePathError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value IsFile.
/// 
/// @return Whether the union's current tag state has value IsFile.
/// 
- (BOOL)isIsFile;

/// 
/// Retrieves whether the union's current tag state has value
/// InsideSharedFolder.
/// 
/// @return Whether the union's current tag state has value InsideSharedFolder.
/// 
- (BOOL)isInsideSharedFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// ContainsSharedFolder.
/// 
/// @return Whether the union's current tag state has value
/// ContainsSharedFolder.
/// 
- (BOOL)isContainsSharedFolder;

/// 
/// Retrieves whether the union's current tag state has value IsAppFolder.
/// 
/// @return Whether the union's current tag state has value IsAppFolder.
/// 
- (BOOL)isIsAppFolder;

/// 
/// Retrieves whether the union's current tag state has value InsideAppFolder.
/// 
/// @return Whether the union's current tag state has value InsideAppFolder.
/// 
- (BOOL)isInsideAppFolder;

/// 
/// Retrieves whether the union's current tag state has value IsPublicFolder.
/// 
/// @return Whether the union's current tag state has value IsPublicFolder.
/// 
- (BOOL)isIsPublicFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// InsidePublicFolder.
/// 
/// @return Whether the union's current tag state has value InsidePublicFolder.
/// 
- (BOOL)isInsidePublicFolder;

/// 
/// Retrieves whether the union's current tag state has value AlreadyShared.
/// 
/// @note Call this method and ensure it returns true before accessing the
/// alreadyShared property, otherwise a runtime exception will be thrown.
/// 
/// @return Whether the union's current tag state has value AlreadyShared.
/// 
- (BOOL)isAlreadyShared;

/// 
/// Retrieves whether the union's current tag state has value InvalidPath.
/// 
/// @return Whether the union's current tag state has value InvalidPath.
/// 
- (BOOL)isInvalidPath;

/// 
/// Retrieves whether the union's current tag state has value IsOsxPackage.
/// 
/// @return Whether the union's current tag state has value IsOsxPackage.
/// 
- (BOOL)isIsOsxPackage;

/// 
/// Retrieves whether the union's current tag state has value InsideOsxPackage.
/// 
/// @return Whether the union's current tag state has value InsideOsxPackage.
/// 
- (BOOL)isInsideOsxPackage;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBSHARINGSharePathError union.
/// 
@interface DBSHARINGSharePathErrorSerializer : NSObject 

/// 
/// Serializes DBSHARINGSharePathError instances.
/// 
/// @param instance An instance of the DBSHARINGSharePathError API object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBSHARINGSharePathError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGSharePathError * _Nonnull)instance;

/// 
/// Deserializes DBSHARINGSharePathError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBSHARINGSharePathError API object.
/// 
/// @return An instantiation of the DBSHARINGSharePathError object.
/// 
+ (DBSHARINGSharePathError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
