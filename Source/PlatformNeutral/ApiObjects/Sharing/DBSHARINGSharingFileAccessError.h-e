///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBSerializableProtocol.h"
#import <Foundation/Foundation.h>

@class DBSHARINGSharingFileAccessError;

#pragma mark - API Object

///
/// The SharingFileAccessError union.
///
/// User could not access this file.
///
/// This class implements the DBSerializable protocol (serialize and deserialize instance methods),
/// which is required for all Obj-C SDK API route objects.
///
@interface DBSHARINGSharingFileAccessError : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The DBSHARINGSharingFileAccessErrorTag enum type represents the possible tag states with which
/// the DBSHARINGSharingFileAccessError union can exist.
typedef NS_ENUM(NSInteger, DBSHARINGSharingFileAccessErrorTag) {
  /// Current user does not have sufficient privileges to perform the desired action.
  DBSHARINGSharingFileAccessErrorNoPermission,

  /// File specified was not found.
  DBSHARINGSharingFileAccessErrorInvalidFile,

  /// A folder can't be shared this way. Use folder sharing or a shared link instead.
  DBSHARINGSharingFileAccessErrorIsFolder,

  /// A file inside a public folder can't be shared this way. Use a public link instead.
  DBSHARINGSharingFileAccessErrorInsidePublicFolder,

  /// A Mac OS X package can't be shared this way. Use a shared link instead.
  DBSHARINGSharingFileAccessErrorInsideOsxPackage,

  /// (no description).
  DBSHARINGSharingFileAccessErrorOther,

};

/// Represents the union's current tag state.
@property(nonatomic, readonly) DBSHARINGSharingFileAccessErrorTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of NoPermission.
///
/// About the NoPermission tag state: Current user does not have sufficient privileges to perform
/// the desired action.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithNoPermission;

///
/// Initializes union class with tag state of InvalidFile.
///
/// About the InvalidFile tag state: File specified was not found.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithInvalidFile;

///
/// Initializes union class with tag state of IsFolder.
///
/// About the IsFolder tag state: A folder can't be shared this way. Use folder sharing or a shared
/// link instead.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithIsFolder;

///
/// Initializes union class with tag state of InsidePublicFolder.
///
/// About the InsidePublicFolder tag state: A file inside a public folder can't be shared this way.
/// Use a public link instead.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithInsidePublicFolder;

///
/// Initializes union class with tag state of InsideOsxPackage.
///
/// About the InsideOsxPackage tag state: A Mac OS X package can't be shared this way. Use a shared
/// link instead.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithInsideOsxPackage;

///
/// Initializes union class with tag state of Other.
///
/// @return An initialized DBSHARINGSharingFileAccessError instance.
///
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value NoPermission.
///
/// @return Whether the union's current tag state has value NoPermission.
///
- (BOOL)isNoPermission;

///
/// Retrieves whether the union's current tag state has value InvalidFile.
///
/// @return Whether the union's current tag state has value InvalidFile.
///
- (BOOL)isInvalidFile;

///
/// Retrieves whether the union's current tag state has value IsFolder.
///
/// @return Whether the union's current tag state has value IsFolder.
///
- (BOOL)isIsFolder;

///
/// Retrieves whether the union's current tag state has value InsidePublicFolder.
///
/// @return Whether the union's current tag state has value InsidePublicFolder.
///
- (BOOL)isInsidePublicFolder;

///
/// Retrieves whether the union's current tag state has value InsideOsxPackage.
///
/// @return Whether the union's current tag state has value InsideOsxPackage.
///
- (BOOL)isInsideOsxPackage;

///
/// Retrieves whether the union's current tag state has value Other.
///
/// @return Whether the union's current tag state has value Other.
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the DBSHARINGSharingFileAccessError union.
///
@interface DBSHARINGSharingFileAccessErrorSerializer : NSObject

///
/// Serializes DBSHARINGSharingFileAccessError instances.
///
/// @param instance An instance of the DBSHARINGSharingFileAccessError API object.
///
/// @return A json-compatible dictionary representation of the DBSHARINGSharingFileAccessError API
/// object.
///
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGSharingFileAccessError * _Nonnull)instance;

///
/// Deserializes DBSHARINGSharingFileAccessError instances.
///
/// @param dict A json-compatible dictionary representation of the DBSHARINGSharingFileAccessError
/// API object.
///
/// @return An instantiation of the DBSHARINGSharingFileAccessError object.
///
+ (DBSHARINGSharingFileAccessError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
