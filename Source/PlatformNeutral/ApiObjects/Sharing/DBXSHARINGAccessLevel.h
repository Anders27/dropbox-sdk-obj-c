///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGAccessLevel;

/// 
/// The AccessLevel union.
/// 
/// Defines the access levels for collaborators.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGAccessLevel : NSObject <DBXSerializable> 

/// The `DBXSHARINGAccessLevelTag` enum type represents the possible tag states
/// with which the `DBXSHARINGAccessLevel` union can exist.
typedef NS_ENUM(NSInteger, DBXSHARINGAccessLevelTag) {
    /// The collaborator is the owner of the shared folder. Owners can view and
    /// edit the shared folder as well as set the folder's policies using
    /// updateFolderPolicy.
    DBXSHARINGAccessLevelOwner,

    /// The collaborator can both view and edit the shared folder.
    DBXSHARINGAccessLevelEditor,

    /// The collaborator can only view the shared folder.
    DBXSHARINGAccessLevelViewer,

    /// The collaborator can only view the shared folder and does not have any
    /// access to comments.
    DBXSHARINGAccessLevelViewerNoComment,

    /// (no description).
    DBXSHARINGAccessLevelOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGAccessLevelTag tag;

/// 
/// Initializes union class with tag state of `Owner`.
/// 
/// About the `Owner` tag state: The collaborator is the owner of the shared
/// folder. Owners can view and edit the shared folder as well as set the
/// folder's policies using :route:`update_folder_policy`.
/// 
/// - returns: An initialized `DBXSHARINGAccessLevel` instance.
/// 
- (nonnull instancetype)initWithOwner;

/// 
/// Initializes union class with tag state of `Editor`.
/// 
/// About the `Editor` tag state: The collaborator can both view and edit the
/// shared folder.
/// 
/// - returns: An initialized `DBXSHARINGAccessLevel` instance.
/// 
- (nonnull instancetype)initWithEditor;

/// 
/// Initializes union class with tag state of `Viewer`.
/// 
/// About the `Viewer` tag state: The collaborator can only view the shared
/// folder.
/// 
/// - returns: An initialized `DBXSHARINGAccessLevel` instance.
/// 
- (nonnull instancetype)initWithViewer;

/// 
/// Initializes union class with tag state of `ViewerNoComment`.
/// 
/// About the `ViewerNoComment` tag state: The collaborator can only view the
/// shared folder and does not have any access to comments.
/// 
/// - returns: An initialized `DBXSHARINGAccessLevel` instance.
/// 
- (nonnull instancetype)initWithViewerNoComment;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXSHARINGAccessLevel` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `Owner`.
/// 
/// - returns: Whether the union's current tag state has value `Owner`.
/// 
- (BOOL)isOwner;

/// 
/// Retrieves whether the union's current tag state has value `Editor`.
/// 
/// - returns: Whether the union's current tag state has value `Editor`.
/// 
- (BOOL)isEditor;

/// 
/// Retrieves whether the union's current tag state has value `Viewer`.
/// 
/// - returns: Whether the union's current tag state has value `Viewer`.
/// 
- (BOOL)isViewer;

/// 
/// Retrieves whether the union's current tag state has value `ViewerNoComment`.
/// 
/// - returns: Whether the union's current tag state has value
/// `ViewerNoComment`.
/// 
- (BOOL)isViewerNoComment;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGAccessLevel` union.
/// 
@interface DBXSHARINGAccessLevelSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGAccessLevel` instances.
/// 
///  - parameter instance: An instance of the `DBXSHARINGAccessLevel` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGAccessLevel` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGAccessLevel * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGAccessLevel` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGAccessLevel` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGAccessLevel` object.
/// 
+ (DBXSHARINGAccessLevel * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
