///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGCreateSharedLinkArg;
@class DBXSHARINGPendingUploadMode;

/// 
/// The `DBXSHARINGCreateSharedLinkArg` struct.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGCreateSharedLinkArg : NSObject <DBXSerializable> 

/// The path to share.
@property (nonatomic, readonly, copy) NSString * _Nonnull path;

/// Whether to return a shortened URL.
@property (nonatomic, readonly, copy) NSNumber * _Nonnull shortUrl;

/// If it's okay to share a path that does not yet exist, set this to either
/// file in PendingUploadMode or folder in PendingUploadMode to indicate whether
/// to assume it's a file or folder.
@property (nonatomic, readonly) DBXSHARINGPendingUploadMode * _Nullable pendingUpload;

/// Full constructor for the `CreateSharedLinkArg` struct (exposes all instance
/// variables).
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path shortUrl:(NSNumber * _Nullable)shortUrl pendingUpload:(DBXSHARINGPendingUploadMode * _Nullable)pendingUpload;

/// Convenience constructor for the `CreateSharedLinkArg` struct (exposes only
/// non-nullable instance variables with no default value).
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path;

@end


/// 
/// The serialization class for the `DBXSHARINGCreateSharedLinkArg` struct.
/// 
@interface DBXSHARINGCreateSharedLinkArgSerializer : NSObject 

/// Returns a json-compatible dictionary representation of the
/// `DBXSHARINGCreateSharedLinkArg` object from an instantiation.
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGCreateSharedLinkArg * _Nonnull)obj;

/// Returns an instantiation of the `DBXSHARINGCreateSharedLinkArg` object from
/// a json-compatible dictionary representation.
+ (DBXSHARINGCreateSharedLinkArg * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
