///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGCreateSharedLinkWithSettingsArg.h"
#import "DBXSHARINGSharedLinkSettings.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGCreateSharedLinkWithSettingsArg 

- (instancetype)initWithPath:(NSString *)path settings:(DBXSHARINGSharedLinkSettings *)settings {
    [DBXStoneValidators stringValidator:nil maxLength:nil pattern:@"(/(.|[\\r\\n])*|id:.*)|(rev:[0-9a-f]{9,})|(ns:[0-9]+(/.*)?)"](path);

    self = [super init];
    if (self) {
        _path = path;
        _settings = settings;
    }
    return self;
}

- (instancetype)initWithPath:(NSString *)path {
    return [self initWithPath:path settings:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGCreateSharedLinkWithSettingsArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGCreateSharedLinkWithSettingsArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGCreateSharedLinkWithSettingsArgSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGCreateSharedLinkWithSettingsArgSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGCreateSharedLinkWithSettingsArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"path"] = valueObj.path;
    if (valueObj.settings) {
        jsonDict[@"settings"] = [DBXSHARINGSharedLinkSettingsSerializer serialize:valueObj.settings];
    }

    return jsonDict;
}

+ (DBXSHARINGCreateSharedLinkWithSettingsArg *)deserialize:(NSDictionary *)valueDict {
    NSString *path = valueDict[@"path"];
    DBXSHARINGSharedLinkSettings *settings = valueDict[@"settings"] ? [DBXSHARINGSharedLinkSettingsSerializer deserialize:valueDict[@"settings"]] : nil;

    return [[DBXSHARINGCreateSharedLinkWithSettingsArg alloc] initWithPath:path settings:settings];
}

@end
