///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXFILESLookupError;
@class DBXSHARINGCreateSharedLinkWithSettingsError;
@class DBXSHARINGSharedLinkSettingsError;

/// 
/// The CreateSharedLinkWithSettingsError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGCreateSharedLinkWithSettingsError : NSObject <DBXSerializable> 

/// The `DBXSHARINGCreateSharedLinkWithSettingsErrorTag` enum type represents
/// the possible tag states with which the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` union can exist.
typedef NS_ENUM(NSInteger, DBXSHARINGCreateSharedLinkWithSettingsErrorTag) {
    /// (no description).
    DBXSHARINGCreateSharedLinkWithSettingsErrorPath,

    /// User's email should be verified
    DBXSHARINGCreateSharedLinkWithSettingsErrorEmailNotVerified,

    /// The shared link already exists
    DBXSHARINGCreateSharedLinkWithSettingsErrorSharedLinkAlreadyExists,

    /// There is an error with the given settings
    DBXSHARINGCreateSharedLinkWithSettingsErrorSettingsError,

    /// Access to the requested path is forbidden
    DBXSHARINGCreateSharedLinkWithSettingsErrorAccessDenied,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGCreateSharedLinkWithSettingsErrorTag tag;

/// (no description).
@property (nonatomic, readonly) DBXFILESLookupError * _Nonnull path;

/// There is an error with the given settings
@property (nonatomic, readonly) DBXSHARINGSharedLinkSettingsError * _Nonnull settingsError;

/// 
/// Initializes union class with tag state of `Path`.
/// 
/// - parameter path: (no description).
/// 
/// - returns: An initialized `DBXSHARINGCreateSharedLinkWithSettingsError`
/// instance.
/// 
- (nonnull instancetype)initWithPath:(DBXFILESLookupError * _Nonnull)path;

/// 
/// Initializes union class with tag state of `EmailNotVerified`.
/// 
/// About the `EmailNotVerified` tag state: User's email should be verified
/// 
/// - returns: An initialized `DBXSHARINGCreateSharedLinkWithSettingsError`
/// instance.
/// 
- (nonnull instancetype)initWithEmailNotVerified;

/// 
/// Initializes union class with tag state of `SharedLinkAlreadyExists`.
/// 
/// About the `SharedLinkAlreadyExists` tag state: The shared link already
/// exists
/// 
/// - returns: An initialized `DBXSHARINGCreateSharedLinkWithSettingsError`
/// instance.
/// 
- (nonnull instancetype)initWithSharedLinkAlreadyExists;

/// 
/// Initializes union class with tag state of `SettingsError`.
/// 
/// About the `SettingsError` tag state: There is an error with the given
/// settings
/// 
/// - parameter settingsError: There is an error with the given settings
/// 
/// - returns: An initialized `DBXSHARINGCreateSharedLinkWithSettingsError`
/// instance.
/// 
- (nonnull instancetype)initWithSettingsError:(DBXSHARINGSharedLinkSettingsError * _Nonnull)settingsError;

/// 
/// Initializes union class with tag state of `AccessDenied`.
/// 
/// About the `AccessDenied` tag state: Access to the requested path is
/// forbidden
/// 
/// - returns: An initialized `DBXSHARINGCreateSharedLinkWithSettingsError`
/// instance.
/// 
- (nonnull instancetype)initWithAccessDenied;

/// 
/// Retrieves whether the union's current tag state has value `Path`.
/// 
/// - returns: Whether the union's current tag state has value `Path`.
/// 
- (BOOL)isPath;

/// 
/// Retrieves whether the union's current tag state has value
/// `EmailNotVerified`.
/// 
/// - returns: Whether the union's current tag state has value
/// `EmailNotVerified`.
/// 
- (BOOL)isEmailNotVerified;

/// 
/// Retrieves whether the union's current tag state has value
/// `SharedLinkAlreadyExists`.
/// 
/// - returns: Whether the union's current tag state has value
/// `SharedLinkAlreadyExists`.
/// 
- (BOOL)isSharedLinkAlreadyExists;

/// 
/// Retrieves whether the union's current tag state has value `SettingsError`.
/// 
/// - returns: Whether the union's current tag state has value `SettingsError`.
/// 
- (BOOL)isSettingsError;

/// 
/// Retrieves whether the union's current tag state has value `AccessDenied`.
/// 
/// - returns: Whether the union's current tag state has value `AccessDenied`.
/// 
- (BOOL)isAccessDenied;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` union.
/// 
@interface DBXSHARINGCreateSharedLinkWithSettingsErrorSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGCreateSharedLinkWithSettingsError` instances.
/// 
///  - parameter instance: An instance of the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` API object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGCreateSharedLinkWithSettingsError * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGCreateSharedLinkWithSettingsError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` API object.
/// 
///  - returns: An instantiation of the
/// `DBXSHARINGCreateSharedLinkWithSettingsError` object.
/// 
+ (DBXSHARINGCreateSharedLinkWithSettingsError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
