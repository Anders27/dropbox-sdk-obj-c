///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGFileAction.h"
#import "DBXSHARINGFilePermission.h"
#import "DBXSHARINGPermissionDeniedReason.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGFilePermission 

- (instancetype)initWithAction:(DBXSHARINGFileAction *)action allow:(NSNumber *)allow reason:(DBXSHARINGPermissionDeniedReason *)reason {

    self = [super init];
    if (self != nil) {
        _action = action;
        _allow = allow;
        _reason = reason;
    }
    return self;
}

- (instancetype)initWithAction:(DBXSHARINGFileAction *)action allow:(NSNumber *)allow {
    return [self initWithAction:action allow:allow reason:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXSHARINGFilePermissionSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGFilePermissionSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGFilePermissionSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGFilePermissionSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGFilePermission *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"action"] = [DBXSHARINGFileActionSerializer serialize:valueObj.action];
    jsonDict[@"allow"] = valueObj.allow;
    if (valueObj.reason) {
        jsonDict[@"reason"] = [DBXSHARINGPermissionDeniedReasonSerializer serialize:valueObj.reason];
    }

    return jsonDict;
}

+ (DBXSHARINGFilePermission *)deserialize:(NSDictionary *)valueDict {
    DBXSHARINGFileAction *action = [DBXSHARINGFileActionSerializer deserialize:valueDict[@"action"]];
    NSNumber *allow = valueDict[@"allow"];
    DBXSHARINGPermissionDeniedReason *reason = valueDict[@"reason"] ? [DBXSHARINGPermissionDeniedReasonSerializer deserialize:valueDict[@"reason"]] : nil;

    return [[DBXSHARINGFilePermission alloc] initWithAction:action allow:allow reason:reason];
}

@end
