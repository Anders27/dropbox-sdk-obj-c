///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGGetSharedLinksResult.h"
#import "DBXSHARINGLinkMetadata.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGGetSharedLinksResult 

- (instancetype)initWithLinks:(NSArray<DBXSHARINGLinkMetadata *> *)links {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](links);

    self = [super init];
    if (self) {
        _links = links;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGGetSharedLinksResultSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGGetSharedLinksResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGGetSharedLinksResultSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGGetSharedLinksResultSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGGetSharedLinksResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"links"] = [DBXArraySerializer serialize:valueObj.links withBlock:^id(id elem) { return [DBXSHARINGLinkMetadataSerializer serialize:elem]; }];

    return jsonDict;
}

+ (DBXSHARINGGetSharedLinksResult *)deserialize:(NSDictionary *)valueDict {
    NSArray<DBXSHARINGLinkMetadata *> *links = [DBXArraySerializer deserialize:valueDict[@"links"] withBlock:^id(id elem) { return [DBXSHARINGLinkMetadataSerializer deserialize:elem]; }];

    return [[DBXSHARINGGetSharedLinksResult alloc] initWithLinks:links];
}

@end
