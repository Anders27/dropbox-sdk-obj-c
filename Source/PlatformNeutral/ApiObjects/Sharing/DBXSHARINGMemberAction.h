///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGMemberAction;

/// 
/// The MemberAction union.
/// 
/// Actions that may be taken on members of a shared folder.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGMemberAction : NSObject <DBXSerializable> 

/// The `DBXSHARINGMemberActionTag` enum type represents the possible tag states
/// with which the `DBXSHARINGMemberAction` union can exist.
typedef NS_ENUM(NSInteger, DBXSHARINGMemberActionTag) {
    /// Allow the member to keep a copy of the folder when removing.
    DBXSHARINGMemberActionLeaveACopy,

    /// Make the member an editor of the folder.
    DBXSHARINGMemberActionMakeEditor,

    /// Make the member an owner of the folder.
    DBXSHARINGMemberActionMakeOwner,

    /// Make the member a viewer of the folder.
    DBXSHARINGMemberActionMakeViewer,

    /// Make the member a viewer of the folder without commenting permissions.
    DBXSHARINGMemberActionMakeViewerNoComment,

    /// Remove the member from the folder.
    DBXSHARINGMemberActionRemove,

    /// (no description).
    DBXSHARINGMemberActionOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGMemberActionTag tag;

/// 
/// Initializes union class with tag state of `LeaveACopy`.
/// 
/// About the `LeaveACopy` tag state: Allow the member to keep a copy of the
/// folder when removing.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithLeaveACopy;

/// 
/// Initializes union class with tag state of `MakeEditor`.
/// 
/// About the `MakeEditor` tag state: Make the member an editor of the folder.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithMakeEditor;

/// 
/// Initializes union class with tag state of `MakeOwner`.
/// 
/// About the `MakeOwner` tag state: Make the member an owner of the folder.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithMakeOwner;

/// 
/// Initializes union class with tag state of `MakeViewer`.
/// 
/// About the `MakeViewer` tag state: Make the member a viewer of the folder.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithMakeViewer;

/// 
/// Initializes union class with tag state of `MakeViewerNoComment`.
/// 
/// About the `MakeViewerNoComment` tag state: Make the member a viewer of the
/// folder without commenting permissions.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithMakeViewerNoComment;

/// 
/// Initializes union class with tag state of `Remove`.
/// 
/// About the `Remove` tag state: Remove the member from the folder.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithRemove;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXSHARINGMemberAction` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `LeaveACopy`.
/// 
/// - returns: Whether the union's current tag state has value `LeaveACopy`.
/// 
- (BOOL)isLeaveACopy;

/// 
/// Retrieves whether the union's current tag state has value `MakeEditor`.
/// 
/// - returns: Whether the union's current tag state has value `MakeEditor`.
/// 
- (BOOL)isMakeEditor;

/// 
/// Retrieves whether the union's current tag state has value `MakeOwner`.
/// 
/// - returns: Whether the union's current tag state has value `MakeOwner`.
/// 
- (BOOL)isMakeOwner;

/// 
/// Retrieves whether the union's current tag state has value `MakeViewer`.
/// 
/// - returns: Whether the union's current tag state has value `MakeViewer`.
/// 
- (BOOL)isMakeViewer;

/// 
/// Retrieves whether the union's current tag state has value
/// `MakeViewerNoComment`.
/// 
/// - returns: Whether the union's current tag state has value
/// `MakeViewerNoComment`.
/// 
- (BOOL)isMakeViewerNoComment;

/// 
/// Retrieves whether the union's current tag state has value `Remove`.
/// 
/// - returns: Whether the union's current tag state has value `Remove`.
/// 
- (BOOL)isRemove;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGMemberAction` union.
/// 
@interface DBXSHARINGMemberActionSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGMemberAction` instances.
/// 
///  - parameter instance: An instance of the `DBXSHARINGMemberAction` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGMemberAction` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGMemberAction * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGMemberAction` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGMemberAction` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGMemberAction` object.
/// 
+ (DBXSHARINGMemberAction * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
