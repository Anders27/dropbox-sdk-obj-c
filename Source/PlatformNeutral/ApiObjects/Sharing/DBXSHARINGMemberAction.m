///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGMemberAction.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGMemberAction 

- (instancetype)initWithLeaveACopy {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionLeaveACopy;
    }
    return self;
}

- (instancetype)initWithMakeEditor {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionMakeEditor;
    }
    return self;
}

- (instancetype)initWithMakeOwner {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionMakeOwner;
    }
    return self;
}

- (instancetype)initWithMakeViewer {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionMakeViewer;
    }
    return self;
}

- (instancetype)initWithMakeViewerNoComment {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionMakeViewerNoComment;
    }
    return self;
}

- (instancetype)initWithRemove {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionRemove;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self) {
        _tag = DBXSHARINGMemberActionOther;
    }
    return self;
}

- (BOOL)isLeaveACopy {
    return _tag == DBXSHARINGMemberActionLeaveACopy;
}

- (BOOL)isMakeEditor {
    return _tag == DBXSHARINGMemberActionMakeEditor;
}

- (BOOL)isMakeOwner {
    return _tag == DBXSHARINGMemberActionMakeOwner;
}

- (BOOL)isMakeViewer {
    return _tag == DBXSHARINGMemberActionMakeViewer;
}

- (BOOL)isMakeViewerNoComment {
    return _tag == DBXSHARINGMemberActionMakeViewerNoComment;
}

- (BOOL)isRemove {
    return _tag == DBXSHARINGMemberActionRemove;
}

- (BOOL)isOther {
    return _tag == DBXSHARINGMemberActionOther;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXSHARINGMemberActionLeaveACopy:
           return @"DBXSHARINGMemberActionLeaveACopy";
        case DBXSHARINGMemberActionMakeEditor:
           return @"DBXSHARINGMemberActionMakeEditor";
        case DBXSHARINGMemberActionMakeOwner:
           return @"DBXSHARINGMemberActionMakeOwner";
        case DBXSHARINGMemberActionMakeViewer:
           return @"DBXSHARINGMemberActionMakeViewer";
        case DBXSHARINGMemberActionMakeViewerNoComment:
           return @"DBXSHARINGMemberActionMakeViewerNoComment";
        case DBXSHARINGMemberActionRemove:
           return @"DBXSHARINGMemberActionRemove";
        case DBXSHARINGMemberActionOther:
           return @"DBXSHARINGMemberActionOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGMemberActionSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGMemberActionSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGMemberActionSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGMemberActionSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGMemberAction *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isLeaveACopy]) {
        jsonDict[@".tag"] = @"leave_a_copy";
    }
    else if ([valueObj isMakeEditor]) {
        jsonDict[@".tag"] = @"make_editor";
    }
    else if ([valueObj isMakeOwner]) {
        jsonDict[@".tag"] = @"make_owner";
    }
    else if ([valueObj isMakeViewer]) {
        jsonDict[@".tag"] = @"make_viewer";
    }
    else if ([valueObj isMakeViewerNoComment]) {
        jsonDict[@".tag"] = @"make_viewer_no_comment";
    }
    else if ([valueObj isRemove]) {
        jsonDict[@".tag"] = @"remove";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXSHARINGMemberAction *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"leave_a_copy"]) {
        return [[DBXSHARINGMemberAction alloc] initWithLeaveACopy];
    }
    else if ([tag isEqualToString:@"make_editor"]) {
        return [[DBXSHARINGMemberAction alloc] initWithMakeEditor];
    }
    else if ([tag isEqualToString:@"make_owner"]) {
        return [[DBXSHARINGMemberAction alloc] initWithMakeOwner];
    }
    else if ([tag isEqualToString:@"make_viewer"]) {
        return [[DBXSHARINGMemberAction alloc] initWithMakeViewer];
    }
    else if ([tag isEqualToString:@"make_viewer_no_comment"]) {
        return [[DBXSHARINGMemberAction alloc] initWithMakeViewerNoComment];
    }
    else if ([tag isEqualToString:@"remove"]) {
        return [[DBXSHARINGMemberAction alloc] initWithRemove];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXSHARINGMemberAction alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
