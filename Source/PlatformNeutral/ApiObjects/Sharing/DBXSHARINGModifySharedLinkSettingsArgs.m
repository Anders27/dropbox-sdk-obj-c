///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGModifySharedLinkSettingsArgs.h"
#import "DBXSHARINGSharedLinkSettings.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGModifySharedLinkSettingsArgs 

- (instancetype)initWithUrl:(NSString *)url settings:(DBXSHARINGSharedLinkSettings *)settings removeExpiration:(NSNumber *)removeExpiration {

    self = [super init];
    if (self) {
        _url = url;
        _settings = settings;
        _removeExpiration = removeExpiration ?: @NO;
    }
    return self;
}

- (instancetype)initWithUrl:(NSString *)url settings:(DBXSHARINGSharedLinkSettings *)settings {
    return [self initWithUrl:url settings:settings removeExpiration:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGModifySharedLinkSettingsArgsSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGModifySharedLinkSettingsArgsSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGModifySharedLinkSettingsArgsSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGModifySharedLinkSettingsArgsSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGModifySharedLinkSettingsArgs *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"url"] = valueObj.url;
    jsonDict[@"settings"] = [DBXSHARINGSharedLinkSettingsSerializer serialize:valueObj.settings];
    jsonDict[@"remove_expiration"] = valueObj.removeExpiration;

    return jsonDict;
}

+ (DBXSHARINGModifySharedLinkSettingsArgs *)deserialize:(NSDictionary *)valueDict {
    NSString *url = valueDict[@"url"];
    DBXSHARINGSharedLinkSettings *settings = [DBXSHARINGSharedLinkSettingsSerializer deserialize:valueDict[@"settings"]];
    NSNumber *removeExpiration = valueDict[@"remove_expiration"];

    return [[DBXSHARINGModifySharedLinkSettingsArgs alloc] initWithUrl:url settings:settings removeExpiration:removeExpiration];
}

@end
