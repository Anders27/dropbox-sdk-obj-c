///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGPermissionDeniedReason;

/// 
/// The `DBXSHARINGPermissionDeniedReason` union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
/// Possible reasons the user is denied a permission.
/// 
@interface DBXSHARINGPermissionDeniedReason : NSObject <DBXSerializable> 

/// The `DBXSHARINGPermissionDeniedReasonTag` enum type represents the possible
/// tag states that the `DBXSHARINGPermissionDeniedReason` union can exist in.
typedef NS_ENUM(NSInteger, DBXSHARINGPermissionDeniedReasonTag) {
    /// User is not on the same team as the folder owner.
    DBXSHARINGPermissionDeniedReasonUserNotSameTeamAsOwner,

    /// User is prohibited by the owner from taking the action.
    DBXSHARINGPermissionDeniedReasonUserNotAllowedByOwner,

    /// Target is indirectly a member of the folder, for example by being part
    /// of a group.
    DBXSHARINGPermissionDeniedReasonTargetIsIndirectMember,

    /// Target is the owner of the folder.
    DBXSHARINGPermissionDeniedReasonTargetIsOwner,

    /// Target is the user itself.
    DBXSHARINGPermissionDeniedReasonTargetIsSelf,

    /// Target is not an active member of the team.
    DBXSHARINGPermissionDeniedReasonTargetNotActive,

    /// Folder is team folder for a limited team.
    DBXSHARINGPermissionDeniedReasonFolderIsLimitedTeamFolder,

    /// (no description).
    DBXSHARINGPermissionDeniedReasonOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGPermissionDeniedReasonTag tag;

/// Initializes union class with tag state of `UserNotSameTeamAsOwner`.
- (nonnull instancetype)initWithUserNotSameTeamAsOwner;

/// Initializes union class with tag state of `UserNotAllowedByOwner`.
- (nonnull instancetype)initWithUserNotAllowedByOwner;

/// Initializes union class with tag state of `TargetIsIndirectMember`.
- (nonnull instancetype)initWithTargetIsIndirectMember;

/// Initializes union class with tag state of `TargetIsOwner`.
- (nonnull instancetype)initWithTargetIsOwner;

/// Initializes union class with tag state of `TargetIsSelf`.
- (nonnull instancetype)initWithTargetIsSelf;

/// Initializes union class with tag state of `TargetNotActive`.
- (nonnull instancetype)initWithTargetNotActive;

/// Initializes union class with tag state of `FolderIsLimitedTeamFolder`.
- (nonnull instancetype)initWithFolderIsLimitedTeamFolder;

/// Initializes union class with tag state of `Other`.
- (nonnull instancetype)initWithOther;

/// Returns whether the union's current tag state has value
/// `UserNotSameTeamAsOwner`.
- (BOOL)isUserNotSameTeamAsOwner;

/// Returns whether the union's current tag state has value
/// `UserNotAllowedByOwner`.
- (BOOL)isUserNotAllowedByOwner;

/// Returns whether the union's current tag state has value
/// `TargetIsIndirectMember`.
- (BOOL)isTargetIsIndirectMember;

/// Returns whether the union's current tag state has value `TargetIsOwner`.
- (BOOL)isTargetIsOwner;

/// Returns whether the union's current tag state has value `TargetIsSelf`.
- (BOOL)isTargetIsSelf;

/// Returns whether the union's current tag state has value `TargetNotActive`.
- (BOOL)isTargetNotActive;

/// Returns whether the union's current tag state has value
/// `FolderIsLimitedTeamFolder`.
- (BOOL)isFolderIsLimitedTeamFolder;

/// Returns whether the union's current tag state has value `Other`.
- (BOOL)isOther;

/// Returns a human-readable string representing the union's current tag state.
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGPermissionDeniedReason` union.
/// 
@interface DBXSHARINGPermissionDeniedReasonSerializer : NSObject 

/// Returns a json-compatible dictionary representation of the
/// `DBXSHARINGPermissionDeniedReason` object from an instantiation.
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGPermissionDeniedReason * _Nonnull)obj;

/// Returns an instantiation of the `DBXSHARINGPermissionDeniedReason` object
/// from a json-compatible dictionary representation.
+ (DBXSHARINGPermissionDeniedReason * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
