///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGAclUpdatePolicy.h"
#import "DBXSHARINGMemberPolicy.h"
#import "DBXSHARINGShareFolderArg.h"
#import "DBXSHARINGSharedLinkPolicy.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGShareFolderArg 

- (instancetype)initWithPath:(NSString *)path memberPolicy:(DBXSHARINGMemberPolicy *)memberPolicy aclUpdatePolicy:(DBXSHARINGAclUpdatePolicy *)aclUpdatePolicy sharedLinkPolicy:(DBXSHARINGSharedLinkPolicy *)sharedLinkPolicy forceAsync:(NSNumber *)forceAsync {
    [DBXStoneValidators stringValidator:nil maxLength:nil pattern:@"/(.|[\\r\\n])*"](path);

    self = [super init];
    if (self) {
        _path = path;
        _memberPolicy = memberPolicy ?: [[DBXSHARINGMemberPolicy alloc] initWithAnyone];
        _aclUpdatePolicy = aclUpdatePolicy ?: [[DBXSHARINGAclUpdatePolicy alloc] initWithOwner];
        _sharedLinkPolicy = sharedLinkPolicy ?: [[DBXSHARINGSharedLinkPolicy alloc] initWithAnyone];
        _forceAsync = forceAsync ?: @NO;
    }
    return self;
}

- (instancetype)initWithPath:(NSString *)path {
    return [self initWithPath:path memberPolicy:nil aclUpdatePolicy:nil sharedLinkPolicy:nil forceAsync:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGShareFolderArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGShareFolderArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGShareFolderArgSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGShareFolderArgSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGShareFolderArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"path"] = valueObj.path;
    jsonDict[@"member_policy"] = [DBXSHARINGMemberPolicySerializer serialize:valueObj.memberPolicy];
    jsonDict[@"acl_update_policy"] = [DBXSHARINGAclUpdatePolicySerializer serialize:valueObj.aclUpdatePolicy];
    jsonDict[@"shared_link_policy"] = [DBXSHARINGSharedLinkPolicySerializer serialize:valueObj.sharedLinkPolicy];
    jsonDict[@"force_async"] = valueObj.forceAsync;

    return jsonDict;
}

+ (DBXSHARINGShareFolderArg *)deserialize:(NSDictionary *)valueDict {
    NSString *path = valueDict[@"path"];
    DBXSHARINGMemberPolicy *memberPolicy = [DBXSHARINGMemberPolicySerializer deserialize:valueDict[@"member_policy"]];
    DBXSHARINGAclUpdatePolicy *aclUpdatePolicy = [DBXSHARINGAclUpdatePolicySerializer deserialize:valueDict[@"acl_update_policy"]];
    DBXSHARINGSharedLinkPolicy *sharedLinkPolicy = [DBXSHARINGSharedLinkPolicySerializer deserialize:valueDict[@"shared_link_policy"]];
    NSNumber *forceAsync = valueDict[@"force_async"];

    return [[DBXSHARINGShareFolderArg alloc] initWithPath:path memberPolicy:memberPolicy aclUpdatePolicy:aclUpdatePolicy sharedLinkPolicy:sharedLinkPolicy forceAsync:forceAsync];
}

@end
