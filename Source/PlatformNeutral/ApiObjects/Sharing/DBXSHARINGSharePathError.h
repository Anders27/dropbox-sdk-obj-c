///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGSharePathError;
@class DBXSHARINGSharedFolderMetadata;

/// 
/// The SharePathError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGSharePathError : NSObject <DBXSerializable> 

/// The `DBXSHARINGSharePathErrorTag` enum type represents the possible tag
/// states with which the `DBXSHARINGSharePathError` union can exist.
typedef NS_ENUM(NSInteger, DBXSHARINGSharePathErrorTag) {
    /// A file is at the specified path.
    DBXSHARINGSharePathErrorIsFile,

    /// We do not support sharing a folder inside a shared folder.
    DBXSHARINGSharePathErrorInsideSharedFolder,

    /// We do not support shared folders that contain shared folders.
    DBXSHARINGSharePathErrorContainsSharedFolder,

    /// We do not support sharing an app folder.
    DBXSHARINGSharePathErrorIsAppFolder,

    /// We do not support sharing a folder inside an app folder.
    DBXSHARINGSharePathErrorInsideAppFolder,

    /// A public folder can't be shared this way. Use a public link instead.
    DBXSHARINGSharePathErrorIsPublicFolder,

    /// A folder inside a public folder can't be shared this way. Use a public
    /// link instead.
    DBXSHARINGSharePathErrorInsidePublicFolder,

    /// Folder is already shared. Contains metadata about the existing shared
    /// folder.
    DBXSHARINGSharePathErrorAlreadyShared,

    /// Path is not valid.
    DBXSHARINGSharePathErrorInvalidPath,

    /// We do not support sharing a Mac OS X package.
    DBXSHARINGSharePathErrorIsOsxPackage,

    /// We do not support sharing a folder inside a Mac OS X package.
    DBXSHARINGSharePathErrorInsideOsxPackage,

    /// (no description).
    DBXSHARINGSharePathErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGSharePathErrorTag tag;

/// Folder is already shared. Contains metadata about the existing shared
/// folder.
@property (nonatomic, readonly) DBXSHARINGSharedFolderMetadata * _Nonnull alreadyShared;

/// 
/// Initializes union class with tag state of `IsFile`.
/// 
/// About the `IsFile` tag state: A file is at the specified path.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithIsFile;

/// 
/// Initializes union class with tag state of `InsideSharedFolder`.
/// 
/// About the `InsideSharedFolder` tag state: We do not support sharing a folder
/// inside a shared folder.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithInsideSharedFolder;

/// 
/// Initializes union class with tag state of `ContainsSharedFolder`.
/// 
/// About the `ContainsSharedFolder` tag state: We do not support shared folders
/// that contain shared folders.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithContainsSharedFolder;

/// 
/// Initializes union class with tag state of `IsAppFolder`.
/// 
/// About the `IsAppFolder` tag state: We do not support sharing an app folder.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithIsAppFolder;

/// 
/// Initializes union class with tag state of `InsideAppFolder`.
/// 
/// About the `InsideAppFolder` tag state: We do not support sharing a folder
/// inside an app folder.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithInsideAppFolder;

/// 
/// Initializes union class with tag state of `IsPublicFolder`.
/// 
/// About the `IsPublicFolder` tag state: A public folder can't be shared this
/// way. Use a public link instead.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithIsPublicFolder;

/// 
/// Initializes union class with tag state of `InsidePublicFolder`.
/// 
/// About the `InsidePublicFolder` tag state: A folder inside a public folder
/// can't be shared this way. Use a public link instead.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithInsidePublicFolder;

/// 
/// Initializes union class with tag state of `AlreadyShared`.
/// 
/// About the `AlreadyShared` tag state: Folder is already shared. Contains
/// metadata about the existing shared folder.
/// 
/// - parameter alreadyShared: Folder is already shared. Contains metadata about
/// the existing shared folder.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithAlreadyShared:(DBXSHARINGSharedFolderMetadata * _Nonnull)alreadyShared;

/// 
/// Initializes union class with tag state of `InvalidPath`.
/// 
/// About the `InvalidPath` tag state: Path is not valid.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithInvalidPath;

/// 
/// Initializes union class with tag state of `IsOsxPackage`.
/// 
/// About the `IsOsxPackage` tag state: We do not support sharing a Mac OS X
/// package.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithIsOsxPackage;

/// 
/// Initializes union class with tag state of `InsideOsxPackage`.
/// 
/// About the `InsideOsxPackage` tag state: We do not support sharing a folder
/// inside a Mac OS X package.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithInsideOsxPackage;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXSHARINGSharePathError` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `IsFile`.
/// 
/// - returns: Whether the union's current tag state has value `IsFile`.
/// 
- (BOOL)isIsFile;

/// 
/// Retrieves whether the union's current tag state has value
/// `InsideSharedFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `InsideSharedFolder`.
/// 
- (BOOL)isInsideSharedFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// `ContainsSharedFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `ContainsSharedFolder`.
/// 
- (BOOL)isContainsSharedFolder;

/// 
/// Retrieves whether the union's current tag state has value `IsAppFolder`.
/// 
/// - returns: Whether the union's current tag state has value `IsAppFolder`.
/// 
- (BOOL)isIsAppFolder;

/// 
/// Retrieves whether the union's current tag state has value `InsideAppFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `InsideAppFolder`.
/// 
- (BOOL)isInsideAppFolder;

/// 
/// Retrieves whether the union's current tag state has value `IsPublicFolder`.
/// 
/// - returns: Whether the union's current tag state has value `IsPublicFolder`.
/// 
- (BOOL)isIsPublicFolder;

/// 
/// Retrieves whether the union's current tag state has value
/// `InsidePublicFolder`.
/// 
/// - returns: Whether the union's current tag state has value
/// `InsidePublicFolder`.
/// 
- (BOOL)isInsidePublicFolder;

/// 
/// Retrieves whether the union's current tag state has value `AlreadyShared`.
/// 
/// - returns: Whether the union's current tag state has value `AlreadyShared`.
/// 
- (BOOL)isAlreadyShared;

/// 
/// Retrieves whether the union's current tag state has value `InvalidPath`.
/// 
/// - returns: Whether the union's current tag state has value `InvalidPath`.
/// 
- (BOOL)isInvalidPath;

/// 
/// Retrieves whether the union's current tag state has value `IsOsxPackage`.
/// 
/// - returns: Whether the union's current tag state has value `IsOsxPackage`.
/// 
- (BOOL)isIsOsxPackage;

/// 
/// Retrieves whether the union's current tag state has value
/// `InsideOsxPackage`.
/// 
/// - returns: Whether the union's current tag state has value
/// `InsideOsxPackage`.
/// 
- (BOOL)isInsideOsxPackage;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGSharePathError` union.
/// 
@interface DBXSHARINGSharePathErrorSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGSharePathError` instances.
/// 
///  - parameter instance: An instance of the `DBXSHARINGSharePathError` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGSharePathError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGSharePathError * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGSharePathError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGSharePathError` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGSharePathError` object.
/// 
+ (DBXSHARINGSharePathError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
