///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGGroupMembershipInfo.h"
#import "DBXSHARINGInviteeMembershipInfo.h"
#import "DBXSHARINGSharedFileMembers.h"
#import "DBXSHARINGUserMembershipInfo.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGSharedFileMembers 

- (instancetype)initWithUsers:(NSArray<DBXSHARINGUserMembershipInfo *> *)users groups:(NSArray<DBXSHARINGGroupMembershipInfo *> *)groups invitees:(NSArray<DBXSHARINGInviteeMembershipInfo *> *)invitees cursor:(NSString *)cursor {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](users);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](groups);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](invitees);

    self = [super init];
    if (self != nil) {
        _users = users;
        _groups = groups;
        _invitees = invitees;
        _cursor = cursor;
    }
    return self;
}

- (instancetype)initWithUsers:(NSArray<DBXSHARINGUserMembershipInfo *> *)users groups:(NSArray<DBXSHARINGGroupMembershipInfo *> *)groups invitees:(NSArray<DBXSHARINGInviteeMembershipInfo *> *)invitees {
    return [self initWithUsers:users groups:groups invitees:invitees cursor:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXSHARINGSharedFileMembersSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGSharedFileMembersSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGSharedFileMembersSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGSharedFileMembersSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGSharedFileMembers *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"users"] = [DBXArraySerializer serialize:valueObj.users withBlock:^id(id elem) { return [DBXSHARINGUserMembershipInfoSerializer serialize:elem]; }];
    jsonDict[@"groups"] = [DBXArraySerializer serialize:valueObj.groups withBlock:^id(id elem) { return [DBXSHARINGGroupMembershipInfoSerializer serialize:elem]; }];
    jsonDict[@"invitees"] = [DBXArraySerializer serialize:valueObj.invitees withBlock:^id(id elem) { return [DBXSHARINGInviteeMembershipInfoSerializer serialize:elem]; }];
    if (valueObj.cursor) {
        jsonDict[@"cursor"] = valueObj.cursor;
    }

    return jsonDict;
}

+ (DBXSHARINGSharedFileMembers *)deserialize:(NSDictionary *)valueDict {
    NSArray<DBXSHARINGUserMembershipInfo *> *users = [DBXArraySerializer deserialize:valueDict[@"users"] withBlock:^id(id elem) { return [DBXSHARINGUserMembershipInfoSerializer deserialize:elem]; }];
    NSArray<DBXSHARINGGroupMembershipInfo *> *groups = [DBXArraySerializer deserialize:valueDict[@"groups"] withBlock:^id(id elem) { return [DBXSHARINGGroupMembershipInfoSerializer deserialize:elem]; }];
    NSArray<DBXSHARINGInviteeMembershipInfo *> *invitees = [DBXArraySerializer deserialize:valueDict[@"invitees"] withBlock:^id(id elem) { return [DBXSHARINGInviteeMembershipInfoSerializer deserialize:elem]; }];
    NSString *cursor = valueDict[@"cursor"] ?: nil;

    return [[DBXSHARINGSharedFileMembers alloc] initWithUsers:users groups:groups invitees:invitees cursor:cursor];
}

@end
