///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGAccessLevel;
@class DBXSHARINGFolderPolicy;
@class DBXSHARINGSharedFolderMetadataBase;
@class DBXUSERSTeam;

/// 
/// The SharedFolderMetadataBase struct.
/// 
/// Properties of the shared folder.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGSharedFolderMetadataBase : NSObject <DBXSerializable> 

/// The current user's access level for this shared folder.
@property (nonatomic, readonly) DBXSHARINGAccessLevel * _Nonnull accessType;

/// Whether this folder is a team folder https://www.dropbox.com/en/help/986.
@property (nonatomic, readonly, copy) NSNumber * _Nonnull isTeamFolder;

/// Policies governing this shared folder.
@property (nonatomic, readonly) DBXSHARINGFolderPolicy * _Nonnull policy;

/// The team that owns the folder. This field is not present if the folder is
/// not owned by a team.
@property (nonatomic, readonly) DBXUSERSTeam * _Nullable ownerTeam;

/// The ID of the parent shared folder. This field is present only if the folder
/// is contained within another shared folder.
@property (nonatomic, readonly, copy) NSString * _Nullable parentSharedFolderId;

/// 
/// Full constructor for the `DBXSHARINGSharedFolderMetadataBase` struct
/// (exposes all instance variables).
/// 
/// - parameter accessType: The current user's access level for this shared
/// folder.
/// - parameter isTeamFolder: Whether this folder is a :link:`team folder
/// https://www.dropbox.com/en/help/986`.
/// - parameter policy: Policies governing this shared folder.
/// - parameter ownerTeam: The team that owns the folder. This field is not
/// present if the folder is not owned by a team.
/// - parameter parentSharedFolderId: The ID of the parent shared folder. This
/// field is present only if the folder is contained within another shared
/// folder.
/// 
/// - returns: An initialized `DBXSHARINGSharedFolderMetadataBase` instance.
/// 
- (nonnull instancetype)initWithAccessType:(DBXSHARINGAccessLevel * _Nonnull)accessType isTeamFolder:(NSNumber * _Nonnull)isTeamFolder policy:(DBXSHARINGFolderPolicy * _Nonnull)policy ownerTeam:(DBXUSERSTeam * _Nullable)ownerTeam parentSharedFolderId:(NSString * _Nullable)parentSharedFolderId;

/// 
/// Convenience constructor for the `DBXSHARINGSharedFolderMetadataBase` struct
/// (exposes only non-nullable instance variables with no default value).
/// 
/// - parameter accessType: The current user's access level for this shared
/// folder.
/// - parameter isTeamFolder: Whether this folder is a :link:`team folder
/// https://www.dropbox.com/en/help/986`.
/// - parameter policy: Policies governing this shared folder.
/// 
/// - returns: An initialized `DBXSHARINGSharedFolderMetadataBase` instance.
/// 
- (nonnull instancetype)initWithAccessType:(DBXSHARINGAccessLevel * _Nonnull)accessType isTeamFolder:(NSNumber * _Nonnull)isTeamFolder policy:(DBXSHARINGFolderPolicy * _Nonnull)policy;

@end


/// 
/// The serialization class for the SharedFolderMetadataBase struct.
/// 
@interface DBXSHARINGSharedFolderMetadataBaseSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGSharedFolderMetadataBase` instances.
/// 
///  - parameter instance: An instance of the
/// `DBXSHARINGSharedFolderMetadataBase` API object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGSharedFolderMetadataBase` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGSharedFolderMetadataBase * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGSharedFolderMetadataBase` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGSharedFolderMetadataBase` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGSharedFolderMetadataBase`
/// object.
/// 
+ (DBXSHARINGSharedFolderMetadataBase * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
