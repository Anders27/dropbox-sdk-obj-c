///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGSharedLinkSettingsError;

/// 
/// The SharedLinkSettingsError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGSharedLinkSettingsError : NSObject <DBXSerializable> 

/// The `DBXSHARINGSharedLinkSettingsErrorTag` enum type represents the possible
/// tag states with which the `DBXSHARINGSharedLinkSettingsError` union can
/// exist.
typedef NS_ENUM(NSInteger, DBXSHARINGSharedLinkSettingsErrorTag) {
    /// The given settings are invalid (for example, all attributes of the
    /// SharedLinkSettings are empty, the requested visibility is password in
    /// RequestedVisibility but the linkPassword in SharedLinkSettings is
    /// missing, expires in SharedLinkSettings is set to the past, etc.)
    DBXSHARINGSharedLinkSettingsErrorInvalidSettings,

    /// User is not allowed to modify the settings of this link. Note that basic
    /// users can only set public in RequestedVisibility as the
    /// requestedVisibility in SharedLinkSettings and cannot set expires in
    /// SharedLinkSettings
    DBXSHARINGSharedLinkSettingsErrorNotAuthorized,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGSharedLinkSettingsErrorTag tag;

/// 
/// Initializes union class with tag state of `InvalidSettings`.
/// 
/// About the `InvalidSettings` tag state: The given settings are invalid (for
/// example, all attributes of the :type:`SharedLinkSettings` are empty, the
/// requested visibility is :field:`RequestedVisibility.password` but the
/// :field:`SharedLinkSettings.link_password` is missing,
/// :field:`SharedLinkSettings.expires` is set to the past, etc.)
/// 
/// - returns: An initialized `DBXSHARINGSharedLinkSettingsError` instance.
/// 
- (nonnull instancetype)initWithInvalidSettings;

/// 
/// Initializes union class with tag state of `NotAuthorized`.
/// 
/// About the `NotAuthorized` tag state: User is not allowed to modify the
/// settings of this link. Note that basic users can only set
/// :field:`RequestedVisibility.public` as the
/// :field:`SharedLinkSettings.requested_visibility` and cannot set
/// :field:`SharedLinkSettings.expires`
/// 
/// - returns: An initialized `DBXSHARINGSharedLinkSettingsError` instance.
/// 
- (nonnull instancetype)initWithNotAuthorized;

/// 
/// Retrieves whether the union's current tag state has value `InvalidSettings`.
/// 
/// - returns: Whether the union's current tag state has value
/// `InvalidSettings`.
/// 
- (BOOL)isInvalidSettings;

/// 
/// Retrieves whether the union's current tag state has value `NotAuthorized`.
/// 
/// - returns: Whether the union's current tag state has value `NotAuthorized`.
/// 
- (BOOL)isNotAuthorized;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGSharedLinkSettingsError` union.
/// 
@interface DBXSHARINGSharedLinkSettingsErrorSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGSharedLinkSettingsError` instances.
/// 
///  - parameter instance: An instance of the
/// `DBXSHARINGSharedLinkSettingsError` API object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGSharedLinkSettingsError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGSharedLinkSettingsError * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGSharedLinkSettingsError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGSharedLinkSettingsError` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGSharedLinkSettingsError`
/// object.
/// 
+ (DBXSHARINGSharedLinkSettingsError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
