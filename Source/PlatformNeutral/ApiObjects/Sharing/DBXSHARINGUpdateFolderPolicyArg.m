///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGAclUpdatePolicy.h"
#import "DBXSHARINGMemberPolicy.h"
#import "DBXSHARINGSharedLinkPolicy.h"
#import "DBXSHARINGUpdateFolderPolicyArg.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGUpdateFolderPolicyArg 

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId memberPolicy:(DBXSHARINGMemberPolicy *)memberPolicy aclUpdatePolicy:(DBXSHARINGAclUpdatePolicy *)aclUpdatePolicy sharedLinkPolicy:(DBXSHARINGSharedLinkPolicy *)sharedLinkPolicy {
    [DBXStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"](sharedFolderId);

    self = [super init];
    if (self) {
        _sharedFolderId = sharedFolderId;
        _memberPolicy = memberPolicy;
        _aclUpdatePolicy = aclUpdatePolicy;
        _sharedLinkPolicy = sharedLinkPolicy;
    }
    return self;
}

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId {
    return [self initWithSharedFolderId:sharedFolderId memberPolicy:nil aclUpdatePolicy:nil sharedLinkPolicy:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXSHARINGUpdateFolderPolicyArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGUpdateFolderPolicyArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGUpdateFolderPolicyArgSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGUpdateFolderPolicyArgSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGUpdateFolderPolicyArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"shared_folder_id"] = valueObj.sharedFolderId;
    if (valueObj.memberPolicy) {
        jsonDict[@"member_policy"] = [DBXSHARINGMemberPolicySerializer serialize:valueObj.memberPolicy];
    }
    if (valueObj.aclUpdatePolicy) {
        jsonDict[@"acl_update_policy"] = [DBXSHARINGAclUpdatePolicySerializer serialize:valueObj.aclUpdatePolicy];
    }
    if (valueObj.sharedLinkPolicy) {
        jsonDict[@"shared_link_policy"] = [DBXSHARINGSharedLinkPolicySerializer serialize:valueObj.sharedLinkPolicy];
    }

    return jsonDict;
}

+ (DBXSHARINGUpdateFolderPolicyArg *)deserialize:(NSDictionary *)valueDict {
    NSString *sharedFolderId = valueDict[@"shared_folder_id"];
    DBXSHARINGMemberPolicy *memberPolicy = valueDict[@"member_policy"] ? [DBXSHARINGMemberPolicySerializer deserialize:valueDict[@"member_policy"]] : nil;
    DBXSHARINGAclUpdatePolicy *aclUpdatePolicy = valueDict[@"acl_update_policy"] ? [DBXSHARINGAclUpdatePolicySerializer deserialize:valueDict[@"acl_update_policy"]] : nil;
    DBXSHARINGSharedLinkPolicy *sharedLinkPolicy = valueDict[@"shared_link_policy"] ? [DBXSHARINGSharedLinkPolicySerializer deserialize:valueDict[@"shared_link_policy"]] : nil;

    return [[DBXSHARINGUpdateFolderPolicyArg alloc] initWithSharedFolderId:sharedFolderId memberPolicy:memberPolicy aclUpdatePolicy:aclUpdatePolicy sharedLinkPolicy:sharedLinkPolicy];
}

@end
