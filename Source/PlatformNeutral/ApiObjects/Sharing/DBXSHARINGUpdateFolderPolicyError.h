///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXSHARINGSharedFolderAccessError;
@class DBXSHARINGUpdateFolderPolicyError;

/// 
/// The UpdateFolderPolicyError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXSHARINGUpdateFolderPolicyError : NSObject <DBXSerializable> 

/// The `DBXSHARINGUpdateFolderPolicyErrorTag` enum type represents the possible
/// tag states with which the `DBXSHARINGUpdateFolderPolicyError` union can
/// exist.
typedef NS_ENUM(NSInteger, DBXSHARINGUpdateFolderPolicyErrorTag) {
    /// (no description).
    DBXSHARINGUpdateFolderPolicyErrorAccessError,

    /// memberPolicy in UpdateFolderPolicyArg was set even though user is not on
    /// a team.
    DBXSHARINGUpdateFolderPolicyErrorNotOnTeam,

    /// Team policy is more restrictive than memberPolicy in ShareFolderArg.
    DBXSHARINGUpdateFolderPolicyErrorTeamPolicyDisallowsMemberPolicy,

    /// The current account is not allowed to select the specified
    /// sharedLinkPolicy in ShareFolderArg.
    DBXSHARINGUpdateFolderPolicyErrorDisallowedSharedLinkPolicy,

    /// The current user does not have permission to perform this action.
    DBXSHARINGUpdateFolderPolicyErrorNoPermission,

    /// (no description).
    DBXSHARINGUpdateFolderPolicyErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXSHARINGUpdateFolderPolicyErrorTag tag;

/// (no description).
@property (nonatomic, readonly) DBXSHARINGSharedFolderAccessError * _Nonnull accessError;

/// 
/// Initializes union class with tag state of `AccessError`.
/// 
/// - parameter accessError: (no description).
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithAccessError:(DBXSHARINGSharedFolderAccessError * _Nonnull)accessError;

/// 
/// Initializes union class with tag state of `NotOnTeam`.
/// 
/// About the `NotOnTeam` tag state:
/// :field:`UpdateFolderPolicyArg.member_policy` was set even though user is not
/// on a team.
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithNotOnTeam;

/// 
/// Initializes union class with tag state of `TeamPolicyDisallowsMemberPolicy`.
/// 
/// About the `TeamPolicyDisallowsMemberPolicy` tag state: Team policy is more
/// restrictive than :field:`ShareFolderArg.member_policy`.
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithTeamPolicyDisallowsMemberPolicy;

/// 
/// Initializes union class with tag state of `DisallowedSharedLinkPolicy`.
/// 
/// About the `DisallowedSharedLinkPolicy` tag state: The current account is not
/// allowed to select the specified :field:`ShareFolderArg.shared_link_policy`.
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithDisallowedSharedLinkPolicy;

/// 
/// Initializes union class with tag state of `NoPermission`.
/// 
/// About the `NoPermission` tag state: The current user does not have
/// permission to perform this action.
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithNoPermission;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXSHARINGUpdateFolderPolicyError` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `AccessError`.
/// 
/// - returns: Whether the union's current tag state has value `AccessError`.
/// 
- (BOOL)isAccessError;

/// 
/// Retrieves whether the union's current tag state has value `NotOnTeam`.
/// 
/// - returns: Whether the union's current tag state has value `NotOnTeam`.
/// 
- (BOOL)isNotOnTeam;

/// 
/// Retrieves whether the union's current tag state has value
/// `TeamPolicyDisallowsMemberPolicy`.
/// 
/// - returns: Whether the union's current tag state has value
/// `TeamPolicyDisallowsMemberPolicy`.
/// 
- (BOOL)isTeamPolicyDisallowsMemberPolicy;

/// 
/// Retrieves whether the union's current tag state has value
/// `DisallowedSharedLinkPolicy`.
/// 
/// - returns: Whether the union's current tag state has value
/// `DisallowedSharedLinkPolicy`.
/// 
- (BOOL)isDisallowedSharedLinkPolicy;

/// 
/// Retrieves whether the union's current tag state has value `NoPermission`.
/// 
/// - returns: Whether the union's current tag state has value `NoPermission`.
/// 
- (BOOL)isNoPermission;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXSHARINGUpdateFolderPolicyError` union.
/// 
@interface DBXSHARINGUpdateFolderPolicyErrorSerializer : NSObject 

/// 
/// Serializes `DBXSHARINGUpdateFolderPolicyError` instances.
/// 
///  - parameter instance: An instance of the
/// `DBXSHARINGUpdateFolderPolicyError` API object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXSHARINGUpdateFolderPolicyError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXSHARINGUpdateFolderPolicyError * _Nonnull)instance;

/// 
/// Deserializes `DBXSHARINGUpdateFolderPolicyError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXSHARINGUpdateFolderPolicyError` API object.
/// 
///  - returns: An instantiation of the `DBXSHARINGUpdateFolderPolicyError`
/// object.
/// 
+ (DBXSHARINGUpdateFolderPolicyError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
