///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DbxStoneSerializers.h"

@class DbxSharingAddFolderMemberError;
@class DbxSharingAddMemberSelectorError;
@class DbxSharingSharedFolderAccessError;

/// 
/// The DbxSharingAddFolderMemberError union.
/// 
@interface DbxSharingAddFolderMemberError : NSObject <DbxSerializable> 

typedef NS_ENUM(NSInteger, SharingAddFolderMemberErrorTag) {
    /// Unable to access shared folder.
    SharingAddFolderMemberErrorAccessError,
    /// The current user's e-mail address is unverified.
    SharingAddFolderMemberErrorEmailUnverified,
    /// members in AddFolderMemberArg contains a bad invitation recipient.
    SharingAddFolderMemberErrorBadMember,
    /// Your team policy does not allow sharing outside of the team.
    SharingAddFolderMemberErrorCantShareOutsideTeam,
    /// The value is the member limit that was reached.
    SharingAddFolderMemberErrorTooManyMembers,
    /// The value is the pending invite limit that was reached.
    SharingAddFolderMemberErrorTooManyPendingInvites,
    /// The current user has hit the limit of invites they can send per day. Try
    /// again in 24 hours.
    SharingAddFolderMemberErrorRateLimit,
    /// The current user is trying to share with too many people at once.
    SharingAddFolderMemberErrorTooManyInvitees,
    /// The current user's account doesn't support this action. An example of
    /// this is when adding a read-only member. This action can only be
    /// performed by users that have upgraded to a Pro or Business plan.
    SharingAddFolderMemberErrorInsufficientPlan,
    /// This action cannot be performed on a team shared folder.
    SharingAddFolderMemberErrorTeamFolder,
    /// The current user does not have permission to perform this action.
    SharingAddFolderMemberErrorNoPermission,
    /// (no description)
    SharingAddFolderMemberErrorOther,
};

- (nonnull instancetype)initWithAccessError:(DbxSharingSharedFolderAccessError * _Nonnull)accessError;

- (nonnull instancetype)initWithEmailUnverified;

- (nonnull instancetype)initWithBadMember:(DbxSharingAddMemberSelectorError * _Nonnull)badMember;

- (nonnull instancetype)initWithCantShareOutsideTeam;

- (nonnull instancetype)initWithTooManyMembers:(NSNumber * _Nonnull)tooManyMembers;

- (nonnull instancetype)initWithTooManyPendingInvites:(NSNumber * _Nonnull)tooManyPendingInvites;

- (nonnull instancetype)initWithRateLimit;

- (nonnull instancetype)initWithTooManyInvitees;

- (nonnull instancetype)initWithInsufficientPlan;

- (nonnull instancetype)initWithTeamFolder;

- (nonnull instancetype)initWithNoPermission;

- (nonnull instancetype)initWithOther;

- (BOOL)isAccessError;

- (BOOL)isEmailUnverified;

- (BOOL)isBadMember;

- (BOOL)isCantShareOutsideTeam;

- (BOOL)isTooManyMembers;

- (BOOL)isTooManyPendingInvites;

- (BOOL)isRateLimit;

- (BOOL)isTooManyInvitees;

- (BOOL)isInsufficientPlan;

- (BOOL)isTeamFolder;

- (BOOL)isNoPermission;

- (BOOL)isOther;

- (NSString * _Nonnull)getTagName;

- (NSString * _Nonnull)description;

/// Current state of the DbxSharingAddFolderMemberError union type.
@property (nonatomic) SharingAddFolderMemberErrorTag tag;
@property (nonatomic) DbxSharingSharedFolderAccessError * _Nonnull accessError;
@property (nonatomic) DbxSharingAddMemberSelectorError * _Nonnull badMember;
@property (nonatomic, copy) NSNumber * _Nonnull tooManyMembers;
@property (nonatomic, copy) NSNumber * _Nonnull tooManyPendingInvites;

@end


@interface DbxSharingAddFolderMemberErrorSerializer : NSObject 

+ (NSDictionary * _Nonnull)serialize:(DbxSharingAddFolderMemberError * _Nonnull)obj;

+ (DbxSharingAddFolderMemberError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
