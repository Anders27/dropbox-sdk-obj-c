///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingFileAction.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingFileAction 

- (instancetype)initWithEditContents {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionEditContents;
    }
    return self;
}

- (instancetype)initWithInviteViewer {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionInviteViewer;
    }
    return self;
}

- (instancetype)initWithInviteViewerNoComment {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionInviteViewerNoComment;
    }
    return self;
}

- (instancetype)initWithUnshare {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionUnshare;
    }
    return self;
}

- (instancetype)initWithRelinquishMembership {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionRelinquishMembership;
    }
    return self;
}

- (instancetype)initWithShareLink {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionShareLink;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (SharingFileActionTag)SharingFileActionOther;
    }
    return self;
}

- (BOOL)isEditContents {
    return _tag == (SharingFileActionTag)SharingFileActionEditContents;
}

- (BOOL)isInviteViewer {
    return _tag == (SharingFileActionTag)SharingFileActionInviteViewer;
}

- (BOOL)isInviteViewerNoComment {
    return _tag == (SharingFileActionTag)SharingFileActionInviteViewerNoComment;
}

- (BOOL)isUnshare {
    return _tag == (SharingFileActionTag)SharingFileActionUnshare;
}

- (BOOL)isRelinquishMembership {
    return _tag == (SharingFileActionTag)SharingFileActionRelinquishMembership;
}

- (BOOL)isShareLink {
    return _tag == (SharingFileActionTag)SharingFileActionShareLink;
}

- (BOOL)isOther {
    return _tag == (SharingFileActionTag)SharingFileActionOther;
}

- (NSString *)getTagName {
    if (_tag == (SharingFileActionTag)SharingFileActionEditContents) {
        return @"(SharingFileActionTag)SharingFileActionEditContents";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionInviteViewer) {
        return @"(SharingFileActionTag)SharingFileActionInviteViewer";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionInviteViewerNoComment) {
        return @"(SharingFileActionTag)SharingFileActionInviteViewerNoComment";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionUnshare) {
        return @"(SharingFileActionTag)SharingFileActionUnshare";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionRelinquishMembership) {
        return @"(SharingFileActionTag)SharingFileActionRelinquishMembership";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionShareLink) {
        return @"(SharingFileActionTag)SharingFileActionShareLink";
    }
    if (_tag == (SharingFileActionTag)SharingFileActionOther) {
        return @"(SharingFileActionTag)SharingFileActionOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingFileActionSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingFileActionSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingFileActionSerializer serialize:self] description];
}

@end


@implementation DbxSharingFileActionSerializer 

+ (NSDictionary *)serialize:(DbxSharingFileAction *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isEditContents]) {
        jsonDict[@".tag"] = @"edit_contents";
    }
    else if ([valueObj isInviteViewer]) {
        jsonDict[@".tag"] = @"invite_viewer";
    }
    else if ([valueObj isInviteViewerNoComment]) {
        jsonDict[@".tag"] = @"invite_viewer_no_comment";
    }
    else if ([valueObj isUnshare]) {
        jsonDict[@".tag"] = @"unshare";
    }
    else if ([valueObj isRelinquishMembership]) {
        jsonDict[@".tag"] = @"relinquish_membership";
    }
    else if ([valueObj isShareLink]) {
        jsonDict[@".tag"] = @"share_link";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingFileAction *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"edit_contents"]) {
        return [[DbxSharingFileAction alloc] initWithEditContents];
    }
    if ([tag isEqualToString:@"invite_viewer"]) {
        return [[DbxSharingFileAction alloc] initWithInviteViewer];
    }
    if ([tag isEqualToString:@"invite_viewer_no_comment"]) {
        return [[DbxSharingFileAction alloc] initWithInviteViewerNoComment];
    }
    if ([tag isEqualToString:@"unshare"]) {
        return [[DbxSharingFileAction alloc] initWithUnshare];
    }
    if ([tag isEqualToString:@"relinquish_membership"]) {
        return [[DbxSharingFileAction alloc] initWithRelinquishMembership];
    }
    if ([tag isEqualToString:@"share_link"]) {
        return [[DbxSharingFileAction alloc] initWithShareLink];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxSharingFileAction alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
