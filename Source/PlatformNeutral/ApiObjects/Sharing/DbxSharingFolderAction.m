///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingFolderAction.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingFolderAction 

- (instancetype)initWithChangeOptions {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionChangeOptions;
    }
    return self;
}

- (instancetype)initWithEditContents {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionEditContents;
    }
    return self;
}

- (instancetype)initWithInviteEditor {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionInviteEditor;
    }
    return self;
}

- (instancetype)initWithInviteViewer {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionInviteViewer;
    }
    return self;
}

- (instancetype)initWithInviteViewerNoComment {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionInviteViewerNoComment;
    }
    return self;
}

- (instancetype)initWithRelinquishMembership {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionRelinquishMembership;
    }
    return self;
}

- (instancetype)initWithUnmount {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionUnmount;
    }
    return self;
}

- (instancetype)initWithUnshare {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionUnshare;
    }
    return self;
}

- (instancetype)initWithLeaveACopy {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionLeaveACopy;
    }
    return self;
}

- (instancetype)initWithShareLink {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionShareLink;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = SharingFolderActionOther;
    }
    return self;
}

- (BOOL)isChangeOptions {
    return _tag == SharingFolderActionChangeOptions;
}

- (BOOL)isEditContents {
    return _tag == SharingFolderActionEditContents;
}

- (BOOL)isInviteEditor {
    return _tag == SharingFolderActionInviteEditor;
}

- (BOOL)isInviteViewer {
    return _tag == SharingFolderActionInviteViewer;
}

- (BOOL)isInviteViewerNoComment {
    return _tag == SharingFolderActionInviteViewerNoComment;
}

- (BOOL)isRelinquishMembership {
    return _tag == SharingFolderActionRelinquishMembership;
}

- (BOOL)isUnmount {
    return _tag == SharingFolderActionUnmount;
}

- (BOOL)isUnshare {
    return _tag == SharingFolderActionUnshare;
}

- (BOOL)isLeaveACopy {
    return _tag == SharingFolderActionLeaveACopy;
}

- (BOOL)isShareLink {
    return _tag == SharingFolderActionShareLink;
}

- (BOOL)isOther {
    return _tag == SharingFolderActionOther;
}

- (NSString *)getTagName {
    switch (_tag) {
        case SharingFolderActionChangeOptions:
           return @"SharingFolderActionChangeOptions";
        case SharingFolderActionEditContents:
           return @"SharingFolderActionEditContents";
        case SharingFolderActionInviteEditor:
           return @"SharingFolderActionInviteEditor";
        case SharingFolderActionInviteViewer:
           return @"SharingFolderActionInviteViewer";
        case SharingFolderActionInviteViewerNoComment:
           return @"SharingFolderActionInviteViewerNoComment";
        case SharingFolderActionRelinquishMembership:
           return @"SharingFolderActionRelinquishMembership";
        case SharingFolderActionUnmount:
           return @"SharingFolderActionUnmount";
        case SharingFolderActionUnshare:
           return @"SharingFolderActionUnshare";
        case SharingFolderActionLeaveACopy:
           return @"SharingFolderActionLeaveACopy";
        case SharingFolderActionShareLink:
           return @"SharingFolderActionShareLink";
        case SharingFolderActionOther:
           return @"SharingFolderActionOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingFolderActionSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingFolderActionSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingFolderActionSerializer serialize:self] description];
}

@end


@implementation DbxSharingFolderActionSerializer 

+ (NSDictionary *)serialize:(DbxSharingFolderAction *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isChangeOptions]) {
        jsonDict[@".tag"] = @"change_options";
    }
    else if ([valueObj isEditContents]) {
        jsonDict[@".tag"] = @"edit_contents";
    }
    else if ([valueObj isInviteEditor]) {
        jsonDict[@".tag"] = @"invite_editor";
    }
    else if ([valueObj isInviteViewer]) {
        jsonDict[@".tag"] = @"invite_viewer";
    }
    else if ([valueObj isInviteViewerNoComment]) {
        jsonDict[@".tag"] = @"invite_viewer_no_comment";
    }
    else if ([valueObj isRelinquishMembership]) {
        jsonDict[@".tag"] = @"relinquish_membership";
    }
    else if ([valueObj isUnmount]) {
        jsonDict[@".tag"] = @"unmount";
    }
    else if ([valueObj isUnshare]) {
        jsonDict[@".tag"] = @"unshare";
    }
    else if ([valueObj isLeaveACopy]) {
        jsonDict[@".tag"] = @"leave_a_copy";
    }
    else if ([valueObj isShareLink]) {
        jsonDict[@".tag"] = @"share_link";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingFolderAction *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"change_options"]) {
        return [[DbxSharingFolderAction alloc] initWithChangeOptions];
    }
    if ([tag isEqualToString:@"edit_contents"]) {
        return [[DbxSharingFolderAction alloc] initWithEditContents];
    }
    if ([tag isEqualToString:@"invite_editor"]) {
        return [[DbxSharingFolderAction alloc] initWithInviteEditor];
    }
    if ([tag isEqualToString:@"invite_viewer"]) {
        return [[DbxSharingFolderAction alloc] initWithInviteViewer];
    }
    if ([tag isEqualToString:@"invite_viewer_no_comment"]) {
        return [[DbxSharingFolderAction alloc] initWithInviteViewerNoComment];
    }
    if ([tag isEqualToString:@"relinquish_membership"]) {
        return [[DbxSharingFolderAction alloc] initWithRelinquishMembership];
    }
    if ([tag isEqualToString:@"unmount"]) {
        return [[DbxSharingFolderAction alloc] initWithUnmount];
    }
    if ([tag isEqualToString:@"unshare"]) {
        return [[DbxSharingFolderAction alloc] initWithUnshare];
    }
    if ([tag isEqualToString:@"leave_a_copy"]) {
        return [[DbxSharingFolderAction alloc] initWithLeaveACopy];
    }
    if ([tag isEqualToString:@"share_link"]) {
        return [[DbxSharingFolderAction alloc] initWithShareLink];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxSharingFolderAction alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
