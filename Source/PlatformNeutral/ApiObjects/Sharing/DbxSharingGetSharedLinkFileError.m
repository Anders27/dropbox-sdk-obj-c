///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingGetSharedLinkFileError.h"
#import "DbxSharingSharedLinkError.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingGetSharedLinkFileError 

- (instancetype)initWithSharedLinkNotFound {
    self = [super init];
    if (self != nil) {
        _tag = (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkNotFound;
    }
    return self;
}

- (instancetype)initWithSharedLinkAccessDenied {
    self = [super init];
    if (self != nil) {
        _tag = (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkAccessDenied;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorOther;
    }
    return self;
}

- (instancetype)initWithSharedLinkIsDirectory {
    self = [super init];
    if (self != nil) {
        _tag = (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkIsDirectory;
    }
    return self;
}

- (BOOL)isSharedLinkNotFound {
    return _tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkNotFound;
}

- (BOOL)isSharedLinkAccessDenied {
    return _tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkAccessDenied;
}

- (BOOL)isOther {
    return _tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorOther;
}

- (BOOL)isSharedLinkIsDirectory {
    return _tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkIsDirectory;
}

- (NSString *)getTagName {
    if (_tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkNotFound) {
        return @"(SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkNotFound";
    }
    if (_tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkAccessDenied) {
        return @"(SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkAccessDenied";
    }
    if (_tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorOther) {
        return @"(SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorOther";
    }
    if (_tag == (SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkIsDirectory) {
        return @"(SharingGetSharedLinkFileErrorTag)SharingGetSharedLinkFileErrorSharedLinkIsDirectory";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingGetSharedLinkFileErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingGetSharedLinkFileErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingGetSharedLinkFileErrorSerializer serialize:self] description];
}

@end


@implementation DbxSharingGetSharedLinkFileErrorSerializer 

+ (NSDictionary *)serialize:(DbxSharingGetSharedLinkFileError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isSharedLinkNotFound]) {
        jsonDict[@".tag"] = @"shared_link_not_found";
    }
    else if ([valueObj isSharedLinkAccessDenied]) {
        jsonDict[@".tag"] = @"shared_link_access_denied";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else if ([valueObj isSharedLinkIsDirectory]) {
        jsonDict[@".tag"] = @"shared_link_is_directory";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingGetSharedLinkFileError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"shared_link_not_found"]) {
        return [[DbxSharingGetSharedLinkFileError alloc] initWithSharedLinkNotFound];
    }
    if ([tag isEqualToString:@"shared_link_access_denied"]) {
        return [[DbxSharingGetSharedLinkFileError alloc] initWithSharedLinkAccessDenied];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxSharingGetSharedLinkFileError alloc] initWithOther];
    }
    if ([tag isEqualToString:@"shared_link_is_directory"]) {
        return [[DbxSharingGetSharedLinkFileError alloc] initWithSharedLinkIsDirectory];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
