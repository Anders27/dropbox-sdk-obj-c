///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingGetSharedLinkMetadataArg.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingGetSharedLinkMetadataArg 

- (instancetype)initWithUrl:(NSString *)url path:(NSString *)path linkPassword:(NSString *)linkPassword {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators stringValidator:nil maxLength:nil pattern:@"/(.|[\\r\\n])*"]](path);

    self = [super init];
    if (self != nil) {
        _url = url;
        _path = path;
        _linkPassword = linkPassword;
    }
    return self;
}

- (instancetype)initWithUrl:(NSString *)url {
    return [self initWithUrl:url path:nil linkPassword:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingGetSharedLinkMetadataArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingGetSharedLinkMetadataArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingGetSharedLinkMetadataArgSerializer serialize:self] description];
}

@end


@implementation DbxSharingGetSharedLinkMetadataArgSerializer 

+ (NSDictionary *)serialize:(DbxSharingGetSharedLinkMetadataArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"url"] = [DbxStringSerializer serialize:valueObj.url];
    if (valueObj.path) {
        jsonDict[@"path"] = [DbxStringSerializer serialize:valueObj.path];
    }
    if (valueObj.linkPassword) {
        jsonDict[@"link_password"] = [DbxStringSerializer serialize:valueObj.linkPassword];
    }

    return jsonDict;
}

+ (DbxSharingGetSharedLinkMetadataArg *)deserialize:(NSDictionary *)valueDict {
    NSString *url = [DbxStringSerializer deserialize:valueDict[@"url"]];
    NSString *path = valueDict[@"path"] != nil ? [DbxStringSerializer deserialize:valueDict[@"path"]] : nil;
    NSString *linkPassword = valueDict[@"link_password"] != nil ? [DbxStringSerializer deserialize:valueDict[@"link_password"]] : nil;

    return [[DbxSharingGetSharedLinkMetadataArg alloc] initWithUrl:url path:path linkPassword:linkPassword];
}

@end
