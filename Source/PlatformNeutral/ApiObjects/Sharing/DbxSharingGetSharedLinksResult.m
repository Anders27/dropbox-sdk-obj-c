///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingGetSharedLinksResult.h"
#import "DbxSharingLinkMetadata.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingGetSharedLinksResult 

- (instancetype)initWithLinks:(NSArray<DbxSharingLinkMetadata *> *)links {
    [DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](links);

    self = [super init];
    if (self != nil) {
        _links = links;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingGetSharedLinksResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingGetSharedLinksResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingGetSharedLinksResultSerializer serialize:self] description];
}

@end


@implementation DbxSharingGetSharedLinksResultSerializer 

+ (NSDictionary *)serialize:(DbxSharingGetSharedLinksResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"links"] = [DbxArraySerializer serialize:valueObj.links withBlock:^id(id obj) { return [DbxSharingLinkMetadataSerializer serialize:obj]; }];

    return jsonDict;
}

+ (DbxSharingGetSharedLinksResult *)deserialize:(NSDictionary *)valueDict {
    NSArray<DbxSharingLinkMetadata *> *links = [DbxArraySerializer deserialize:valueDict withBlock:^id(id obj) { return [DbxSharingLinkMetadataSerializer deserialize:obj]; }];

    return [[DbxSharingGetSharedLinksResult alloc] initWithLinks:links];
}

@end
