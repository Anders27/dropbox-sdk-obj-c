///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingAccessLevel.h"
#import "DbxSharingGroupInfo.h"
#import "DbxSharingGroupMembershipInfo.h"
#import "DbxSharingMemberPermission.h"
#import "DbxSharingMembershipInfo.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingGroupMembershipInfo 

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType group:(DbxSharingGroupInfo *)group permissions:(NSArray<DbxSharingMemberPermission *> *)permissions initials:(NSString *)initials isInherited:(NSNumber *)isInherited {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](permissions);

    self = [super initWithAccessType:accessType permissions:permissions initials:initials isInherited:isInherited];
    if (self != nil) {
        _group = group;
    }
    return self;
}

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType group:(DbxSharingGroupInfo *)group {
    return [self initWithAccessType:accessType group:group permissions:nil initials:nil isInherited:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingGroupMembershipInfoSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingGroupMembershipInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingGroupMembershipInfoSerializer serialize:self] description];
}

@end


@implementation DbxSharingGroupMembershipInfoSerializer 

+ (NSDictionary *)serialize:(DbxSharingGroupMembershipInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"access_type"] = [DbxSharingAccessLevelSerializer serialize:valueObj.accessType];
    jsonDict[@"group"] = [DbxSharingGroupInfoSerializer serialize:valueObj.group];
    if (valueObj.permissions) {
        jsonDict[@"permissions"] = [DbxArraySerializer serialize:valueObj.permissions withBlock:^id(id elem) { return [DbxSharingMemberPermissionSerializer serialize:elem]; }];
    }
    if (valueObj.initials) {
        jsonDict[@"initials"] = valueObj.initials;
    }
    jsonDict[@"is_inherited"] = valueObj.isInherited;

    return jsonDict;
}

+ (DbxSharingGroupMembershipInfo *)deserialize:(NSDictionary *)valueDict {
    DbxSharingAccessLevel *accessType = [DbxSharingAccessLevelSerializer deserialize:valueDict[@"access_type"]];
    DbxSharingGroupInfo *group = [DbxSharingGroupInfoSerializer deserialize:valueDict[@"group"]];
    NSArray<DbxSharingMemberPermission *> *permissions = valueDict[@"permissions"] ? [DbxArraySerializer deserialize:valueDict[@"permissions"] withBlock:^id(id elem) { return [DbxSharingMemberPermissionSerializer deserialize:elem]; }] : nil;
    NSString *initials = valueDict[@"initials"] ? valueDict[@"initials"] : nil;
    NSNumber *isInherited = valueDict[@"is_inherited"];

    return [[DbxSharingGroupMembershipInfo alloc] initWithAccessType:accessType group:group permissions:permissions initials:initials isInherited:isInherited];
}

@end
