///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingListFileMembersBatchArg.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingListFileMembersBatchArg 

- (instancetype)initWithFiles:(NSArray<NSString *> *)files limit:(NSNumber *)limit {
    [DbxStoneValidators arrayValidator:nil maxItems:[NSNumber numberWithInt:100] itemValidator:[DbxStoneValidators stringValidator:[NSNumber numberWithInt:1] maxLength:nil pattern:@"((/|id:).*|nspath:[^:]*:[^:]*)"]](files);
    [DbxStoneValidators numericValidator:nil maxValue:[NSNumber numberWithInt:20]](limit ?: [NSNumber numberWithInt:10]);

    self = [super init];
    if (self != nil) {
        _files = files;
        _limit = limit ?: [NSNumber numberWithInt:10];
    }
    return self;
}

- (instancetype)initWithFiles:(NSArray<NSString *> *)files {
    return [self initWithFiles:files limit:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingListFileMembersBatchArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingListFileMembersBatchArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingListFileMembersBatchArgSerializer serialize:self] description];
}

@end


@implementation DbxSharingListFileMembersBatchArgSerializer 

+ (NSDictionary *)serialize:(DbxSharingListFileMembersBatchArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"files"] = [DbxArraySerializer serialize:valueObj.files withBlock:^id(id elem) { return [DbxStringSerializer serialize:elem]; }];
    jsonDict[@"limit"] = [DbxNSNumberSerializer serialize:valueObj.limit];

    return jsonDict;
}

+ (DbxSharingListFileMembersBatchArg *)deserialize:(NSDictionary *)valueDict {
    NSArray<NSString *> *files = [DbxArraySerializer deserialize:valueDict[@"files"] withBlock:^id(id elem) { return [DbxStringSerializer deserialize:elem]; }];
    NSNumber *limit = [DbxNSNumberSerializer deserialize:valueDict[@"limit"]];

    return [[DbxSharingListFileMembersBatchArg alloc] initWithFiles:files limit:limit];
}

@end
