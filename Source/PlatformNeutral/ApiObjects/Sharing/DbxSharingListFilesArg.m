///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingFileAction.h"
#import "DbxSharingListFilesArg.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingListFilesArg 

- (instancetype)initWithLimit:(NSNumber *)limit actions:(NSArray<DbxSharingFileAction *> *)actions {
    [DbxStoneValidators numericValidator:[NSNumber numberWithInt:1] maxValue:[NSNumber numberWithInt:300]](limit ?: [NSNumber numberWithInt:100]);
    [DbxStoneValidators nullableValidator:[DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](actions);

    self = [super init];
    if (self != nil) {
        _limit = limit ?: [NSNumber numberWithInt:100];
        _actions = actions;
    }
    return self;
}

- (instancetype)init {
    return [self initWithLimit:nil actions:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingListFilesArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingListFilesArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingListFilesArgSerializer serialize:self] description];
}

@end


@implementation DbxSharingListFilesArgSerializer 

+ (NSDictionary *)serialize:(DbxSharingListFilesArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"limit"] = [DbxNSNumberSerializer serialize:valueObj.limit];
    if (valueObj.actions) {
        jsonDict[@"actions"] = [DbxArraySerializer serialize:valueObj.actions withBlock:^id(id elem) { return [DbxSharingFileActionSerializer serialize:elem]; }];
    }

    return jsonDict;
}

+ (DbxSharingListFilesArg *)deserialize:(NSDictionary *)valueDict {
    NSNumber *limit = [DbxNSNumberSerializer deserialize:valueDict[@"limit"]];
    NSArray<DbxSharingFileAction *> *actions = valueDict[@"actions"] != nil ? [DbxArraySerializer deserialize:valueDict[@"actions"] withBlock:^id(id elem) { return [DbxSharingFileActionSerializer deserialize:elem]; }] : nil;

    return [[DbxSharingListFilesArg alloc] initWithLimit:limit actions:actions];
}

@end
