///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGListFilesResult.h"
#import "DBXSHARINGSharedFileMetadata.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGListFilesResult 

- (instancetype)initWithEntries:(NSArray<DBXSHARINGSharedFileMetadata *> *)entries cursor:(NSString *)cursor {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](entries);

    self = [super init];
    if (self != nil) {
        _entries = entries;
        _cursor = cursor;
    }
    return self;
}

- (instancetype)initWithEntries:(NSArray<DBXSHARINGSharedFileMetadata *> *)entries {
    return [self initWithEntries:entries cursor:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXSHARINGListFilesResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGListFilesResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGListFilesResultSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGListFilesResultSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGListFilesResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"entries"] = [DBXArraySerializer serialize:valueObj.entries withBlock:^id(id elem) { return [DBXSHARINGSharedFileMetadataSerializer serialize:elem]; }];
    if (valueObj.cursor) {
        jsonDict[@"cursor"] = valueObj.cursor;
    }

    return jsonDict;
}

+ (DBXSHARINGListFilesResult *)deserialize:(NSDictionary *)valueDict {
    NSArray<DBXSHARINGSharedFileMetadata *> *entries = [DBXArraySerializer deserialize:valueDict[@"entries"] withBlock:^id(id elem) { return [DBXSHARINGSharedFileMetadataSerializer deserialize:elem]; }];
    NSString *cursor = valueDict[@"cursor"] ?: nil;

    return [[DBXSHARINGListFilesResult alloc] initWithEntries:entries cursor:cursor];
}

@end
