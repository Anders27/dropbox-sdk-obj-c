///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingListFoldersContinueError.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingListFoldersContinueError 

- (instancetype)initWithInvalidCursor {
    self = [super init];
    if (self != nil) {
        _tag = (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorInvalidCursor;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorOther;
    }
    return self;
}

- (BOOL)isInvalidCursor {
    return _tag == (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorInvalidCursor;
}

- (BOOL)isOther {
    return _tag == (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorOther;
}

- (NSString *)getTagName {
    if (_tag == (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorInvalidCursor) {
        return @"(SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorInvalidCursor";
    }
    if (_tag == (SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorOther) {
        return @"(SharingListFoldersContinueErrorTag)SharingListFoldersContinueErrorOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingListFoldersContinueErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingListFoldersContinueErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingListFoldersContinueErrorSerializer serialize:self] description];
}

@end


@implementation DbxSharingListFoldersContinueErrorSerializer 

+ (NSDictionary *)serialize:(DbxSharingListFoldersContinueError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isInvalidCursor]) {
        jsonDict[@".tag"] = @"invalid_cursor";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingListFoldersContinueError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"invalid_cursor"]) {
        return [[DbxSharingListFoldersContinueError alloc] initWithInvalidCursor];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxSharingListFoldersContinueError alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
