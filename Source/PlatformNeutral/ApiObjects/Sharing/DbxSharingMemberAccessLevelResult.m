///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGAccessLevel.h"
#import "DBXSHARINGMemberAccessLevelResult.h"
#import "DBXSHARINGParentFolderAccessInfo.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGMemberAccessLevelResult 

- (instancetype)initWithAccessLevel:(DBXSHARINGAccessLevel *)accessLevel warning:(NSString *)warning accessDetails:(NSArray<DBXSHARINGParentFolderAccessInfo *> *)accessDetails {
    [DBXStoneValidators nullableValidator:[DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](accessDetails);

    self = [super init];
    if (self != nil) {
        _accessLevel = accessLevel;
        _warning = warning;
        _accessDetails = accessDetails;
    }
    return self;
}

- (instancetype)init {
    return [self initWithAccessLevel:nil warning:nil accessDetails:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXSHARINGMemberAccessLevelResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGMemberAccessLevelResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGMemberAccessLevelResultSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGMemberAccessLevelResultSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGMemberAccessLevelResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if (valueObj.accessLevel) {
        jsonDict[@"access_level"] = [DBXSHARINGAccessLevelSerializer serialize:valueObj.accessLevel];
    }
    if (valueObj.warning) {
        jsonDict[@"warning"] = valueObj.warning;
    }
    if (valueObj.accessDetails) {
        jsonDict[@"access_details"] = [DBXArraySerializer serialize:valueObj.accessDetails withBlock:^id(id elem) { return [DBXSHARINGParentFolderAccessInfoSerializer serialize:elem]; }];
    }

    return jsonDict;
}

+ (DBXSHARINGMemberAccessLevelResult *)deserialize:(NSDictionary *)valueDict {
    DBXSHARINGAccessLevel *accessLevel = valueDict[@"access_level"] ? [DBXSHARINGAccessLevelSerializer deserialize:valueDict[@"access_level"]] : nil;
    NSString *warning = valueDict[@"warning"] ?: nil;
    NSArray<DBXSHARINGParentFolderAccessInfo *> *accessDetails = valueDict[@"access_details"] ? [DBXArraySerializer deserialize:valueDict[@"access_details"] withBlock:^id(id elem) { return [DBXSHARINGParentFolderAccessInfoSerializer deserialize:elem]; }] : nil;

    return [[DBXSHARINGMemberAccessLevelResult alloc] initWithAccessLevel:accessLevel warning:warning accessDetails:accessDetails];
}

@end
