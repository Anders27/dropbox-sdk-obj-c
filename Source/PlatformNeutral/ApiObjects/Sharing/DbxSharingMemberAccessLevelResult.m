///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingAccessLevel.h"
#import "DbxSharingMemberAccessLevelResult.h"
#import "DbxSharingParentFolderAccessInfo.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingMemberAccessLevelResult 

- (instancetype)initWithAccessLevel:(DbxSharingAccessLevel *)accessLevel warning:(NSString *)warning accessDetails:(NSArray<DbxSharingParentFolderAccessInfo *> *)accessDetails {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](accessDetails);

    self = [super init];
    if (self != nil) {
        _accessLevel = accessLevel;
        _warning = warning;
        _accessDetails = accessDetails;
    }
    return self;
}

- (instancetype)init {
    return [self initWithAccessLevel:nil warning:nil accessDetails:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingMemberAccessLevelResultSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingMemberAccessLevelResultSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingMemberAccessLevelResultSerializer serialize:self] description];
}

@end


@implementation DbxSharingMemberAccessLevelResultSerializer 

+ (NSDictionary *)serialize:(DbxSharingMemberAccessLevelResult *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if (valueObj.accessLevel) {
        jsonDict[@"access_level"] = [DbxSharingAccessLevelSerializer serialize:valueObj.accessLevel];
    }
    if (valueObj.warning) {
        jsonDict[@"warning"] = [DbxStringSerializer serialize:valueObj.warning];
    }
    if (valueObj.accessDetails) {
        jsonDict[@"access_details"] = [DbxArraySerializer serialize:valueObj.accessDetails withBlock:^id(id elem) { return [DbxSharingParentFolderAccessInfoSerializer serialize:elem]; }];
    }

    return jsonDict;
}

+ (DbxSharingMemberAccessLevelResult *)deserialize:(NSDictionary *)valueDict {
    DbxSharingAccessLevel *accessLevel = valueDict[@"access_level"] != nil ? [DbxSharingAccessLevelSerializer deserialize:valueDict[@"access_level"]] : nil;
    NSString *warning = valueDict[@"warning"] != nil ? [DbxStringSerializer deserialize:valueDict[@"warning"]] : nil;
    NSArray<DbxSharingParentFolderAccessInfo *> *accessDetails = valueDict[@"access_details"] != nil ? [DbxArraySerializer deserialize:valueDict[@"access_details"] withBlock:^id(id elem) { return [DbxSharingParentFolderAccessInfoSerializer deserialize:elem]; }] : nil;

    return [[DbxSharingMemberAccessLevelResult alloc] initWithAccessLevel:accessLevel warning:warning accessDetails:accessDetails];
}

@end
