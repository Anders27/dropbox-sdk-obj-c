///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGMemberPermission.h"
#import "DBXSHARINGParentFolderAccessInfo.h"
#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"

@implementation DBXSHARINGParentFolderAccessInfo 

- (instancetype)initWithFolderName:(NSString *)folderName sharedFolderId:(NSString *)sharedFolderId permissions:(NSArray<DBXSHARINGMemberPermission *> *)permissions {
    [DBXStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"](sharedFolderId);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](permissions);

    self = [super init];
    if (self != nil) {
        _folderName = folderName;
        _sharedFolderId = sharedFolderId;
        _permissions = permissions;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXSHARINGParentFolderAccessInfoSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXSHARINGParentFolderAccessInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXSHARINGParentFolderAccessInfoSerializer serialize:self] description];
}

@end


@implementation DBXSHARINGParentFolderAccessInfoSerializer 

+ (NSDictionary *)serialize:(DBXSHARINGParentFolderAccessInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"folder_name"] = valueObj.folderName;
    jsonDict[@"shared_folder_id"] = valueObj.sharedFolderId;
    jsonDict[@"permissions"] = [DBXArraySerializer serialize:valueObj.permissions withBlock:^id(id elem) { return [DBXSHARINGMemberPermissionSerializer serialize:elem]; }];

    return jsonDict;
}

+ (DBXSHARINGParentFolderAccessInfo *)deserialize:(NSDictionary *)valueDict {
    NSString *folderName = valueDict[@"folder_name"];
    NSString *sharedFolderId = valueDict[@"shared_folder_id"];
    NSArray<DBXSHARINGMemberPermission *> *permissions = [DBXArraySerializer deserialize:valueDict[@"permissions"] withBlock:^id(id elem) { return [DBXSHARINGMemberPermissionSerializer deserialize:elem]; }];

    return [[DBXSHARINGParentFolderAccessInfo alloc] initWithFolderName:folderName sharedFolderId:sharedFolderId permissions:permissions];
}

@end
