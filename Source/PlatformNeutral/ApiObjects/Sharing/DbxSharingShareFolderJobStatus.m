///
/// Auto-generated by Stone, do not modify.
///

#import "DbxAsyncPollResultBase.h"
#import "DbxSharingShareFolderError.h"
#import "DbxSharingShareFolderJobStatus.h"
#import "DbxSharingSharedFolderMetadata.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingShareFolderJobStatus 

- (instancetype)initWithInProgress {
    self = [super init];
    if (self != nil) {
        _tag = (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusInProgress;
    }
    return self;
}

- (instancetype)initWithComplete:(DbxSharingSharedFolderMetadata *)complete {
    self = [super init];
    if (self != nil) {
        _tag = (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete;
        _complete = complete;
    }
    return self;
}

- (instancetype)initWithFailed:(DbxSharingShareFolderError *)failed {
    self = [super init];
    if (self != nil) {
        _tag = (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed;
        _failed = failed;
    }
    return self;
}

- (BOOL)isInProgress {
    return _tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusInProgress;
}

- (BOOL)isComplete {
    return _tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete;
}

- (BOOL)isFailed {
    return _tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed;
}

- (NSString *)getTagName {
    if (_tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusInProgress) {
        return @"(SharingShareFolderJobStatusTag)SharingShareFolderJobStatusInProgress";
    }
    if (_tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete) {
        return @"(SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete";
    }
    if (_tag == (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed) {
        return @"(SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

- (DbxSharingSharedFolderMetadata *)complete {
    if (_tag != (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusComplete, but was %@.", [self getTagName]];
    }
    return _complete;
}

- (DbxSharingShareFolderError *)failed {
    if (_tag != (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (SharingShareFolderJobStatusTag)SharingShareFolderJobStatusFailed, but was %@.", [self getTagName]];
    }
    return _failed;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingShareFolderJobStatusSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingShareFolderJobStatusSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingShareFolderJobStatusSerializer serialize:self] description];
}

@end


@implementation DbxSharingShareFolderJobStatusSerializer 

+ (NSDictionary *)serialize:(DbxSharingShareFolderJobStatus *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isInProgress]) {
        jsonDict[@".tag"] = @"in_progress";
    }
    else if ([valueObj isComplete]) {
        jsonDict[@"complete"] = [DbxSharingSharedFolderMetadataSerializer serialize:valueObj.complete];
        jsonDict[@".tag"] = @"complete";
    }
    else if ([valueObj isFailed]) {
        jsonDict[@"failed"] = [DbxSharingShareFolderErrorSerializer serialize:valueObj.failed];
        jsonDict[@".tag"] = @"failed";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingShareFolderJobStatus *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"in_progress"]) {
        return [[DbxSharingShareFolderJobStatus alloc] initWithInProgress];
    }
    if ([tag isEqualToString:@"complete"]) {
        DbxSharingSharedFolderMetadata *complete = [DbxSharingSharedFolderMetadataSerializer deserialize:valueDict[@"complete"]];
        return [[DbxSharingShareFolderJobStatus alloc] initWithComplete:complete];
    }
    if ([tag isEqualToString:@"failed"]) {
        DbxSharingShareFolderError *failed = [DbxSharingShareFolderErrorSerializer deserialize:valueDict[@"failed"]];
        return [[DbxSharingShareFolderJobStatus alloc] initWithFailed:failed];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
