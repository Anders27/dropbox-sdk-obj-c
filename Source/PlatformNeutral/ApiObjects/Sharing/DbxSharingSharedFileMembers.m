///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingGroupMembershipInfo.h"
#import "DbxSharingInviteeMembershipInfo.h"
#import "DbxSharingSharedFileMembers.h"
#import "DbxSharingUserMembershipInfo.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingSharedFileMembers 

- (instancetype)initWithUsers:(NSArray<DbxSharingUserMembershipInfo *> *)users groups:(NSArray<DbxSharingGroupMembershipInfo *> *)groups invitees:(NSArray<DbxSharingInviteeMembershipInfo *> *)invitees cursor:(NSString *)cursor {
    [DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](users);
    [DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](groups);
    [DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](invitees);

    self = [super init];
    if (self != nil) {
        _users = users;
        _groups = groups;
        _invitees = invitees;
        _cursor = cursor;
    }
    return self;
}

- (instancetype)initWithUsers:(NSArray<DbxSharingUserMembershipInfo *> *)users groups:(NSArray<DbxSharingGroupMembershipInfo *> *)groups invitees:(NSArray<DbxSharingInviteeMembershipInfo *> *)invitees {
    return [self initWithUsers:users groups:groups invitees:invitees cursor:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingSharedFileMembersSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingSharedFileMembersSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingSharedFileMembersSerializer serialize:self] description];
}

@end


@implementation DbxSharingSharedFileMembersSerializer 

+ (NSDictionary *)serialize:(DbxSharingSharedFileMembers *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"users"] = [DbxArraySerializer serialize:valueObj.users withBlock:^id(id obj) { return [DbxSharingUserMembershipInfoSerializer serialize:obj]; }];
    jsonDict[@"groups"] = [DbxArraySerializer serialize:valueObj.groups withBlock:^id(id obj) { return [DbxSharingGroupMembershipInfoSerializer serialize:obj]; }];
    jsonDict[@"invitees"] = [DbxArraySerializer serialize:valueObj.invitees withBlock:^id(id obj) { return [DbxSharingInviteeMembershipInfoSerializer serialize:obj]; }];
    if (valueObj.cursor != nil) {
        jsonDict[@"cursor"] = [DbxStringSerializer serialize:valueObj.cursor];
    }

    return jsonDict;
}

+ (DbxSharingSharedFileMembers *)deserialize:(NSDictionary *)valueDict {
    NSArray<DbxSharingUserMembershipInfo *> *users = [DbxArraySerializer deserialize:valueDict[@"users"] withBlock:^id(id obj) { return [DbxSharingUserMembershipInfoSerializer deserialize:obj]; }];
    NSArray<DbxSharingGroupMembershipInfo *> *groups = [DbxArraySerializer deserialize:valueDict[@"groups"] withBlock:^id(id obj) { return [DbxSharingGroupMembershipInfoSerializer deserialize:obj]; }];
    NSArray<DbxSharingInviteeMembershipInfo *> *invitees = [DbxArraySerializer deserialize:valueDict[@"invitees"] withBlock:^id(id obj) { return [DbxSharingInviteeMembershipInfoSerializer deserialize:obj]; }];
    NSString *cursor = valueDict[@"cursor"] != nil ? [DbxStringSerializer deserialize:valueDict[@"cursor"]] : nil;

    return [[DbxSharingSharedFileMembers alloc] initWithUsers:users groups:groups invitees:invitees cursor:cursor];
}

@end
