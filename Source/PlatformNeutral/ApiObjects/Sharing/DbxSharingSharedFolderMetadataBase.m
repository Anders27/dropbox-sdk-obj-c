///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingAccessLevel.h"
#import "DbxSharingFolderPolicy.h"
#import "DbxSharingSharedFolderMetadataBase.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersTeam.h"

@implementation DbxSharingSharedFolderMetadataBase 

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType isTeamFolder:(NSNumber *)isTeamFolder policy:(DbxSharingFolderPolicy *)policy ownerTeam:(DbxUsersTeam *)ownerTeam parentSharedFolderId:(NSString *)parentSharedFolderId {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"]](parentSharedFolderId);

    self = [super init];
    if (self != nil) {
        _accessType = accessType;
        _isTeamFolder = isTeamFolder;
        _policy = policy;
        _ownerTeam = ownerTeam;
        _parentSharedFolderId = parentSharedFolderId;
    }
    return self;
}

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType isTeamFolder:(NSNumber *)isTeamFolder policy:(DbxSharingFolderPolicy *)policy {
    return [self initWithAccessType:accessType isTeamFolder:isTeamFolder policy:policy ownerTeam:nil parentSharedFolderId:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingSharedFolderMetadataBaseSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingSharedFolderMetadataBaseSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingSharedFolderMetadataBaseSerializer serialize:self] description];
}

@end


@implementation DbxSharingSharedFolderMetadataBaseSerializer 

+ (NSDictionary *)serialize:(DbxSharingSharedFolderMetadataBase *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"access_type"] = [DbxSharingAccessLevelSerializer serialize:valueObj.accessType];
    jsonDict[@"is_team_folder"] = [DbxBoolSerializer serialize:valueObj.isTeamFolder];
    jsonDict[@"policy"] = [DbxSharingFolderPolicySerializer serialize:valueObj.policy];
    if (valueObj.ownerTeam != nil) {
        jsonDict[@"owner_team"] = [DbxUsersTeamSerializer serialize:valueObj.ownerTeam];
    }
    if (valueObj.parentSharedFolderId != nil) {
        jsonDict[@"parent_shared_folder_id"] = [DbxStringSerializer serialize:valueObj.parentSharedFolderId];
    }

    return jsonDict;
}

+ (DbxSharingSharedFolderMetadataBase *)deserialize:(NSDictionary *)valueDict {
    DbxSharingAccessLevel *accessType = [DbxSharingAccessLevelSerializer deserialize:valueDict];
    NSNumber *isTeamFolder = [DbxBoolSerializer deserialize:valueDict];
    DbxSharingFolderPolicy *policy = [DbxSharingFolderPolicySerializer deserialize:valueDict];
    DbxUsersTeam *ownerTeam = valueDict != nil ? [DbxUsersTeamSerializer deserialize:valueDict] : nil;
    NSString *parentSharedFolderId = valueDict != nil ? [DbxStringSerializer deserialize:valueDict] : nil;

    return [[DbxSharingSharedFolderMetadataBase alloc] initWithAccessType:accessType isTeamFolder:isTeamFolder policy:policy ownerTeam:ownerTeam parentSharedFolderId:parentSharedFolderId];
}

@end
