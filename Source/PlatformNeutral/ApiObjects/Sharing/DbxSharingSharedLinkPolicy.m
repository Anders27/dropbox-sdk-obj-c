///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingSharedLinkPolicy.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingSharedLinkPolicy 

- (instancetype)initWithAnyone {
    self = [super init];
    if (self != nil) {
        _tag = (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyAnyone;
    }
    return self;
}

- (instancetype)initWithMembers {
    self = [super init];
    if (self != nil) {
        _tag = (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyMembers;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyOther;
    }
    return self;
}

- (BOOL)isAnyone {
    return _tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyAnyone;
}

- (BOOL)isMembers {
    return _tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyMembers;
}

- (BOOL)isOther {
    return _tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyOther;
}

- (NSString *)getTagName {
    if (_tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyAnyone) {
        return @"(SharingSharedLinkPolicyTag)SharingSharedLinkPolicyAnyone";
    }
    if (_tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyMembers) {
        return @"(SharingSharedLinkPolicyTag)SharingSharedLinkPolicyMembers";
    }
    if (_tag == (SharingSharedLinkPolicyTag)SharingSharedLinkPolicyOther) {
        return @"(SharingSharedLinkPolicyTag)SharingSharedLinkPolicyOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingSharedLinkPolicySerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingSharedLinkPolicySerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingSharedLinkPolicySerializer serialize:self] description];
}

@end


@implementation DbxSharingSharedLinkPolicySerializer 

+ (NSDictionary *)serialize:(DbxSharingSharedLinkPolicy *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isAnyone]) {
        jsonDict[@".tag"] = @"anyone";
    }
    else if ([valueObj isMembers]) {
        jsonDict[@".tag"] = @"members";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxSharingSharedLinkPolicy *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"anyone"]) {
        return [[DbxSharingSharedLinkPolicy alloc] initWithAnyone];
    }
    if ([tag isEqualToString:@"members"]) {
        return [[DbxSharingSharedLinkPolicy alloc] initWithMembers];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxSharingSharedLinkPolicy alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
