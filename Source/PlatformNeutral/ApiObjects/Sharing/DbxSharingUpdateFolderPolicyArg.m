///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingAclUpdatePolicy.h"
#import "DbxSharingMemberPolicy.h"
#import "DbxSharingSharedLinkPolicy.h"
#import "DbxSharingUpdateFolderPolicyArg.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingUpdateFolderPolicyArg 

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId memberPolicy:(DbxSharingMemberPolicy *)memberPolicy aclUpdatePolicy:(DbxSharingAclUpdatePolicy *)aclUpdatePolicy sharedLinkPolicy:(DbxSharingSharedLinkPolicy *)sharedLinkPolicy {
    [DbxStoneValidators stringValidator:nil maxLength:nil pattern:@"[-_0-9a-zA-Z:]+"](sharedFolderId);

    self = [super init];
    if (self != nil) {
        _sharedFolderId = sharedFolderId;
        _memberPolicy = memberPolicy;
        _aclUpdatePolicy = aclUpdatePolicy;
        _sharedLinkPolicy = sharedLinkPolicy;
    }
    return self;
}

- (instancetype)initWithSharedFolderId:(NSString *)sharedFolderId {
    return [self initWithSharedFolderId:sharedFolderId memberPolicy:nil aclUpdatePolicy:nil sharedLinkPolicy:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingUpdateFolderPolicyArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingUpdateFolderPolicyArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingUpdateFolderPolicyArgSerializer serialize:self] description];
}

@end


@implementation DbxSharingUpdateFolderPolicyArgSerializer 

+ (NSDictionary *)serialize:(DbxSharingUpdateFolderPolicyArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"shared_folder_id"] = [DbxStringSerializer serialize:valueObj.sharedFolderId];
    if (valueObj.memberPolicy != nil) {
        jsonDict[@"member_policy"] = [DbxSharingMemberPolicySerializer serialize:valueObj.memberPolicy];
    }
    if (valueObj.aclUpdatePolicy != nil) {
        jsonDict[@"acl_update_policy"] = [DbxSharingAclUpdatePolicySerializer serialize:valueObj.aclUpdatePolicy];
    }
    if (valueObj.sharedLinkPolicy != nil) {
        jsonDict[@"shared_link_policy"] = [DbxSharingSharedLinkPolicySerializer serialize:valueObj.sharedLinkPolicy];
    }

    return jsonDict;
}

+ (DbxSharingUpdateFolderPolicyArg *)deserialize:(NSDictionary *)valueDict {
    NSString *sharedFolderId = [DbxStringSerializer deserialize:valueDict[@"shared_folder_id"]];
    DbxSharingMemberPolicy *memberPolicy = valueDict[@"member_policy"] != nil ? [DbxSharingMemberPolicySerializer deserialize:valueDict[@"member_policy"]] : nil;
    DbxSharingAclUpdatePolicy *aclUpdatePolicy = valueDict[@"acl_update_policy"] != nil ? [DbxSharingAclUpdatePolicySerializer deserialize:valueDict[@"acl_update_policy"]] : nil;
    DbxSharingSharedLinkPolicy *sharedLinkPolicy = valueDict[@"shared_link_policy"] != nil ? [DbxSharingSharedLinkPolicySerializer deserialize:valueDict[@"shared_link_policy"]] : nil;

    return [[DbxSharingUpdateFolderPolicyArg alloc] initWithSharedFolderId:sharedFolderId memberPolicy:memberPolicy aclUpdatePolicy:aclUpdatePolicy sharedLinkPolicy:sharedLinkPolicy];
}

@end
