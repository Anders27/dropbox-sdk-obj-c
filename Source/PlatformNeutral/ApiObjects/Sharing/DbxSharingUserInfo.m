///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingUserInfo.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingUserInfo 

- (instancetype)initWithAccountId:(NSString *)accountId sameTeam:(NSNumber *)sameTeam teamMemberId:(NSString *)teamMemberId {
    [DbxStoneValidators stringValidator:[NSNumber numberWithInt:40] maxLength:[NSNumber numberWithInt:40] pattern:nil](accountId);

    self = [super init];
    if (self != nil) {
        _accountId = accountId;
        _sameTeam = sameTeam;
        _teamMemberId = teamMemberId;
    }
    return self;
}

- (instancetype)initWithAccountId:(NSString *)accountId sameTeam:(NSNumber *)sameTeam {
    return [self initWithAccountId:accountId sameTeam:sameTeam teamMemberId:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingUserInfoSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingUserInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingUserInfoSerializer serialize:self] description];
}

@end


@implementation DbxSharingUserInfoSerializer 

+ (NSDictionary *)serialize:(DbxSharingUserInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_id"] = [DbxStringSerializer serialize:valueObj.accountId];
    jsonDict[@"same_team"] = [DbxBoolSerializer serialize:valueObj.sameTeam];
    if (valueObj.teamMemberId != nil) {
        jsonDict[@"team_member_id"] = [DbxStringSerializer serialize:valueObj.teamMemberId];
    }

    return jsonDict;
}

+ (DbxSharingUserInfo *)deserialize:(NSDictionary *)valueDict {
    NSString *accountId = [DbxStringSerializer deserialize:valueDict];
    NSNumber *sameTeam = [DbxBoolSerializer deserialize:valueDict];
    NSString *teamMemberId = valueDict != nil ? [DbxStringSerializer deserialize:valueDict] : nil;

    return [[DbxSharingUserInfo alloc] initWithAccountId:accountId sameTeam:sameTeam teamMemberId:teamMemberId];
}

@end
