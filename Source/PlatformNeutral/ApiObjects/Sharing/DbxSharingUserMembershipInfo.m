///
/// Auto-generated by Stone, do not modify.
///

#import "DbxSharingAccessLevel.h"
#import "DbxSharingMemberPermission.h"
#import "DbxSharingMembershipInfo.h"
#import "DbxSharingUserInfo.h"
#import "DbxSharingUserMembershipInfo.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"

@implementation DbxSharingUserMembershipInfo 

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType user:(DbxSharingUserInfo *)user permissions:(NSArray<DbxSharingMemberPermission *> *)permissions initials:(NSString *)initials isInherited:(NSNumber *)isInherited {
    [DbxStoneValidators nullableValidator:[DbxStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](permissions);

    self = [super initWithAccessType:accessType permissions:permissions initials:initials isInherited:isInherited];
    if (self != nil) {
        _user = user;
    }
    return self;
}

- (instancetype)initWithAccessType:(DbxSharingAccessLevel *)accessType user:(DbxSharingUserInfo *)user {
    return [self initWithAccessType:accessType user:user permissions:nil initials:nil isInherited:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxSharingUserMembershipInfoSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxSharingUserMembershipInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxSharingUserMembershipInfoSerializer serialize:self] description];
}

@end


@implementation DbxSharingUserMembershipInfoSerializer 

+ (NSDictionary *)serialize:(DbxSharingUserMembershipInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"access_type"] = [DbxSharingAccessLevelSerializer serialize:valueObj.accessType];
    jsonDict[@"user"] = [DbxSharingUserInfoSerializer serialize:valueObj.user];
    if (valueObj.permissions != nil) {
        jsonDict[@"permissions"] = [DbxArraySerializer serialize:valueObj.permissions withBlock:^id(id obj) { return [DbxSharingMemberPermissionSerializer serialize:obj]; }];
    }
    if (valueObj.initials != nil) {
        jsonDict[@"initials"] = [DbxStringSerializer serialize:valueObj.initials];
    }
    jsonDict[@"is_inherited"] = [DbxBoolSerializer serialize:valueObj.isInherited];

    return jsonDict;
}

+ (DbxSharingUserMembershipInfo *)deserialize:(NSDictionary *)valueDict {
    DbxSharingAccessLevel *accessType = [DbxSharingAccessLevelSerializer deserialize:valueDict];
    DbxSharingUserInfo *user = [DbxSharingUserInfoSerializer deserialize:valueDict];
    NSArray<DbxSharingMemberPermission *> *permissions = valueDict != nil ? [DbxArraySerializer deserialize:valueDict withBlock:^id(id obj) { return [DbxSharingMemberPermissionSerializer deserialize:obj]; }] : nil;
    NSString *initials = valueDict != nil ? [DbxStringSerializer deserialize:valueDict] : nil;
    NSNumber *isInherited = [DbxBoolSerializer deserialize:valueDict];

    return [[DbxSharingUserMembershipInfo alloc] initWithAccessType:accessType user:user permissions:permissions initials:initials isInherited:isInherited];
}

@end
