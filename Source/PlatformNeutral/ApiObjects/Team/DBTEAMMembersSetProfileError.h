///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBSerializableProtocol.h"

@class DBTEAMMembersSetProfileError;

#pragma mark - API Object

/// 
/// The MembersSetProfileError union.
/// 
/// This class implements the DBSerializable protocol (serialize and deserialize
/// instance methods), which is required for all Obj-C SDK API route objects.
/// 
@interface DBTEAMMembersSetProfileError : NSObject <DBSerializable> 

#pragma mark - Instance fields

/// The DBTEAMMembersSetProfileErrorTag enum type represents the possible tag
/// states with which the DBTEAMMembersSetProfileError union can exist.
typedef NS_ENUM(NSInteger, DBTEAMMembersSetProfileErrorTag) {
    /// No matching user found. The provided team_member_id, email, or
    /// external_id does not exist on this team.
    DBTEAMMembersSetProfileErrorUserNotFound,

    /// The user is not a member of the team.
    DBTEAMMembersSetProfileErrorUserNotInTeam,

    /// It is unsafe to use both external_id and new_external_id
    DBTEAMMembersSetProfileErrorExternalIdAndNewExternalIdUnsafe,

    /// None of new_email, new_given_name, new_surname, or new_external_id are
    /// specified
    DBTEAMMembersSetProfileErrorNoNewDataSpecified,

    /// Email is already reserved for another user.
    DBTEAMMembersSetProfileErrorEmailReservedForOtherUser,

    /// The external ID is already in use by another team member.
    DBTEAMMembersSetProfileErrorExternalIdUsedByOtherUser,

    /// Setting profile disallowed
    DBTEAMMembersSetProfileErrorSetProfileDisallowed,

    /// Parameter new_email cannot be empty.
    DBTEAMMembersSetProfileErrorParamCannotBeEmpty,

    /// (no description).
    DBTEAMMembersSetProfileErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBTEAMMembersSetProfileErrorTag tag;

#pragma mark - Constructors

/// 
/// Initializes union class with tag state of UserNotFound.
/// 
/// About the UserNotFound tag state: No matching user found. The provided
/// team_member_id, email, or external_id does not exist on this team.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithUserNotFound;

/// 
/// Initializes union class with tag state of UserNotInTeam.
/// 
/// About the UserNotInTeam tag state: The user is not a member of the team.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithUserNotInTeam;

/// 
/// Initializes union class with tag state of ExternalIdAndNewExternalIdUnsafe.
/// 
/// About the ExternalIdAndNewExternalIdUnsafe tag state: It is unsafe to use
/// both external_id and new_external_id
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithExternalIdAndNewExternalIdUnsafe;

/// 
/// Initializes union class with tag state of NoNewDataSpecified.
/// 
/// About the NoNewDataSpecified tag state: None of new_email, new_given_name,
/// new_surname, or new_external_id are specified
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithNoNewDataSpecified;

/// 
/// Initializes union class with tag state of EmailReservedForOtherUser.
/// 
/// About the EmailReservedForOtherUser tag state: Email is already reserved for
/// another user.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithEmailReservedForOtherUser;

/// 
/// Initializes union class with tag state of ExternalIdUsedByOtherUser.
/// 
/// About the ExternalIdUsedByOtherUser tag state: The external ID is already in
/// use by another team member.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithExternalIdUsedByOtherUser;

/// 
/// Initializes union class with tag state of SetProfileDisallowed.
/// 
/// About the SetProfileDisallowed tag state: Setting profile disallowed
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithSetProfileDisallowed;

/// 
/// Initializes union class with tag state of ParamCannotBeEmpty.
/// 
/// About the ParamCannotBeEmpty tag state: Parameter new_email cannot be empty.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithParamCannotBeEmpty;

/// 
/// Initializes union class with tag state of Other.
/// 
/// @return An initialized DBTEAMMembersSetProfileError instance.
/// 
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

/// 
/// Retrieves whether the union's current tag state has value UserNotFound.
/// 
/// @return Whether the union's current tag state has value UserNotFound.
/// 
- (BOOL)isUserNotFound;

/// 
/// Retrieves whether the union's current tag state has value UserNotInTeam.
/// 
/// @return Whether the union's current tag state has value UserNotInTeam.
/// 
- (BOOL)isUserNotInTeam;

/// 
/// Retrieves whether the union's current tag state has value
/// ExternalIdAndNewExternalIdUnsafe.
/// 
/// @return Whether the union's current tag state has value
/// ExternalIdAndNewExternalIdUnsafe.
/// 
- (BOOL)isExternalIdAndNewExternalIdUnsafe;

/// 
/// Retrieves whether the union's current tag state has value
/// NoNewDataSpecified.
/// 
/// @return Whether the union's current tag state has value NoNewDataSpecified.
/// 
- (BOOL)isNoNewDataSpecified;

/// 
/// Retrieves whether the union's current tag state has value
/// EmailReservedForOtherUser.
/// 
/// @return Whether the union's current tag state has value
/// EmailReservedForOtherUser.
/// 
- (BOOL)isEmailReservedForOtherUser;

/// 
/// Retrieves whether the union's current tag state has value
/// ExternalIdUsedByOtherUser.
/// 
/// @return Whether the union's current tag state has value
/// ExternalIdUsedByOtherUser.
/// 
- (BOOL)isExternalIdUsedByOtherUser;

/// 
/// Retrieves whether the union's current tag state has value
/// SetProfileDisallowed.
/// 
/// @return Whether the union's current tag state has value
/// SetProfileDisallowed.
/// 
- (BOOL)isSetProfileDisallowed;

/// 
/// Retrieves whether the union's current tag state has value
/// ParamCannotBeEmpty.
/// 
/// @return Whether the union's current tag state has value ParamCannotBeEmpty.
/// 
- (BOOL)isParamCannotBeEmpty;

/// 
/// Retrieves whether the union's current tag state has value Other.
/// 
/// @return Whether the union's current tag state has value Other.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// @return A human-readable string representing the union's current tag state.
/// 
- (NSString * _Nonnull)tagName;

@end


#pragma mark - Serializer Object

/// 
/// The serialization class for the DBTEAMMembersSetProfileError union.
/// 
@interface DBTEAMMembersSetProfileErrorSerializer : NSObject 

/// 
/// Serializes DBTEAMMembersSetProfileError instances.
/// 
/// @param instance An instance of the DBTEAMMembersSetProfileError API object.
/// 
/// @return A json-compatible dictionary representation of the
/// DBTEAMMembersSetProfileError API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBTEAMMembersSetProfileError * _Nonnull)instance;

/// 
/// Deserializes DBTEAMMembersSetProfileError instances.
/// 
/// @param dict A json-compatible dictionary representation of the
/// DBTEAMMembersSetProfileError API object.
/// 
/// @return An instantiation of the DBTEAMMembersSetProfileError object.
/// 
+ (DBTEAMMembersSetProfileError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
