///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXTEAMAdminTier;

/// 
/// The AdminTier union.
/// 
/// Describes which team-related admin permissions a user has.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXTEAMAdminTier : NSObject <DBXSerializable> 

/// The `DBXTEAMAdminTierTag` enum type represents the possible tag states with
/// which the `DBXTEAMAdminTier` union can exist.
typedef NS_ENUM(NSInteger, DBXTEAMAdminTierTag) {
    /// User is an administrator of the team - has all permissions.
    DBXTEAMAdminTierTeamAdmin,

    /// User can do most user provisioning, de-provisioning and management.
    DBXTEAMAdminTierUserManagementAdmin,

    /// User can do a limited set of common support tasks for existing users.
    DBXTEAMAdminTierSupportAdmin,

    /// User is not an admin of the team.
    DBXTEAMAdminTierMemberOnly,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXTEAMAdminTierTag tag;

/// 
/// Initializes union class with tag state of `TeamAdmin`.
/// 
/// About the `TeamAdmin` tag state: User is an administrator of the team - has
/// all permissions.
/// 
/// - returns: An initialized `DBXTEAMAdminTier` instance.
/// 
- (nonnull instancetype)initWithTeamAdmin;

/// 
/// Initializes union class with tag state of `UserManagementAdmin`.
/// 
/// About the `UserManagementAdmin` tag state: User can do most user
/// provisioning, de-provisioning and management.
/// 
/// - returns: An initialized `DBXTEAMAdminTier` instance.
/// 
- (nonnull instancetype)initWithUserManagementAdmin;

/// 
/// Initializes union class with tag state of `SupportAdmin`.
/// 
/// About the `SupportAdmin` tag state: User can do a limited set of common
/// support tasks for existing users.
/// 
/// - returns: An initialized `DBXTEAMAdminTier` instance.
/// 
- (nonnull instancetype)initWithSupportAdmin;

/// 
/// Initializes union class with tag state of `MemberOnly`.
/// 
/// About the `MemberOnly` tag state: User is not an admin of the team.
/// 
/// - returns: An initialized `DBXTEAMAdminTier` instance.
/// 
- (nonnull instancetype)initWithMemberOnly;

/// 
/// Retrieves whether the union's current tag state has value `TeamAdmin`.
/// 
/// - returns: Whether the union's current tag state has value `TeamAdmin`.
/// 
- (BOOL)isTeamAdmin;

/// 
/// Retrieves whether the union's current tag state has value
/// `UserManagementAdmin`.
/// 
/// - returns: Whether the union's current tag state has value
/// `UserManagementAdmin`.
/// 
- (BOOL)isUserManagementAdmin;

/// 
/// Retrieves whether the union's current tag state has value `SupportAdmin`.
/// 
/// - returns: Whether the union's current tag state has value `SupportAdmin`.
/// 
- (BOOL)isSupportAdmin;

/// 
/// Retrieves whether the union's current tag state has value `MemberOnly`.
/// 
/// - returns: Whether the union's current tag state has value `MemberOnly`.
/// 
- (BOOL)isMemberOnly;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXTEAMAdminTier` union.
/// 
@interface DBXTEAMAdminTierSerializer : NSObject 

/// 
/// Serializes `DBXTEAMAdminTier` instances.
/// 
///  - parameter instance: An instance of the `DBXTEAMAdminTier` API object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXTEAMAdminTier` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXTEAMAdminTier * _Nonnull)instance;

/// 
/// Deserializes `DBXTEAMAdminTier` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXTEAMAdminTier` API object.
/// 
///  - returns: An instantiation of the `DBXTEAMAdminTier` object.
/// 
+ (DBXTEAMAdminTier * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
