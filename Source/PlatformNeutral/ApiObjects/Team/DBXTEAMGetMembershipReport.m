///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMBaseDfbReport.h"
#import "DBXTEAMGetMembershipReport.h"

@implementation DBXTEAMGetMembershipReport 

- (instancetype)initWithStartDate:(NSString *)startDate teamSize:(NSArray<NSNumber *> *)teamSize pendingInvites:(NSArray<NSNumber *> *)pendingInvites membersJoined:(NSArray<NSNumber *> *)membersJoined suspendedMembers:(NSArray<NSNumber *> *)suspendedMembers licenses:(NSArray<NSNumber *> *)licenses {
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](teamSize);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](pendingInvites);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](membersJoined);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](suspendedMembers);
    [DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil](licenses);

    self = [super initWithStartDate:startDate];
    if (self) {
        _teamSize = teamSize;
        _pendingInvites = pendingInvites;
        _membersJoined = membersJoined;
        _suspendedMembers = suspendedMembers;
        _licenses = licenses;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMGetMembershipReportSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMGetMembershipReportSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMGetMembershipReportSerializer serialize:self] description];
}

@end


@implementation DBXTEAMGetMembershipReportSerializer 

+ (NSDictionary *)serialize:(DBXTEAMGetMembershipReport *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"start_date"] = valueObj.startDate;
    jsonDict[@"team_size"] = [DBXArraySerializer serialize:valueObj.teamSize withBlock:^id(id elem) { return elem; }];
    jsonDict[@"pending_invites"] = [DBXArraySerializer serialize:valueObj.pendingInvites withBlock:^id(id elem) { return elem; }];
    jsonDict[@"members_joined"] = [DBXArraySerializer serialize:valueObj.membersJoined withBlock:^id(id elem) { return elem; }];
    jsonDict[@"suspended_members"] = [DBXArraySerializer serialize:valueObj.suspendedMembers withBlock:^id(id elem) { return elem; }];
    jsonDict[@"licenses"] = [DBXArraySerializer serialize:valueObj.licenses withBlock:^id(id elem) { return elem; }];

    return jsonDict;
}

+ (DBXTEAMGetMembershipReport *)deserialize:(NSDictionary *)valueDict {
    NSString *startDate = valueDict[@"start_date"];
    NSArray<NSNumber *> *teamSize = [DBXArraySerializer deserialize:valueDict[@"team_size"] withBlock:^id(id elem) { return elem; }];
    NSArray<NSNumber *> *pendingInvites = [DBXArraySerializer deserialize:valueDict[@"pending_invites"] withBlock:^id(id elem) { return elem; }];
    NSArray<NSNumber *> *membersJoined = [DBXArraySerializer deserialize:valueDict[@"members_joined"] withBlock:^id(id elem) { return elem; }];
    NSArray<NSNumber *> *suspendedMembers = [DBXArraySerializer deserialize:valueDict[@"suspended_members"] withBlock:^id(id elem) { return elem; }];
    NSArray<NSNumber *> *licenses = [DBXArraySerializer deserialize:valueDict[@"licenses"] withBlock:^id(id elem) { return elem; }];

    return [[DBXTEAMGetMembershipReport alloc] initWithStartDate:startDate teamSize:teamSize pendingInvites:pendingInvites membersJoined:membersJoined suspendedMembers:suspendedMembers licenses:licenses];
}

@end
