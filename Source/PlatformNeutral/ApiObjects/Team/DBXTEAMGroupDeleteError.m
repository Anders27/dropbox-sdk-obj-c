///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMGroupDeleteError.h"
#import "DBXTEAMGroupSelectorError.h"

@implementation DBXTEAMGroupDeleteError 

- (instancetype)initWithGroupNotFound {
    self = [super init];
    if (self) {
        _tag = DBXTEAMGroupDeleteErrorGroupNotFound;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self) {
        _tag = DBXTEAMGroupDeleteErrorOther;
    }
    return self;
}

- (instancetype)initWithGroupAlreadyDeleted {
    self = [super init];
    if (self) {
        _tag = DBXTEAMGroupDeleteErrorGroupAlreadyDeleted;
    }
    return self;
}

- (BOOL)isGroupNotFound {
    return _tag == DBXTEAMGroupDeleteErrorGroupNotFound;
}

- (BOOL)isOther {
    return _tag == DBXTEAMGroupDeleteErrorOther;
}

- (BOOL)isGroupAlreadyDeleted {
    return _tag == DBXTEAMGroupDeleteErrorGroupAlreadyDeleted;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXTEAMGroupDeleteErrorGroupNotFound:
           return @"DBXTEAMGroupDeleteErrorGroupNotFound";
        case DBXTEAMGroupDeleteErrorOther:
           return @"DBXTEAMGroupDeleteErrorOther";
        case DBXTEAMGroupDeleteErrorGroupAlreadyDeleted:
           return @"DBXTEAMGroupDeleteErrorGroupAlreadyDeleted";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMGroupDeleteErrorSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMGroupDeleteErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMGroupDeleteErrorSerializer serialize:self] description];
}

@end


@implementation DBXTEAMGroupDeleteErrorSerializer 

+ (NSDictionary *)serialize:(DBXTEAMGroupDeleteError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isGroupNotFound]) {
        jsonDict[@".tag"] = @"group_not_found";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else if ([valueObj isGroupAlreadyDeleted]) {
        jsonDict[@".tag"] = @"group_already_deleted";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXTEAMGroupDeleteError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"group_not_found"]) {
        return [[DBXTEAMGroupDeleteError alloc] initWithGroupNotFound];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXTEAMGroupDeleteError alloc] initWithOther];
    }
    else if ([tag isEqualToString:@"group_already_deleted"]) {
        return [[DBXTEAMGroupDeleteError alloc] initWithGroupAlreadyDeleted];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
