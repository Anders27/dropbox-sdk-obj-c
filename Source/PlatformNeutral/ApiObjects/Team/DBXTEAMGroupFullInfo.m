///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMCOMMONGroupManagementType.h"
#import "DBXTEAMCOMMONGroupSummary.h"
#import "DBXTEAMGroupFullInfo.h"
#import "DBXTEAMGroupMemberInfo.h"

@implementation DBXTEAMGroupFullInfo 

- (instancetype)initWithGroupName:(NSString *)groupName groupId:(NSString *)groupId groupManagementType:(DBXTEAMCOMMONGroupManagementType *)groupManagementType created:(NSNumber *)created groupExternalId:(NSString *)groupExternalId memberCount:(NSNumber *)memberCount members:(NSArray<DBXTEAMGroupMemberInfo *> *)members {
    [DBXStoneValidators nullableValidator:[DBXStoneValidators arrayValidator:nil maxItems:nil itemValidator:nil]](members);

    self = [super initWithGroupName:groupName groupId:groupId groupManagementType:groupManagementType groupExternalId:groupExternalId memberCount:memberCount];
    if (self) {
        _members = members;
        _created = created;
    }
    return self;
}

- (instancetype)initWithGroupName:(NSString *)groupName groupId:(NSString *)groupId groupManagementType:(DBXTEAMCOMMONGroupManagementType *)groupManagementType created:(NSNumber *)created {
    return [self initWithGroupName:groupName groupId:groupId groupManagementType:groupManagementType created:created groupExternalId:nil memberCount:nil members:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMGroupFullInfoSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMGroupFullInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMGroupFullInfoSerializer serialize:self] description];
}

@end


@implementation DBXTEAMGroupFullInfoSerializer 

+ (NSDictionary *)serialize:(DBXTEAMGroupFullInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"group_name"] = valueObj.groupName;
    jsonDict[@"group_id"] = valueObj.groupId;
    jsonDict[@"group_management_type"] = [DBXTEAMCOMMONGroupManagementTypeSerializer serialize:valueObj.groupManagementType];
    jsonDict[@"created"] = valueObj.created;
    if (valueObj.groupExternalId) {
        jsonDict[@"group_external_id"] = valueObj.groupExternalId;
    }
    if (valueObj.memberCount) {
        jsonDict[@"member_count"] = valueObj.memberCount;
    }
    if (valueObj.members) {
        jsonDict[@"members"] = [DBXArraySerializer serialize:valueObj.members withBlock:^id(id elem) { return [DBXTEAMGroupMemberInfoSerializer serialize:elem]; }];
    }

    return jsonDict;
}

+ (DBXTEAMGroupFullInfo *)deserialize:(NSDictionary *)valueDict {
    NSString *groupName = valueDict[@"group_name"];
    NSString *groupId = valueDict[@"group_id"];
    DBXTEAMCOMMONGroupManagementType *groupManagementType = [DBXTEAMCOMMONGroupManagementTypeSerializer deserialize:valueDict[@"group_management_type"]];
    NSNumber *created = valueDict[@"created"];
    NSString *groupExternalId = valueDict[@"group_external_id"] ?: nil;
    NSNumber *memberCount = valueDict[@"member_count"] ?: nil;
    NSArray<DBXTEAMGroupMemberInfo *> *members = valueDict[@"members"] ? [DBXArraySerializer deserialize:valueDict[@"members"] withBlock:^id(id elem) { return [DBXTEAMGroupMemberInfoSerializer deserialize:elem]; }] : nil;

    return [[DBXTEAMGroupFullInfo alloc] initWithGroupName:groupName groupId:groupId groupManagementType:groupManagementType created:created groupExternalId:groupExternalId memberCount:memberCount members:members];
}

@end
