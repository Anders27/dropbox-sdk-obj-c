///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMGroupAccessType.h"
#import "DBXTEAMGroupMemberInfo.h"
#import "DBXTEAMMemberProfile.h"

@implementation DBXTEAMGroupMemberInfo 

- (instancetype)initWithProfile:(DBXTEAMMemberProfile *)profile accessType:(DBXTEAMGroupAccessType *)accessType {

    self = [super init];
    if (self) {
        _profile = profile;
        _accessType = accessType;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMGroupMemberInfoSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMGroupMemberInfoSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMGroupMemberInfoSerializer serialize:self] description];
}

@end


@implementation DBXTEAMGroupMemberInfoSerializer 

+ (NSDictionary *)serialize:(DBXTEAMGroupMemberInfo *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"profile"] = [DBXTEAMMemberProfileSerializer serialize:valueObj.profile];
    jsonDict[@"access_type"] = [DBXTEAMGroupAccessTypeSerializer serialize:valueObj.accessType];

    return jsonDict;
}

+ (DBXTEAMGroupMemberInfo *)deserialize:(NSDictionary *)valueDict {
    DBXTEAMMemberProfile *profile = [DBXTEAMMemberProfileSerializer deserialize:valueDict[@"profile"]];
    DBXTEAMGroupAccessType *accessType = [DBXTEAMGroupAccessTypeSerializer deserialize:valueDict[@"access_type"]];

    return [[DBXTEAMGroupMemberInfo alloc] initWithProfile:profile accessType:accessType];
}

@end
