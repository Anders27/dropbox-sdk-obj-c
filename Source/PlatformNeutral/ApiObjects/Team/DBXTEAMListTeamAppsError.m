///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMListTeamAppsError.h"

@implementation DBXTEAMListTeamAppsError 

- (instancetype)initWithReset {
    self = [super init];
    if (self) {
        _tag = DBXTEAMListTeamAppsErrorReset;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self) {
        _tag = DBXTEAMListTeamAppsErrorOther;
    }
    return self;
}

- (BOOL)isReset {
    return _tag == DBXTEAMListTeamAppsErrorReset;
}

- (BOOL)isOther {
    return _tag == DBXTEAMListTeamAppsErrorOther;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXTEAMListTeamAppsErrorReset:
           return @"DBXTEAMListTeamAppsErrorReset";
        case DBXTEAMListTeamAppsErrorOther:
           return @"DBXTEAMListTeamAppsErrorOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMListTeamAppsErrorSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMListTeamAppsErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMListTeamAppsErrorSerializer serialize:self] description];
}

@end


@implementation DBXTEAMListTeamAppsErrorSerializer 

+ (NSDictionary *)serialize:(DBXTEAMListTeamAppsError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isReset]) {
        jsonDict[@".tag"] = @"reset";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXTEAMListTeamAppsError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"reset"]) {
        return [[DBXTEAMListTeamAppsError alloc] initWithReset];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXTEAMListTeamAppsError alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
