///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMGroupAccessType.h"
#import "DBXTEAMMemberAccess.h"
#import "DBXTEAMUserSelectorArg.h"

@implementation DBXTEAMMemberAccess 

- (instancetype)initWithUser:(DBXTEAMUserSelectorArg *)user accessType:(DBXTEAMGroupAccessType *)accessType {

    self = [super init];
    if (self) {
        _user = user;
        _accessType = accessType;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXTEAMMemberAccessSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMMemberAccessSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMMemberAccessSerializer serialize:self] description];
}

@end


@implementation DBXTEAMMemberAccessSerializer 

+ (NSDictionary *)serialize:(DBXTEAMMemberAccess *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"user"] = [DBXTEAMUserSelectorArgSerializer serialize:valueObj.user];
    jsonDict[@"access_type"] = [DBXTEAMGroupAccessTypeSerializer serialize:valueObj.accessType];

    return jsonDict;
}

+ (DBXTEAMMemberAccess *)deserialize:(NSDictionary *)valueDict {
    DBXTEAMUserSelectorArg *user = [DBXTEAMUserSelectorArgSerializer deserialize:valueDict[@"user"]];
    DBXTEAMGroupAccessType *accessType = [DBXTEAMGroupAccessTypeSerializer deserialize:valueDict[@"access_type"]];

    return [[DBXTEAMMemberAccess alloc] initWithUser:user accessType:accessType];
}

@end
