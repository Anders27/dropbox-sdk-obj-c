///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXTEAMMemberAddResult;
@class DBXTEAMTeamMemberInfo;

/// 
/// The `DBXTEAMMemberAddResult` union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
/// Describes the result of attempting to add a single user to the team.
/// 'success' is the only value indicating that a user was indeed added to the
/// team - the other values explain the type of failure that occurred, and
/// include the email of the user for which the operation has failed.
/// 
@interface DBXTEAMMemberAddResult : NSObject <DBXSerializable> 

/// The `DBXTEAMMemberAddResultTag` enum type represents the possible tag states
/// that the `DBXTEAMMemberAddResult` union can exist in.
typedef NS_ENUM(NSInteger, DBXTEAMMemberAddResultTag) {
    /// Describes a user that was successfully added to the team.
    DBXTEAMMemberAddResultSuccess,

    /// Team is already full. The organization has no available licenses.
    DBXTEAMMemberAddResultTeamLicenseLimit,

    /// Team is already full. The free team member limit has been reached.
    DBXTEAMMemberAddResultFreeTeamMemberLimitReached,

    /// User is already on this team. The provided email address is associated
    /// with a user who is already a member of or invited to the team.
    DBXTEAMMemberAddResultUserAlreadyOnTeam,

    /// User is already on another team. The provided email address is
    /// associated with a user that is already a member or invited to another
    /// team.
    DBXTEAMMemberAddResultUserOnAnotherTeam,

    /// User is already paired.
    DBXTEAMMemberAddResultUserAlreadyPaired,

    /// User migration has failed.
    DBXTEAMMemberAddResultUserMigrationFailed,

    /// A user with the given external member ID already exists on the team.
    DBXTEAMMemberAddResultDuplicateExternalMemberId,

    /// User creation has failed.
    DBXTEAMMemberAddResultUserCreationFailed,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXTEAMMemberAddResultTag tag;

/// Describes a user that was successfully added to the team.
@property (nonatomic, readonly) DBXTEAMTeamMemberInfo * _Nonnull success;

/// Team is already full. The organization has no available licenses.
@property (nonatomic, readonly, copy) NSString * _Nonnull teamLicenseLimit;

/// Team is already full. The free team member limit has been reached.
@property (nonatomic, readonly, copy) NSString * _Nonnull freeTeamMemberLimitReached;

/// User is already on this team. The provided email address is associated with
/// a user who is already a member of or invited to the team.
@property (nonatomic, readonly, copy) NSString * _Nonnull userAlreadyOnTeam;

/// User is already on another team. The provided email address is associated
/// with a user that is already a member or invited to another team.
@property (nonatomic, readonly, copy) NSString * _Nonnull userOnAnotherTeam;

/// User is already paired.
@property (nonatomic, readonly, copy) NSString * _Nonnull userAlreadyPaired;

/// User migration has failed.
@property (nonatomic, readonly, copy) NSString * _Nonnull userMigrationFailed;

/// A user with the given external member ID already exists on the team.
@property (nonatomic, readonly, copy) NSString * _Nonnull duplicateExternalMemberId;

/// User creation has failed.
@property (nonatomic, readonly, copy) NSString * _Nonnull userCreationFailed;

/// Initializes union class with tag state of `Success`.
- (nonnull instancetype)initWithSuccess:(DBXTEAMTeamMemberInfo * _Nonnull)success;

/// Initializes union class with tag state of `TeamLicenseLimit`.
- (nonnull instancetype)initWithTeamLicenseLimit:(NSString * _Nonnull)teamLicenseLimit;

/// Initializes union class with tag state of `FreeTeamMemberLimitReached`.
- (nonnull instancetype)initWithFreeTeamMemberLimitReached:(NSString * _Nonnull)freeTeamMemberLimitReached;

/// Initializes union class with tag state of `UserAlreadyOnTeam`.
- (nonnull instancetype)initWithUserAlreadyOnTeam:(NSString * _Nonnull)userAlreadyOnTeam;

/// Initializes union class with tag state of `UserOnAnotherTeam`.
- (nonnull instancetype)initWithUserOnAnotherTeam:(NSString * _Nonnull)userOnAnotherTeam;

/// Initializes union class with tag state of `UserAlreadyPaired`.
- (nonnull instancetype)initWithUserAlreadyPaired:(NSString * _Nonnull)userAlreadyPaired;

/// Initializes union class with tag state of `UserMigrationFailed`.
- (nonnull instancetype)initWithUserMigrationFailed:(NSString * _Nonnull)userMigrationFailed;

/// Initializes union class with tag state of `DuplicateExternalMemberId`.
- (nonnull instancetype)initWithDuplicateExternalMemberId:(NSString * _Nonnull)duplicateExternalMemberId;

/// Initializes union class with tag state of `UserCreationFailed`.
- (nonnull instancetype)initWithUserCreationFailed:(NSString * _Nonnull)userCreationFailed;

/// Returns whether the union's current tag state has value `Success`.
- (BOOL)isSuccess;

/// Returns whether the union's current tag state has value `TeamLicenseLimit`.
- (BOOL)isTeamLicenseLimit;

/// Returns whether the union's current tag state has value
/// `FreeTeamMemberLimitReached`.
- (BOOL)isFreeTeamMemberLimitReached;

/// Returns whether the union's current tag state has value `UserAlreadyOnTeam`.
- (BOOL)isUserAlreadyOnTeam;

/// Returns whether the union's current tag state has value `UserOnAnotherTeam`.
- (BOOL)isUserOnAnotherTeam;

/// Returns whether the union's current tag state has value `UserAlreadyPaired`.
- (BOOL)isUserAlreadyPaired;

/// Returns whether the union's current tag state has value
/// `UserMigrationFailed`.
- (BOOL)isUserMigrationFailed;

/// Returns whether the union's current tag state has value
/// `DuplicateExternalMemberId`.
- (BOOL)isDuplicateExternalMemberId;

/// Returns whether the union's current tag state has value
/// `UserCreationFailed`.
- (BOOL)isUserCreationFailed;

/// Returns a human-readable string representing the union's current tag state.
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXTEAMMemberAddResult` union.
/// 
@interface DBXTEAMMemberAddResultSerializer : NSObject 

/// Returns a json-compatible dictionary representation of the
/// `DBXTEAMMemberAddResult` object from an instantiation.
+ (NSDictionary * _Nonnull)serialize:(DBXTEAMMemberAddResult * _Nonnull)obj;

/// Returns an instantiation of the `DBXTEAMMemberAddResult` object from a
/// json-compatible dictionary representation.
+ (DBXTEAMMemberAddResult * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
