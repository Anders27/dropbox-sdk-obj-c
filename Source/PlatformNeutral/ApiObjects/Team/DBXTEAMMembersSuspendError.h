///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXTEAMMembersSuspendError;

/// 
/// The MembersSuspendError union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXTEAMMembersSuspendError : NSObject <DBXSerializable> 

/// The `DBXTEAMMembersSuspendErrorTag` enum type represents the possible tag
/// states with which the `DBXTEAMMembersSuspendError` union can exist.
typedef NS_ENUM(NSInteger, DBXTEAMMembersSuspendErrorTag) {
    /// No matching user found. The provided team_member_id, email, or
    /// external_id does not exist on this team.
    DBXTEAMMembersSuspendErrorUserNotFound,

    /// The user is not a member of the team.
    DBXTEAMMembersSuspendErrorUserNotInTeam,

    /// (no description).
    DBXTEAMMembersSuspendErrorOther,

    /// The user is not active, so it cannot be suspended.
    DBXTEAMMembersSuspendErrorSuspendInactiveUser,

    /// The user is the last admin of the team, so it cannot be suspended.
    DBXTEAMMembersSuspendErrorSuspendLastAdmin,

    /// Team is full. The organization has no available licenses.
    DBXTEAMMembersSuspendErrorTeamLicenseLimit,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXTEAMMembersSuspendErrorTag tag;

/// 
/// Initializes union class with tag state of `UserNotFound`.
/// 
/// About the `UserNotFound` tag state: No matching user found. The provided
/// team_member_id, email, or external_id does not exist on this team.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithUserNotFound;

/// 
/// Initializes union class with tag state of `UserNotInTeam`.
/// 
/// About the `UserNotInTeam` tag state: The user is not a member of the team.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithUserNotInTeam;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Initializes union class with tag state of `SuspendInactiveUser`.
/// 
/// About the `SuspendInactiveUser` tag state: The user is not active, so it
/// cannot be suspended.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithSuspendInactiveUser;

/// 
/// Initializes union class with tag state of `SuspendLastAdmin`.
/// 
/// About the `SuspendLastAdmin` tag state: The user is the last admin of the
/// team, so it cannot be suspended.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithSuspendLastAdmin;

/// 
/// Initializes union class with tag state of `TeamLicenseLimit`.
/// 
/// About the `TeamLicenseLimit` tag state: Team is full. The organization has
/// no available licenses.
/// 
/// - returns: An initialized `DBXTEAMMembersSuspendError` instance.
/// 
- (nonnull instancetype)initWithTeamLicenseLimit;

/// 
/// Retrieves whether the union's current tag state has value `UserNotFound`.
/// 
/// - returns: Whether the union's current tag state has value `UserNotFound`.
/// 
- (BOOL)isUserNotFound;

/// 
/// Retrieves whether the union's current tag state has value `UserNotInTeam`.
/// 
/// - returns: Whether the union's current tag state has value `UserNotInTeam`.
/// 
- (BOOL)isUserNotInTeam;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves whether the union's current tag state has value
/// `SuspendInactiveUser`.
/// 
/// - returns: Whether the union's current tag state has value
/// `SuspendInactiveUser`.
/// 
- (BOOL)isSuspendInactiveUser;

/// 
/// Retrieves whether the union's current tag state has value
/// `SuspendLastAdmin`.
/// 
/// - returns: Whether the union's current tag state has value
/// `SuspendLastAdmin`.
/// 
- (BOOL)isSuspendLastAdmin;

/// 
/// Retrieves whether the union's current tag state has value
/// `TeamLicenseLimit`.
/// 
/// - returns: Whether the union's current tag state has value
/// `TeamLicenseLimit`.
/// 
- (BOOL)isTeamLicenseLimit;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXTEAMMembersSuspendError` union.
/// 
@interface DBXTEAMMembersSuspendErrorSerializer : NSObject 

/// 
/// Serializes `DBXTEAMMembersSuspendError` instances.
/// 
///  - parameter instance: An instance of the `DBXTEAMMembersSuspendError` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXTEAMMembersSuspendError` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXTEAMMembersSuspendError * _Nonnull)instance;

/// 
/// Deserializes `DBXTEAMMembersSuspendError` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXTEAMMembersSuspendError` API object.
/// 
///  - returns: An instantiation of the `DBXTEAMMembersSuspendError` object.
/// 
+ (DBXTEAMMembersSuspendError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
