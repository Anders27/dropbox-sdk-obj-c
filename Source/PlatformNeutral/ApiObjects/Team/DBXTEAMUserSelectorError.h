///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXTEAMUserSelectorError;

/// 
/// The `DBXTEAMUserSelectorError` union.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
/// Error that can be returned whenever a struct derived from UserSelectorArg is
/// used.
/// 
@interface DBXTEAMUserSelectorError : NSObject <DBXSerializable> 

/// The `DBXTEAMUserSelectorErrorTag` enum type represents the possible tag
/// states that the `DBXTEAMUserSelectorError` union can exist in.
typedef NS_ENUM(NSInteger, DBXTEAMUserSelectorErrorTag) {
    /// No matching user found. The provided team_member_id, email, or
    /// external_id does not exist on this team.
    DBXTEAMUserSelectorErrorUserNotFound,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXTEAMUserSelectorErrorTag tag;

/// Initializes union class with tag state of `UserNotFound`.
- (nonnull instancetype)initWithUserNotFound;

/// Returns whether the union's current tag state has value `UserNotFound`.
- (BOOL)isUserNotFound;

/// Returns a human-readable string representing the union's current tag state.
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXTEAMUserSelectorError` union.
/// 
@interface DBXTEAMUserSelectorErrorSerializer : NSObject 

/// Returns a json-compatible dictionary representation of the
/// `DBXTEAMUserSelectorError` object from an instantiation.
+ (NSDictionary * _Nonnull)serialize:(DBXTEAMUserSelectorError * _Nonnull)obj;

/// Returns an instantiation of the `DBXTEAMUserSelectorError` object from a
/// json-compatible dictionary representation.
+ (DBXTEAMUserSelectorError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
