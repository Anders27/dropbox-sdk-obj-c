///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamDesktopClientSession.h"
#import "DbxTeamDesktopPlatform.h"
#import "DbxTeamDeviceSession.h"

@implementation DbxTeamDesktopClientSession 

- (instancetype)initWithSessionId:(NSString *)sessionId hostName:(NSString *)hostName clientType:(DbxTeamDesktopPlatform *)clientType clientVersion:(NSString *)clientVersion platform:(NSString *)platform isDeleteOnUnlinkSupported:(NSNumber *)isDeleteOnUnlinkSupported ipAddress:(NSString *)ipAddress country:(NSString *)country created:(NSDate *)created updated:(NSDate *)updated {

    self = [super initWithSessionId:sessionId ipAddress:ipAddress country:country created:created updated:updated];
    if (self != nil) {
        _hostName = hostName;
        _clientType = clientType;
        _clientVersion = clientVersion;
        _platform = platform;
        _isDeleteOnUnlinkSupported = isDeleteOnUnlinkSupported;
    }
    return self;
}

- (instancetype)initWithSessionId:(NSString *)sessionId hostName:(NSString *)hostName clientType:(DbxTeamDesktopPlatform *)clientType clientVersion:(NSString *)clientVersion platform:(NSString *)platform isDeleteOnUnlinkSupported:(NSNumber *)isDeleteOnUnlinkSupported {
    return [self initWithSessionId:sessionId hostName:hostName clientType:clientType clientVersion:clientVersion platform:platform isDeleteOnUnlinkSupported:isDeleteOnUnlinkSupported ipAddress:nil country:nil created:nil updated:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamDesktopClientSessionSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamDesktopClientSessionSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamDesktopClientSessionSerializer serialize:self] description];
}

@end


@implementation DbxTeamDesktopClientSessionSerializer 

+ (NSDictionary *)serialize:(DbxTeamDesktopClientSession *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"session_id"] = valueObj.sessionId;
    jsonDict[@"host_name"] = valueObj.hostName;
    jsonDict[@"client_type"] = [DbxTeamDesktopPlatformSerializer serialize:valueObj.clientType];
    jsonDict[@"client_version"] = valueObj.clientVersion;
    jsonDict[@"platform"] = valueObj.platform;
    jsonDict[@"is_delete_on_unlink_supported"] = valueObj.isDeleteOnUnlinkSupported;
    if (valueObj.ipAddress) {
        jsonDict[@"ip_address"] = valueObj.ipAddress;
    }
    if (valueObj.country) {
        jsonDict[@"country"] = valueObj.country;
    }
    if (valueObj.created) {
        jsonDict[@"created"] = [DbxNSDateSerializer serialize:valueObj.created dateFormat:@"%Y-%m-%dT%H:%M:%SZ"];
    }
    if (valueObj.updated) {
        jsonDict[@"updated"] = [DbxNSDateSerializer serialize:valueObj.updated dateFormat:@"%Y-%m-%dT%H:%M:%SZ"];
    }

    return jsonDict;
}

+ (DbxTeamDesktopClientSession *)deserialize:(NSDictionary *)valueDict {
    NSString *sessionId = valueDict[@"session_id"];
    NSString *hostName = valueDict[@"host_name"];
    DbxTeamDesktopPlatform *clientType = [DbxTeamDesktopPlatformSerializer deserialize:valueDict[@"client_type"]];
    NSString *clientVersion = valueDict[@"client_version"];
    NSString *platform = valueDict[@"platform"];
    NSNumber *isDeleteOnUnlinkSupported = valueDict[@"is_delete_on_unlink_supported"];
    NSString *ipAddress = valueDict[@"ip_address"] ? valueDict[@"ip_address"] : nil;
    NSString *country = valueDict[@"country"] ? valueDict[@"country"] : nil;
    NSDate *created = valueDict[@"created"] ? [DbxNSDateSerializer deserialize:valueDict[@"created"] dateFormat:@"%Y-%m-%dT%H:%M:%SZ"] : nil;
    NSDate *updated = valueDict[@"updated"] ? [DbxNSDateSerializer deserialize:valueDict[@"updated"] dateFormat:@"%Y-%m-%dT%H:%M:%SZ"] : nil;

    return [[DbxTeamDesktopClientSession alloc] initWithSessionId:sessionId hostName:hostName clientType:clientType clientVersion:clientVersion platform:platform isDeleteOnUnlinkSupported:isDeleteOnUnlinkSupported ipAddress:ipAddress country:country created:created updated:updated];
}

@end
