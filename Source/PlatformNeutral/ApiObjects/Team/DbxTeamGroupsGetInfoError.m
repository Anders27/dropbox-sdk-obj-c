///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamGroupsGetInfoError.h"

@implementation DbxTeamGroupsGetInfoError 

- (instancetype)initWithGroupNotOnTeam {
    self = [super init];
    if (self != nil) {
        _tag = (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorGroupNotOnTeam;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorOther;
    }
    return self;
}

- (BOOL)isGroupNotOnTeam {
    return _tag == (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorGroupNotOnTeam;
}

- (BOOL)isOther {
    return _tag == (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorOther;
}

- (NSString *)getTagName {
    if (_tag == (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorGroupNotOnTeam) {
        return @"(TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorGroupNotOnTeam";
    }
    if (_tag == (TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorOther) {
        return @"(TeamGroupsGetInfoErrorTag)TeamGroupsGetInfoErrorOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamGroupsGetInfoErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamGroupsGetInfoErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamGroupsGetInfoErrorSerializer serialize:self] description];
}

@end


@implementation DbxTeamGroupsGetInfoErrorSerializer 

+ (NSDictionary *)serialize:(DbxTeamGroupsGetInfoError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isGroupNotOnTeam]) {
        jsonDict[@".tag"] = @"group_not_on_team";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxTeamGroupsGetInfoError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"group_not_on_team"]) {
        return [[DbxTeamGroupsGetInfoError alloc] initWithGroupNotOnTeam];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxTeamGroupsGetInfoError alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
