///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DbxStoneSerializers.h"

@class DbxTeamMemberAddResult;
@class DbxTeamTeamMemberInfo;

/// 
/// The DbxTeamMemberAddResult union.
/// 
/// Describes the result of attempting to add a single user to the team.
/// 'success' is the only value indicating that a user was indeed added to the
/// team - the other values explain the type of failure that occurred, and
/// include the email of the user for which the operation has failed.
/// 
@interface DbxTeamMemberAddResult : NSObject <DbxSerializable> 

typedef NS_ENUM(NSInteger, TeamMemberAddResultTag) {
    /// Describes a user that was successfully added to the team.
    TeamMemberAddResultSuccess,
    /// Team is already full. The organization has no available licenses.
    TeamMemberAddResultTeamLicenseLimit,
    /// Team is already full. The free team member limit has been reached.
    TeamMemberAddResultFreeTeamMemberLimitReached,
    /// User is already on this team. The provided email address is associated
    /// with a user who is already a member of or invited to the team.
    TeamMemberAddResultUserAlreadyOnTeam,
    /// User is already on another team. The provided email address is
    /// associated with a user that is already a member or invited to another
    /// team.
    TeamMemberAddResultUserOnAnotherTeam,
    /// User is already paired.
    TeamMemberAddResultUserAlreadyPaired,
    /// User migration has failed.
    TeamMemberAddResultUserMigrationFailed,
    /// A user with the given external member ID already exists on the team.
    TeamMemberAddResultDuplicateExternalMemberId,
    /// User creation has failed.
    TeamMemberAddResultUserCreationFailed,
};

- (nonnull instancetype)initWithSuccess:(DbxTeamTeamMemberInfo * _Nonnull)success;

- (nonnull instancetype)initWithTeamLicenseLimit:(NSString * _Nonnull)teamLicenseLimit;

- (nonnull instancetype)initWithFreeTeamMemberLimitReached:(NSString * _Nonnull)freeTeamMemberLimitReached;

- (nonnull instancetype)initWithUserAlreadyOnTeam:(NSString * _Nonnull)userAlreadyOnTeam;

- (nonnull instancetype)initWithUserOnAnotherTeam:(NSString * _Nonnull)userOnAnotherTeam;

- (nonnull instancetype)initWithUserAlreadyPaired:(NSString * _Nonnull)userAlreadyPaired;

- (nonnull instancetype)initWithUserMigrationFailed:(NSString * _Nonnull)userMigrationFailed;

- (nonnull instancetype)initWithDuplicateExternalMemberId:(NSString * _Nonnull)duplicateExternalMemberId;

- (nonnull instancetype)initWithUserCreationFailed:(NSString * _Nonnull)userCreationFailed;

- (BOOL)isSuccess;

- (BOOL)isTeamLicenseLimit;

- (BOOL)isFreeTeamMemberLimitReached;

- (BOOL)isUserAlreadyOnTeam;

- (BOOL)isUserOnAnotherTeam;

- (BOOL)isUserAlreadyPaired;

- (BOOL)isUserMigrationFailed;

- (BOOL)isDuplicateExternalMemberId;

- (BOOL)isUserCreationFailed;

- (NSString * _Nonnull)getTagName;

+ (NSDictionary * _Nonnull)serialize:(id _Nonnull)obj;

+ (id _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

- (NSString * _Nonnull)description;

/// Current state of the DbxTeamMemberAddResult union type.
@property (nonatomic) TeamMemberAddResultTag tag;
@property (nonatomic) DbxTeamTeamMemberInfo * _Nonnull success;
@property (nonatomic, copy) NSString * _Nonnull teamLicenseLimit;
@property (nonatomic, copy) NSString * _Nonnull freeTeamMemberLimitReached;
@property (nonatomic, copy) NSString * _Nonnull userAlreadyOnTeam;
@property (nonatomic, copy) NSString * _Nonnull userOnAnotherTeam;
@property (nonatomic, copy) NSString * _Nonnull userAlreadyPaired;
@property (nonatomic, copy) NSString * _Nonnull userMigrationFailed;
@property (nonatomic, copy) NSString * _Nonnull duplicateExternalMemberId;
@property (nonatomic, copy) NSString * _Nonnull userCreationFailed;

@end


@interface DbxTeamMemberAddResultSerializer : NSObject 

+ (NSDictionary * _Nonnull)serialize:(DbxTeamMemberAddResult * _Nonnull)obj;

+ (DbxTeamMemberAddResult * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
