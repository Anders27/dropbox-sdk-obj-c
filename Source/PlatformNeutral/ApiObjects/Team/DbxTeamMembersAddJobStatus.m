///
/// Auto-generated by Stone, do not modify.
///

#import "DbxAsyncPollResultBase.h"
#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamMemberAddResult.h"
#import "DbxTeamMembersAddJobStatus.h"

@implementation DbxTeamMembersAddJobStatus 

- (instancetype)initWithInProgress {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusInProgress;
    }
    return self;
}

- (instancetype)initWithComplete:(NSArray<DbxTeamMemberAddResult *> *)complete {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete;
        _complete = complete;
    }
    return self;
}

- (instancetype)initWithFailed:(NSString *)failed {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed;
        _failed = failed;
    }
    return self;
}

- (BOOL)isInProgress {
    return _tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusInProgress;
}

- (BOOL)isComplete {
    return _tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete;
}

- (BOOL)isFailed {
    return _tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed;
}

- (NSString *)getTagName {
    if (_tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusInProgress) {
        return @"(TeamMembersAddJobStatusTag)TeamMembersAddJobStatusInProgress";
    }
    if (_tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete) {
        return @"(TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete";
    }
    if (_tag == (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed) {
        return @"(TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

- (NSArray<DbxTeamMemberAddResult *> *)complete {
    if (_tag != (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusComplete, but was %@.", [self getTagName]];
    }
    return _complete;
}

- (NSString *)failed {
    if (_tag != (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed) {
        [NSException raise:@"IllegalStateException" format:@"Invalid tag: required (TeamMembersAddJobStatusTag)TeamMembersAddJobStatusFailed, but was %@.", [self getTagName]];
    }
    return _failed;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamMembersAddJobStatusSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamMembersAddJobStatusSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamMembersAddJobStatusSerializer serialize:self] description];
}

@end


@implementation DbxTeamMembersAddJobStatusSerializer 

+ (NSDictionary *)serialize:(DbxTeamMembersAddJobStatus *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isInProgress]) {
        jsonDict[@".tag"] = @"in_progress";
    }
    else if ([valueObj isComplete]) {
        jsonDict[@"complete"] = [DbxArraySerializer serialize:valueObj.complete withBlock:^id(id obj) { return [DbxTeamMemberAddResultSerializer serialize:obj]; }];
        jsonDict[@".tag"] = @"complete";
    }
    else if ([valueObj isFailed]) {
        jsonDict[@"failed"] = [DbxStringSerializer serialize:valueObj.failed];
        jsonDict[@".tag"] = @"failed";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxTeamMembersAddJobStatus *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"in_progress"]) {
        return [[DbxTeamMembersAddJobStatus alloc] initWithInProgress];
    }
    if ([tag isEqualToString:@"complete"]) {
        NSArray<DbxTeamMemberAddResult *> *complete = [DbxArraySerializer deserialize:valueDict[@"complete"] withBlock:^id(id obj) { return [DbxTeamMemberAddResultSerializer deserialize:obj]; }];
        return [[DbxTeamMembersAddJobStatus alloc] initWithComplete:complete];
    }
    if ([tag isEqualToString:@"failed"]) {
        NSString *failed = [DbxStringSerializer deserialize:valueDict[@"failed"]];
        return [[DbxTeamMembersAddJobStatus alloc] initWithFailed:failed];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
