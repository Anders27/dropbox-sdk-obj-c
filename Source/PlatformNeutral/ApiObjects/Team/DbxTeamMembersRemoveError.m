///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamMembersDeactivateError.h"
#import "DbxTeamMembersRemoveError.h"

@implementation DbxTeamMembersRemoveError 

- (instancetype)initWithUserNotFound {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotFound;
    }
    return self;
}

- (instancetype)initWithUserNotInTeam {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotInTeam;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorOther;
    }
    return self;
}

- (instancetype)initWithRemoveLastAdmin {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemoveLastAdmin;
    }
    return self;
}

- (instancetype)initWithRemovedAndTransferDestShouldDiffer {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferDestShouldDiffer;
    }
    return self;
}

- (instancetype)initWithRemovedAndTransferAdminShouldDiffer {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferAdminShouldDiffer;
    }
    return self;
}

- (instancetype)initWithTransferDestUserNotFound {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotFound;
    }
    return self;
}

- (instancetype)initWithTransferDestUserNotInTeam {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotInTeam;
    }
    return self;
}

- (instancetype)initWithTransferAdminUserNotFound {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotFound;
    }
    return self;
}

- (instancetype)initWithTransferAdminUserNotInTeam {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotInTeam;
    }
    return self;
}

- (instancetype)initWithUnspecifiedTransferAdminId {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUnspecifiedTransferAdminId;
    }
    return self;
}

- (instancetype)initWithTransferAdminIsNotAdmin {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminIsNotAdmin;
    }
    return self;
}

- (instancetype)initWithCannotKeepAccountAndTransfer {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndTransfer;
    }
    return self;
}

- (instancetype)initWithCannotKeepAccountAndDeleteData {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndDeleteData;
    }
    return self;
}

- (instancetype)initWithEmailAddressTooLongToBeDisabled {
    self = [super init];
    if (self != nil) {
        _tag = (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorEmailAddressTooLongToBeDisabled;
    }
    return self;
}

- (BOOL)isUserNotFound {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotFound;
}

- (BOOL)isUserNotInTeam {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotInTeam;
}

- (BOOL)isOther {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorOther;
}

- (BOOL)isRemoveLastAdmin {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemoveLastAdmin;
}

- (BOOL)isRemovedAndTransferDestShouldDiffer {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferDestShouldDiffer;
}

- (BOOL)isRemovedAndTransferAdminShouldDiffer {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferAdminShouldDiffer;
}

- (BOOL)isTransferDestUserNotFound {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotFound;
}

- (BOOL)isTransferDestUserNotInTeam {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotInTeam;
}

- (BOOL)isTransferAdminUserNotFound {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotFound;
}

- (BOOL)isTransferAdminUserNotInTeam {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotInTeam;
}

- (BOOL)isUnspecifiedTransferAdminId {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUnspecifiedTransferAdminId;
}

- (BOOL)isTransferAdminIsNotAdmin {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminIsNotAdmin;
}

- (BOOL)isCannotKeepAccountAndTransfer {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndTransfer;
}

- (BOOL)isCannotKeepAccountAndDeleteData {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndDeleteData;
}

- (BOOL)isEmailAddressTooLongToBeDisabled {
    return _tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorEmailAddressTooLongToBeDisabled;
}

- (NSString *)getTagName {
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotFound) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotFound";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotInTeam) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUserNotInTeam";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorOther) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorOther";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemoveLastAdmin) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemoveLastAdmin";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferDestShouldDiffer) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferDestShouldDiffer";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferAdminShouldDiffer) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorRemovedAndTransferAdminShouldDiffer";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotFound) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotFound";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotInTeam) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferDestUserNotInTeam";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotFound) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotFound";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotInTeam) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminUserNotInTeam";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUnspecifiedTransferAdminId) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorUnspecifiedTransferAdminId";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminIsNotAdmin) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorTransferAdminIsNotAdmin";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndTransfer) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndTransfer";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndDeleteData) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorCannotKeepAccountAndDeleteData";
    }
    if (_tag == (TeamMembersRemoveErrorTag)TeamMembersRemoveErrorEmailAddressTooLongToBeDisabled) {
        return @"(TeamMembersRemoveErrorTag)TeamMembersRemoveErrorEmailAddressTooLongToBeDisabled";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamMembersRemoveErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamMembersRemoveErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamMembersRemoveErrorSerializer serialize:self] description];
}

@end


@implementation DbxTeamMembersRemoveErrorSerializer 

+ (NSDictionary *)serialize:(DbxTeamMembersRemoveError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isUserNotFound]) {
        jsonDict[@".tag"] = @"user_not_found";
    }
    else if ([valueObj isUserNotInTeam]) {
        jsonDict[@".tag"] = @"user_not_in_team";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else if ([valueObj isRemoveLastAdmin]) {
        jsonDict[@".tag"] = @"remove_last_admin";
    }
    else if ([valueObj isRemovedAndTransferDestShouldDiffer]) {
        jsonDict[@".tag"] = @"removed_and_transfer_dest_should_differ";
    }
    else if ([valueObj isRemovedAndTransferAdminShouldDiffer]) {
        jsonDict[@".tag"] = @"removed_and_transfer_admin_should_differ";
    }
    else if ([valueObj isTransferDestUserNotFound]) {
        jsonDict[@".tag"] = @"transfer_dest_user_not_found";
    }
    else if ([valueObj isTransferDestUserNotInTeam]) {
        jsonDict[@".tag"] = @"transfer_dest_user_not_in_team";
    }
    else if ([valueObj isTransferAdminUserNotFound]) {
        jsonDict[@".tag"] = @"transfer_admin_user_not_found";
    }
    else if ([valueObj isTransferAdminUserNotInTeam]) {
        jsonDict[@".tag"] = @"transfer_admin_user_not_in_team";
    }
    else if ([valueObj isUnspecifiedTransferAdminId]) {
        jsonDict[@".tag"] = @"unspecified_transfer_admin_id";
    }
    else if ([valueObj isTransferAdminIsNotAdmin]) {
        jsonDict[@".tag"] = @"transfer_admin_is_not_admin";
    }
    else if ([valueObj isCannotKeepAccountAndTransfer]) {
        jsonDict[@".tag"] = @"cannot_keep_account_and_transfer";
    }
    else if ([valueObj isCannotKeepAccountAndDeleteData]) {
        jsonDict[@".tag"] = @"cannot_keep_account_and_delete_data";
    }
    else if ([valueObj isEmailAddressTooLongToBeDisabled]) {
        jsonDict[@".tag"] = @"email_address_too_long_to_be_disabled";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxTeamMembersRemoveError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"user_not_found"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithUserNotFound];
    }
    if ([tag isEqualToString:@"user_not_in_team"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithUserNotInTeam];
    }
    if ([tag isEqualToString:@"other"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithOther];
    }
    if ([tag isEqualToString:@"remove_last_admin"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithRemoveLastAdmin];
    }
    if ([tag isEqualToString:@"removed_and_transfer_dest_should_differ"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithRemovedAndTransferDestShouldDiffer];
    }
    if ([tag isEqualToString:@"removed_and_transfer_admin_should_differ"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithRemovedAndTransferAdminShouldDiffer];
    }
    if ([tag isEqualToString:@"transfer_dest_user_not_found"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithTransferDestUserNotFound];
    }
    if ([tag isEqualToString:@"transfer_dest_user_not_in_team"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithTransferDestUserNotInTeam];
    }
    if ([tag isEqualToString:@"transfer_admin_user_not_found"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithTransferAdminUserNotFound];
    }
    if ([tag isEqualToString:@"transfer_admin_user_not_in_team"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithTransferAdminUserNotInTeam];
    }
    if ([tag isEqualToString:@"unspecified_transfer_admin_id"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithUnspecifiedTransferAdminId];
    }
    if ([tag isEqualToString:@"transfer_admin_is_not_admin"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithTransferAdminIsNotAdmin];
    }
    if ([tag isEqualToString:@"cannot_keep_account_and_transfer"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithCannotKeepAccountAndTransfer];
    }
    if ([tag isEqualToString:@"cannot_keep_account_and_delete_data"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithCannotKeepAccountAndDeleteData];
    }
    if ([tag isEqualToString:@"email_address_too_long_to_be_disabled"]) {
        return [[DbxTeamMembersRemoveError alloc] initWithEmailAddressTooLongToBeDisabled];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
