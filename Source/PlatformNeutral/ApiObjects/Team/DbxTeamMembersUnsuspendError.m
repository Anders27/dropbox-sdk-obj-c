///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMMembersDeactivateError.h"
#import "DBXTEAMMembersUnsuspendError.h"

@implementation DBXTEAMMembersUnsuspendError 

- (instancetype)initWithUserNotFound {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMMembersUnsuspendErrorUserNotFound;
    }
    return self;
}

- (instancetype)initWithUserNotInTeam {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMMembersUnsuspendErrorUserNotInTeam;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMMembersUnsuspendErrorOther;
    }
    return self;
}

- (instancetype)initWithUnsuspendNonSuspendedMember {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMMembersUnsuspendErrorUnsuspendNonSuspendedMember;
    }
    return self;
}

- (instancetype)initWithTeamLicenseLimit {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMMembersUnsuspendErrorTeamLicenseLimit;
    }
    return self;
}

- (BOOL)isUserNotFound {
    return _tag == DBXTEAMMembersUnsuspendErrorUserNotFound;
}

- (BOOL)isUserNotInTeam {
    return _tag == DBXTEAMMembersUnsuspendErrorUserNotInTeam;
}

- (BOOL)isOther {
    return _tag == DBXTEAMMembersUnsuspendErrorOther;
}

- (BOOL)isUnsuspendNonSuspendedMember {
    return _tag == DBXTEAMMembersUnsuspendErrorUnsuspendNonSuspendedMember;
}

- (BOOL)isTeamLicenseLimit {
    return _tag == DBXTEAMMembersUnsuspendErrorTeamLicenseLimit;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXTEAMMembersUnsuspendErrorUserNotFound:
           return @"DBXTEAMMembersUnsuspendErrorUserNotFound";
        case DBXTEAMMembersUnsuspendErrorUserNotInTeam:
           return @"DBXTEAMMembersUnsuspendErrorUserNotInTeam";
        case DBXTEAMMembersUnsuspendErrorOther:
           return @"DBXTEAMMembersUnsuspendErrorOther";
        case DBXTEAMMembersUnsuspendErrorUnsuspendNonSuspendedMember:
           return @"DBXTEAMMembersUnsuspendErrorUnsuspendNonSuspendedMember";
        case DBXTEAMMembersUnsuspendErrorTeamLicenseLimit:
           return @"DBXTEAMMembersUnsuspendErrorTeamLicenseLimit";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXTEAMMembersUnsuspendErrorSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMMembersUnsuspendErrorSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMMembersUnsuspendErrorSerializer serialize:self] description];
}

@end


@implementation DBXTEAMMembersUnsuspendErrorSerializer 

+ (NSDictionary *)serialize:(DBXTEAMMembersUnsuspendError *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isUserNotFound]) {
        jsonDict[@".tag"] = @"user_not_found";
    }
    else if ([valueObj isUserNotInTeam]) {
        jsonDict[@".tag"] = @"user_not_in_team";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else if ([valueObj isUnsuspendNonSuspendedMember]) {
        jsonDict[@".tag"] = @"unsuspend_non_suspended_member";
    }
    else if ([valueObj isTeamLicenseLimit]) {
        jsonDict[@".tag"] = @"team_license_limit";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXTEAMMembersUnsuspendError *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"user_not_found"]) {
        return [[DBXTEAMMembersUnsuspendError alloc] initWithUserNotFound];
    }
    else if ([tag isEqualToString:@"user_not_in_team"]) {
        return [[DBXTEAMMembersUnsuspendError alloc] initWithUserNotInTeam];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXTEAMMembersUnsuspendError alloc] initWithOther];
    }
    else if ([tag isEqualToString:@"unsuspend_non_suspended_member"]) {
        return [[DBXTEAMMembersUnsuspendError alloc] initWithUnsuspendNonSuspendedMember];
    }
    else if ([tag isEqualToString:@"team_license_limit"]) {
        return [[DBXTEAMMembersUnsuspendError alloc] initWithTeamLicenseLimit];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
