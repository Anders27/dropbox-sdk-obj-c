///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamStorageBucket.h"

@implementation DbxTeamStorageBucket 

- (instancetype)initWithBucket:(NSString *)bucket users:(NSNumber *)users {

    self = [super init];
    if (self != nil) {
        _bucket = bucket;
        _users = users;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamStorageBucketSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamStorageBucketSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamStorageBucketSerializer serialize:self] description];
}

@end


@implementation DbxTeamStorageBucketSerializer 

+ (NSDictionary *)serialize:(DbxTeamStorageBucket *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"bucket"] = valueObj.bucket;
    jsonDict[@"users"] = valueObj.users;

    return jsonDict;
}

+ (DbxTeamStorageBucket *)deserialize:(NSDictionary *)valueDict {
    NSString *bucket = valueDict[@"bucket"];
    NSNumber *users = valueDict[@"users"];

    return [[DbxTeamStorageBucket alloc] initWithBucket:bucket users:users];
}

@end
