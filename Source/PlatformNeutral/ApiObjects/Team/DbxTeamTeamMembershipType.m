///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMTeamMembershipType.h"

@implementation DBXTEAMTeamMembershipType 

- (instancetype)initWithFull {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMTeamMembershipTypeFull;
    }
    return self;
}

- (instancetype)initWithLimited {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMTeamMembershipTypeLimited;
    }
    return self;
}

- (BOOL)isFull {
    return _tag == DBXTEAMTeamMembershipTypeFull;
}

- (BOOL)isLimited {
    return _tag == DBXTEAMTeamMembershipTypeLimited;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXTEAMTeamMembershipTypeFull:
           return @"DBXTEAMTeamMembershipTypeFull";
        case DBXTEAMTeamMembershipTypeLimited:
           return @"DBXTEAMTeamMembershipTypeLimited";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXTEAMTeamMembershipTypeSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMTeamMembershipTypeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMTeamMembershipTypeSerializer serialize:self] description];
}

@end


@implementation DBXTEAMTeamMembershipTypeSerializer 

+ (NSDictionary *)serialize:(DBXTEAMTeamMembershipType *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isFull]) {
        jsonDict[@".tag"] = @"full";
    }
    else if ([valueObj isLimited]) {
        jsonDict[@".tag"] = @"limited";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXTEAMTeamMembershipType *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"full"]) {
        return [[DBXTEAMTeamMembershipType alloc] initWithFull];
    }
    else if ([tag isEqualToString:@"limited"]) {
        return [[DBXTEAMTeamMembershipType alloc] initWithLimited];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
