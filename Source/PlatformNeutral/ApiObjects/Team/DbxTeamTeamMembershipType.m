///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxTeamTeamMembershipType.h"

@implementation DbxTeamTeamMembershipType 

- (instancetype)initWithFull {
    self = [super init];
    if (self != nil) {
        _tag = TeamTeamMembershipTypeFull;
    }
    return self;
}

- (instancetype)initWithLimited {
    self = [super init];
    if (self != nil) {
        _tag = TeamTeamMembershipTypeLimited;
    }
    return self;
}

- (BOOL)isFull {
    return _tag == TeamTeamMembershipTypeFull;
}

- (BOOL)isLimited {
    return _tag == TeamTeamMembershipTypeLimited;
}

- (NSString *)getTagName {
    switch (_tag) {
        case TeamTeamMembershipTypeFull:
           return @"TeamTeamMembershipTypeFull";
        case TeamTeamMembershipTypeLimited:
           return @"TeamTeamMembershipTypeLimited";
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxTeamTeamMembershipTypeSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxTeamTeamMembershipTypeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxTeamTeamMembershipTypeSerializer serialize:self] description];
}

@end


@implementation DbxTeamTeamMembershipTypeSerializer 

+ (NSDictionary *)serialize:(DbxTeamTeamMembershipType *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isFull]) {
        jsonDict[@".tag"] = @"full";
    }
    else if ([valueObj isLimited]) {
        jsonDict[@".tag"] = @"limited";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DbxTeamTeamMembershipType *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"full"]) {
        return [[DbxTeamTeamMembershipType alloc] initWithFull];
    }
    if ([tag isEqualToString:@"limited"]) {
        return [[DbxTeamTeamMembershipType alloc] initWithLimited];
    }

    @throw([NSException exceptionWithName:@"InvalidTagEnum" reason:@"Supplied tag enum has an invalid value." userInfo:nil]);
}

@end
