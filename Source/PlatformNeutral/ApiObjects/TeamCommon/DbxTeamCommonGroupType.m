///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXTEAMCOMMONGroupType.h"

@implementation DBXTEAMCOMMONGroupType 

- (instancetype)initWithTeam {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMCOMMONGroupTypeTeam;
    }
    return self;
}

- (instancetype)initWithUserManaged {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMCOMMONGroupTypeUserManaged;
    }
    return self;
}

- (instancetype)initWithOther {
    self = [super init];
    if (self != nil) {
        _tag = DBXTEAMCOMMONGroupTypeOther;
    }
    return self;
}

- (BOOL)isTeam {
    return _tag == DBXTEAMCOMMONGroupTypeTeam;
}

- (BOOL)isUserManaged {
    return _tag == DBXTEAMCOMMONGroupTypeUserManaged;
}

- (BOOL)isOther {
    return _tag == DBXTEAMCOMMONGroupTypeOther;
}

- (NSString *)getTagName {
    switch (_tag) {
        case DBXTEAMCOMMONGroupTypeTeam:
           return @"DBXTEAMCOMMONGroupTypeTeam";
        case DBXTEAMCOMMONGroupTypeUserManaged:
           return @"DBXTEAMCOMMONGroupTypeUserManaged";
        case DBXTEAMCOMMONGroupTypeOther:
           return @"DBXTEAMCOMMONGroupTypeOther";
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

+ (NSDictionary *)serialize:(id)obj {
    return [DBXTEAMCOMMONGroupTypeSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXTEAMCOMMONGroupTypeSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXTEAMCOMMONGroupTypeSerializer serialize:self] description];
}

@end


@implementation DBXTEAMCOMMONGroupTypeSerializer 

+ (NSDictionary *)serialize:(DBXTEAMCOMMONGroupType *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    if ([valueObj isTeam]) {
        jsonDict[@".tag"] = @"team";
    }
    else if ([valueObj isUserManaged]) {
        jsonDict[@".tag"] = @"user_managed";
    }
    else if ([valueObj isOther]) {
        jsonDict[@".tag"] = @"other";
    }
    else {
        @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
    }

    return jsonDict;
}

+ (DBXTEAMCOMMONGroupType *)deserialize:(NSDictionary *)valueDict {
    NSString *tag = valueDict[@".tag"];

    if ([tag isEqualToString:@"team"]) {
        return [[DBXTEAMCOMMONGroupType alloc] initWithTeam];
    }
    else if ([tag isEqualToString:@"user_managed"]) {
        return [[DBXTEAMCOMMONGroupType alloc] initWithUserManaged];
    }
    else if ([tag isEqualToString:@"other"]) {
        return [[DBXTEAMCOMMONGroupType alloc] initWithOther];
    }

    @throw([NSException exceptionWithName:@"InvalidTag" reason:@"Tag has an invalid value." userInfo:nil]);
}

@end
