///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXUSERSAccount.h"
#import "DBXUSERSBasicAccount.h"
#import "DBXUSERSName.h"

@implementation DBXUSERSBasicAccount 

- (instancetype)initWithAccountId:(NSString *)accountId name:(DBXUSERSName *)name email:(NSString *)email emailVerified:(NSNumber *)emailVerified disabled:(NSNumber *)disabled isTeammate:(NSNumber *)isTeammate profilePhotoUrl:(NSString *)profilePhotoUrl teamMemberId:(NSString *)teamMemberId {
    [DBXStoneValidators stringValidator:@(40) maxLength:@(40) pattern:nil](accountId);

    self = [super initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled profilePhotoUrl:profilePhotoUrl];
    if (self) {
        _isTeammate = isTeammate;
        _teamMemberId = teamMemberId;
    }
    return self;
}

- (instancetype)initWithAccountId:(NSString *)accountId name:(DBXUSERSName *)name email:(NSString *)email emailVerified:(NSNumber *)emailVerified disabled:(NSNumber *)disabled isTeammate:(NSNumber *)isTeammate {
    return [self initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled isTeammate:isTeammate profilePhotoUrl:nil teamMemberId:nil];
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXUSERSBasicAccountSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXUSERSBasicAccountSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXUSERSBasicAccountSerializer serialize:self] description];
}

@end


@implementation DBXUSERSBasicAccountSerializer 

+ (NSDictionary *)serialize:(DBXUSERSBasicAccount *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_id"] = valueObj.accountId;
    jsonDict[@"name"] = [DBXUSERSNameSerializer serialize:valueObj.name];
    jsonDict[@"email"] = valueObj.email;
    jsonDict[@"email_verified"] = valueObj.emailVerified;
    jsonDict[@"disabled"] = valueObj.disabled;
    jsonDict[@"is_teammate"] = valueObj.isTeammate;
    if (valueObj.profilePhotoUrl) {
        jsonDict[@"profile_photo_url"] = valueObj.profilePhotoUrl;
    }
    if (valueObj.teamMemberId) {
        jsonDict[@"team_member_id"] = valueObj.teamMemberId;
    }

    return jsonDict;
}

+ (DBXUSERSBasicAccount *)deserialize:(NSDictionary *)valueDict {
    NSString *accountId = valueDict[@"account_id"];
    DBXUSERSName *name = [DBXUSERSNameSerializer deserialize:valueDict[@"name"]];
    NSString *email = valueDict[@"email"];
    NSNumber *emailVerified = valueDict[@"email_verified"];
    NSNumber *disabled = valueDict[@"disabled"];
    NSNumber *isTeammate = valueDict[@"is_teammate"];
    NSString *profilePhotoUrl = valueDict[@"profile_photo_url"] ?: nil;
    NSString *teamMemberId = valueDict[@"team_member_id"] ?: nil;

    return [[DBXUSERSBasicAccount alloc] initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled isTeammate:isTeammate profilePhotoUrl:profilePhotoUrl teamMemberId:teamMemberId];
}

@end
