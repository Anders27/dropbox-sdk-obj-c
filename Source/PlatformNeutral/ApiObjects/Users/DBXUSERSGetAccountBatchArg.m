///
/// Auto-generated by Stone, do not modify.
///

#import "DBXStoneSerializers.h"
#import "DBXStoneValidators.h"
#import "DBXUSERSGetAccountBatchArg.h"

@implementation DBXUSERSGetAccountBatchArg 

- (instancetype)initWithAccountIds:(NSArray<NSString *> *)accountIds {
    [DBXStoneValidators arrayValidator:@(1) maxItems:nil itemValidator:[DBXStoneValidators stringValidator:@(40) maxLength:@(40) pattern:nil]](accountIds);

    self = [super init];
    if (self) {
        _accountIds = accountIds;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)instance {
    return [DBXUSERSGetAccountBatchArgSerializer serialize:instance];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DBXUSERSGetAccountBatchArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DBXUSERSGetAccountBatchArgSerializer serialize:self] description];
}

@end


@implementation DBXUSERSGetAccountBatchArgSerializer 

+ (NSDictionary *)serialize:(DBXUSERSGetAccountBatchArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_ids"] = [DBXArraySerializer serialize:valueObj.accountIds withBlock:^id(id elem) { return elem; }];

    return jsonDict;
}

+ (DBXUSERSGetAccountBatchArg *)deserialize:(NSDictionary *)valueDict {
    NSArray<NSString *> *accountIds = [DBXArraySerializer deserialize:valueDict[@"account_ids"] withBlock:^id(id elem) { return elem; }];

    return [[DBXUSERSGetAccountBatchArg alloc] initWithAccountIds:accountIds];
}

@end
