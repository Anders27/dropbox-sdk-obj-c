///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXUSERSIndividualSpaceAllocation;
@class DBXUSERSSpaceAllocation;
@class DBXUSERSTeamSpaceAllocation;

/// 
/// The SpaceAllocation union.
/// 
/// Space is allocated differently based on the type of account.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXUSERSSpaceAllocation : NSObject <DBXSerializable> 

/// The `DBXUSERSSpaceAllocationTag` enum type represents the possible tag
/// states with which the `DBXUSERSSpaceAllocation` union can exist.
typedef NS_ENUM(NSInteger, DBXUSERSSpaceAllocationTag) {
    /// The user's space allocation applies only to their individual account.
    DBXUSERSSpaceAllocationIndividual,

    /// The user shares space with other members of their team.
    DBXUSERSSpaceAllocationTeam,

    /// (no description).
    DBXUSERSSpaceAllocationOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBXUSERSSpaceAllocationTag tag;

/// The user's space allocation applies only to their individual account.
@property (nonatomic, readonly) DBXUSERSIndividualSpaceAllocation * _Nonnull individual;

/// The user shares space with other members of their team.
@property (nonatomic, readonly) DBXUSERSTeamSpaceAllocation * _Nonnull team;

/// 
/// Initializes union class with tag state of `Individual`.
/// 
/// About the `Individual` tag state: The user's space allocation applies only
/// to their individual account.
/// 
/// - parameter individual: The user's space allocation applies only to their
/// individual account.
/// 
/// - returns: An initialized `DBXUSERSSpaceAllocation` instance.
/// 
- (nonnull instancetype)initWithIndividual:(DBXUSERSIndividualSpaceAllocation * _Nonnull)individual;

/// 
/// Initializes union class with tag state of `Team`.
/// 
/// About the `Team` tag state: The user shares space with other members of
/// their team.
/// 
/// - parameter team: The user shares space with other members of their team.
/// 
/// - returns: An initialized `DBXUSERSSpaceAllocation` instance.
/// 
- (nonnull instancetype)initWithTeam:(DBXUSERSTeamSpaceAllocation * _Nonnull)team;

/// 
/// Initializes union class with tag state of `Other`.
/// 
/// - returns: An initialized `DBXUSERSSpaceAllocation` instance.
/// 
- (nonnull instancetype)initWithOther;

/// 
/// Retrieves whether the union's current tag state has value `Individual`.
/// 
/// - returns: Whether the union's current tag state has value `Individual`.
/// 
- (BOOL)isIndividual;

/// 
/// Retrieves whether the union's current tag state has value `Team`.
/// 
/// - returns: Whether the union's current tag state has value `Team`.
/// 
- (BOOL)isTeam;

/// 
/// Retrieves whether the union's current tag state has value `Other`.
/// 
/// - returns: Whether the union's current tag state has value `Other`.
/// 
- (BOOL)isOther;

/// 
/// Retrieves string value of union's current tag state.
/// 
/// - returns: A human-readable string representing the union's current tag
/// state.
/// 
- (NSString * _Nonnull)getTagName;

@end


/// 
/// The serialization class for the `DBXUSERSSpaceAllocation` union.
/// 
@interface DBXUSERSSpaceAllocationSerializer : NSObject 

/// 
/// Serializes `DBXUSERSSpaceAllocation` instances.
/// 
///  - parameter instance: An instance of the `DBXUSERSSpaceAllocation` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXUSERSSpaceAllocation` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXUSERSSpaceAllocation * _Nonnull)instance;

/// 
/// Deserializes `DBXUSERSSpaceAllocation` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXUSERSSpaceAllocation` API object.
/// 
///  - returns: An instantiation of the `DBXUSERSSpaceAllocation` object.
/// 
+ (DBXUSERSSpaceAllocation * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
