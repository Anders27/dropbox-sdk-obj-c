///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>
#import "DBXSerializableProtocol.h"

@class DBXUSERSTeamSpaceAllocation;

/// 
/// The TeamSpaceAllocation struct.
/// 
/// This class implements the `DBXSerializable` protocol (`serialize` and
/// `deserialize` instance methods), which is required for all Obj-C SDK API
/// route objects.
/// 
@interface DBXUSERSTeamSpaceAllocation : NSObject <DBXSerializable> 

/// The total space currently used by the user's team (bytes).
@property (nonatomic, readonly, copy) NSNumber * _Nonnull used;

/// The total space allocated to the user's team (bytes).
@property (nonatomic, readonly, copy) NSNumber * _Nonnull allocated;

/// 
/// Full constructor for the `DBXUSERSTeamSpaceAllocation` struct (exposes all
/// instance variables).
/// 
/// - parameter used: The total space currently used by the user's team (bytes).
/// - parameter allocated: The total space allocated to the user's team (bytes).
/// 
/// - returns: An initialized `DBXUSERSTeamSpaceAllocation` instance.
/// 
- (nonnull instancetype)initWithUsed:(NSNumber * _Nonnull)used allocated:(NSNumber * _Nonnull)allocated;

@end


/// 
/// The serialization class for the TeamSpaceAllocation struct.
/// 
@interface DBXUSERSTeamSpaceAllocationSerializer : NSObject 

/// 
/// Serializes `DBXUSERSTeamSpaceAllocation` instances.
/// 
///  - parameter instance: An instance of the `DBXUSERSTeamSpaceAllocation` API
/// object.
/// 
///  - returns: A json-compatible dictionary representation of the
/// `DBXUSERSTeamSpaceAllocation` API object.
/// 
+ (NSDictionary * _Nonnull)serialize:(DBXUSERSTeamSpaceAllocation * _Nonnull)instance;

/// 
/// Deserializes `DBXUSERSTeamSpaceAllocation` instances.
/// 
///  - parameter dict: A json-compatible dictionary representation of the
/// `DBXUSERSTeamSpaceAllocation` API object.
/// 
///  - returns: An instantiation of the `DBXUSERSTeamSpaceAllocation` object.
/// 
+ (DBXUSERSTeamSpaceAllocation * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
