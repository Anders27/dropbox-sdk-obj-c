///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersAccount.h"
#import "DbxUsersBasicAccount.h"
#import "DbxUsersName.h"

@implementation DbxUsersBasicAccount 

- (instancetype)initWithAccountId:(NSString *)accountId name:(DbxUsersName *)name email:(NSString *)email emailVerified:(NSNumber *)emailVerified disabled:(NSNumber *)disabled isTeammate:(NSNumber *)isTeammate profilePhotoUrl:(NSString *)profilePhotoUrl teamMemberId:(NSString *)teamMemberId {
    [DbxStoneValidators stringValidator:[NSNumber numberWithInt:40] maxLength:[NSNumber numberWithInt:40] pattern:nil](accountId);

    self = [super initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled profilePhotoUrl:profilePhotoUrl];
    if (self != nil) {
        _isTeammate = isTeammate;
        _teamMemberId = teamMemberId;
    }
    return self;
}

- (instancetype)initWithAccountId:(NSString *)accountId name:(DbxUsersName *)name email:(NSString *)email emailVerified:(NSNumber *)emailVerified disabled:(NSNumber *)disabled isTeammate:(NSNumber *)isTeammate {
    return [self initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled isTeammate:isTeammate profilePhotoUrl:nil teamMemberId:nil];
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxUsersBasicAccountSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxUsersBasicAccountSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxUsersBasicAccountSerializer serialize:self] description];
}

@end


@implementation DbxUsersBasicAccountSerializer 

+ (NSDictionary *)serialize:(DbxUsersBasicAccount *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_id"] = [DbxStringSerializer serialize:valueObj.accountId];
    jsonDict[@"name"] = [DbxUsersNameSerializer serialize:valueObj.name];
    jsonDict[@"email"] = [DbxStringSerializer serialize:valueObj.email];
    jsonDict[@"email_verified"] = [DbxBoolSerializer serialize:valueObj.emailVerified];
    jsonDict[@"disabled"] = [DbxBoolSerializer serialize:valueObj.disabled];
    jsonDict[@"is_teammate"] = [DbxBoolSerializer serialize:valueObj.isTeammate];
    if (valueObj.profilePhotoUrl) {
        jsonDict[@"profile_photo_url"] = [DbxStringSerializer serialize:valueObj.profilePhotoUrl];
    }
    if (valueObj.teamMemberId) {
        jsonDict[@"team_member_id"] = [DbxStringSerializer serialize:valueObj.teamMemberId];
    }

    return jsonDict;
}

+ (DbxUsersBasicAccount *)deserialize:(NSDictionary *)valueDict {
    NSString *accountId = [DbxStringSerializer deserialize:valueDict[@"account_id"]];
    DbxUsersName *name = [DbxUsersNameSerializer deserialize:valueDict[@"name"]];
    NSString *email = [DbxStringSerializer deserialize:valueDict[@"email"]];
    NSNumber *emailVerified = [DbxBoolSerializer deserialize:valueDict[@"email_verified"]];
    NSNumber *disabled = [DbxBoolSerializer deserialize:valueDict[@"disabled"]];
    NSNumber *isTeammate = [DbxBoolSerializer deserialize:valueDict[@"is_teammate"]];
    NSString *profilePhotoUrl = valueDict[@"profile_photo_url"] != nil ? [DbxStringSerializer deserialize:valueDict[@"profile_photo_url"]] : nil;
    NSString *teamMemberId = valueDict[@"team_member_id"] != nil ? [DbxStringSerializer deserialize:valueDict[@"team_member_id"]] : nil;

    return [[DbxUsersBasicAccount alloc] initWithAccountId:accountId name:name email:email emailVerified:emailVerified disabled:disabled isTeammate:isTeammate profilePhotoUrl:profilePhotoUrl teamMemberId:teamMemberId];
}

@end
