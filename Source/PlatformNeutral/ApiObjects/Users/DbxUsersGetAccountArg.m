///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersGetAccountArg.h"

@implementation DbxUsersGetAccountArg 

- (instancetype)initWithAccountId:(NSString *)accountId {
    [DbxStoneValidators stringValidator:[NSNumber numberWithInt:40] maxLength:[NSNumber numberWithInt:40] pattern:nil](accountId);

    self = [super init];
    if (self != nil) {
        _accountId = accountId;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxUsersGetAccountArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxUsersGetAccountArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxUsersGetAccountArgSerializer serialize:self] description];
}

@end


@implementation DbxUsersGetAccountArgSerializer 

+ (NSDictionary *)serialize:(DbxUsersGetAccountArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_id"] = [DbxStringSerializer serialize:valueObj.accountId];

    return jsonDict;
}

+ (DbxUsersGetAccountArg *)deserialize:(NSDictionary *)valueDict {
    NSString *accountId = [DbxStringSerializer deserialize:valueDict];

    return [[DbxUsersGetAccountArg alloc] initWithAccountId:accountId];
}

@end
