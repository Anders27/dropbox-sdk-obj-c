///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersGetAccountBatchArg.h"

@implementation DbxUsersGetAccountBatchArg 

- (instancetype)initWithAccountIds:(NSArray<NSString *> *)accountIds {
    [DbxStoneValidators arrayValidator:[NSNumber numberWithInt:1] maxItems:nil itemValidator:[DbxStoneValidators stringValidator:[NSNumber numberWithInt:40] maxLength:[NSNumber numberWithInt:40] pattern:nil]](accountIds);

    self = [super init];
    if (self != nil) {
        _accountIds = accountIds;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxUsersGetAccountBatchArgSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxUsersGetAccountBatchArgSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxUsersGetAccountBatchArgSerializer serialize:self] description];
}

@end


@implementation DbxUsersGetAccountBatchArgSerializer 

+ (NSDictionary *)serialize:(DbxUsersGetAccountBatchArg *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"account_ids"] = [DbxArraySerializer serialize:valueObj.accountIds withBlock:^id(id obj) { return [DbxStringSerializer serialize:obj]; }];

    return jsonDict;
}

+ (DbxUsersGetAccountBatchArg *)deserialize:(NSDictionary *)valueDict {
    NSArray<NSString *> *accountIds = [DbxArraySerializer deserialize:valueDict withBlock:^id(id obj) { return [DbxStringSerializer deserialize:obj]; }];

    return [[DbxUsersGetAccountBatchArg alloc] initWithAccountIds:accountIds];
}

@end
