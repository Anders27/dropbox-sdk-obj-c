///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersSpaceAllocation.h"
#import "DbxUsersSpaceUsage.h"

@implementation DbxUsersSpaceUsage 

- (instancetype)initWithUsed:(NSNumber *)used allocation:(DbxUsersSpaceAllocation *)allocation {

    self = [super init];
    if (self != nil) {
        _used = used;
        _allocation = allocation;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxUsersSpaceUsageSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxUsersSpaceUsageSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxUsersSpaceUsageSerializer serialize:self] description];
}

@end


@implementation DbxUsersSpaceUsageSerializer 

+ (NSDictionary *)serialize:(DbxUsersSpaceUsage *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"used"] = [DbxNSNumberSerializer serialize:valueObj.used];
    jsonDict[@"allocation"] = [DbxUsersSpaceAllocationSerializer serialize:valueObj.allocation];

    return jsonDict;
}

+ (DbxUsersSpaceUsage *)deserialize:(NSDictionary *)valueDict {
    NSNumber *used = [DbxNSNumberSerializer deserialize:valueDict];
    DbxUsersSpaceAllocation *allocation = [DbxUsersSpaceAllocationSerializer deserialize:valueDict];

    return [[DbxUsersSpaceUsage alloc] initWithUsed:used allocation:allocation];
}

@end
