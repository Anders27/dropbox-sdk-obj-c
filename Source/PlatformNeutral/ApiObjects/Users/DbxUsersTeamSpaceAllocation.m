///
/// Auto-generated by Stone, do not modify.
///

#import "DbxStoneSerializers.h"
#import "DbxStoneValidators.h"
#import "DbxUsersTeamSpaceAllocation.h"

@implementation DbxUsersTeamSpaceAllocation 

- (instancetype)initWithUsed:(NSNumber *)used allocated:(NSNumber *)allocated {

    self = [super init];
    if (self != nil) {
        _used = used;
        _allocated = allocated;
    }
    return self;
}

+ (NSDictionary *)serialize:(id)obj {
    return [DbxUsersTeamSpaceAllocationSerializer serialize:obj];
}

+ (id)deserialize:(NSDictionary *)dict {
    return [DbxUsersTeamSpaceAllocationSerializer deserialize:dict];
}

- (NSString *)description {
    return [[DbxUsersTeamSpaceAllocationSerializer serialize:self] description];
}

@end


@implementation DbxUsersTeamSpaceAllocationSerializer 

+ (NSDictionary *)serialize:(DbxUsersTeamSpaceAllocation *)valueObj {
    NSMutableDictionary *jsonDict = [[NSMutableDictionary alloc] init];

    jsonDict[@"used"] = [DbxNSNumberSerializer serialize:valueObj.used];
    jsonDict[@"allocated"] = [DbxNSNumberSerializer serialize:valueObj.allocated];

    return jsonDict;
}

+ (DbxUsersTeamSpaceAllocation *)deserialize:(NSDictionary *)valueDict {
    NSNumber *used = [DbxNSNumberSerializer deserialize:valueDict[@"used"]];
    NSNumber *allocated = [DbxNSNumberSerializer deserialize:valueDict[@"allocated"]];

    return [[DbxUsersTeamSpaceAllocation alloc] initWithUsed:used allocated:allocated];
}

@end
