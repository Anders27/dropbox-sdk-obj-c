///
/// Auto-generated by Stone, do not modify.
///

#import "DbxFilesRoutes.h"

@implementation DbxFilesRoutes 

- (instancetype)init:(DropboxTransportClient *)client {
    self = [super init];
    if (self != nil) {
        _client = client;
    }
    return self;
}
- (DbxRpcTask *)alphaGetMetadata:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaGetMetadata;
    DbxFilesAlphaGetMetadataArg *arg = [[DbxFilesAlphaGetMetadataArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)alphaGetMetadata:(NSString *)path includeMediaInfo:(NSNumber *)includeMediaInfo includeDeleted:(NSNumber *)includeDeleted includeHasExplicitSharedMembers:(NSNumber *)includeHasExplicitSharedMembers includePropertyTemplates:(NSArray<NSString *> *)includePropertyTemplates {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaGetMetadata;
    DbxFilesAlphaGetMetadataArg *arg = [[DbxFilesAlphaGetMetadataArg alloc] initWithPath:path includeMediaInfo:includeMediaInfo includeDeleted:includeDeleted includeHasExplicitSharedMembers:includeHasExplicitSharedMembers includePropertyTemplates:includePropertyTemplates];
    return [self.client requestRpc:route arg:arg];
}

- (DbxUploadTask *)alphaUploadURL:(NSString *)path inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)alphaUploadURL:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute propertyGroups:(NSArray<DbxPropertiesPropertyGroup *> *)propertyGroups inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute propertyGroups:propertyGroups];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)alphaUploadData:(NSString *)path inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)alphaUploadData:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute propertyGroups:(NSArray<DbxPropertiesPropertyGroup *> *)propertyGroups inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute propertyGroups:propertyGroups];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)alphaUploadStream:(NSString *)path inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)alphaUploadStream:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute propertyGroups:(NSArray<DbxPropertiesPropertyGroup *> *)propertyGroups inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesAlphaUpload;
    DbxFilesCommitInfoWithProperties *arg = [[DbxFilesCommitInfoWithProperties alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute propertyGroups:propertyGroups];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxRpcTask *)dCopy:(NSString *)fromPath toPath:(NSString *)toPath {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDCopy;
    DbxFilesRelocationArg *arg = [[DbxFilesRelocationArg alloc] initWithFromPath:fromPath toPath:toPath];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)dCopyReferenceGet:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDCopyReferenceGet;
    DbxFilesGetCopyReferenceArg *arg = [[DbxFilesGetCopyReferenceArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)dCopyReferenceSave:(NSString *)dCopyReference path:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDCopyReferenceSave;
    DbxFilesSaveCopyReferenceArg *arg = [[DbxFilesSaveCopyReferenceArg alloc] initWithDCopyReference:dCopyReference path:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)createFolder:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesCreateFolder;
    DbxFilesCreateFolderArg *arg = [[DbxFilesCreateFolderArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)delete_:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDelete_;
    DbxFilesDeleteArg *arg = [[DbxFilesDeleteArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxDownloadURLTask *)downloadURL:(NSString *)path overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDownload;
    DbxFilesDownloadArg *arg = [[DbxFilesDownloadArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadURLTask *)downloadURL:(NSString *)path rev:(NSString *)rev overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDownload;
    DbxFilesDownloadArg *arg = [[DbxFilesDownloadArg alloc] initWithPath:path rev:rev];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadDataTask *)downloadData:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDownload;
    DbxFilesDownloadArg *arg = [[DbxFilesDownloadArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg];
}

- (DbxDownloadDataTask *)downloadData:(NSString *)path rev:(NSString *)rev {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesDownload;
    DbxFilesDownloadArg *arg = [[DbxFilesDownloadArg alloc] initWithPath:path rev:rev];
    return [self.client requestDownload:route arg:arg];
}

- (DbxRpcTask *)getMetadata:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetMetadata;
    DbxFilesGetMetadataArg *arg = [[DbxFilesGetMetadataArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)getMetadata:(NSString *)path includeMediaInfo:(NSNumber *)includeMediaInfo includeDeleted:(NSNumber *)includeDeleted includeHasExplicitSharedMembers:(NSNumber *)includeHasExplicitSharedMembers {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetMetadata;
    DbxFilesGetMetadataArg *arg = [[DbxFilesGetMetadataArg alloc] initWithPath:path includeMediaInfo:includeMediaInfo includeDeleted:includeDeleted includeHasExplicitSharedMembers:includeHasExplicitSharedMembers];
    return [self.client requestRpc:route arg:arg];
}

- (DbxDownloadURLTask *)getPreviewURL:(NSString *)path overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetPreview;
    DbxFilesPreviewArg *arg = [[DbxFilesPreviewArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadURLTask *)getPreviewURL:(NSString *)path rev:(NSString *)rev overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetPreview;
    DbxFilesPreviewArg *arg = [[DbxFilesPreviewArg alloc] initWithPath:path rev:rev];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadDataTask *)getPreviewData:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetPreview;
    DbxFilesPreviewArg *arg = [[DbxFilesPreviewArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg];
}

- (DbxDownloadDataTask *)getPreviewData:(NSString *)path rev:(NSString *)rev {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetPreview;
    DbxFilesPreviewArg *arg = [[DbxFilesPreviewArg alloc] initWithPath:path rev:rev];
    return [self.client requestDownload:route arg:arg];
}

- (DbxRpcTask *)getTemporaryLink:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetTemporaryLink;
    DbxFilesGetTemporaryLinkArg *arg = [[DbxFilesGetTemporaryLinkArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxDownloadURLTask *)getThumbnailURL:(NSString *)path overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetThumbnail;
    DbxFilesThumbnailArg *arg = [[DbxFilesThumbnailArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadURLTask *)getThumbnailURL:(NSString *)path format:(DbxFilesThumbnailFormat *)format size:(DbxFilesThumbnailSize *)size overwrite:(BOOL)overwrite destination:(NSURL *)destination {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetThumbnail;
    DbxFilesThumbnailArg *arg = [[DbxFilesThumbnailArg alloc] initWithPath:path format:format size:size];
    return [self.client requestDownload:route arg:arg overwrite:overwrite destination:destination];
}

- (DbxDownloadDataTask *)getThumbnailData:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetThumbnail;
    DbxFilesThumbnailArg *arg = [[DbxFilesThumbnailArg alloc] initWithPath:path];
    return [self.client requestDownload:route arg:arg];
}

- (DbxDownloadDataTask *)getThumbnailData:(NSString *)path format:(DbxFilesThumbnailFormat *)format size:(DbxFilesThumbnailSize *)size {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesGetThumbnail;
    DbxFilesThumbnailArg *arg = [[DbxFilesThumbnailArg alloc] initWithPath:path format:format size:size];
    return [self.client requestDownload:route arg:arg];
}

- (DbxRpcTask *)listFolder:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolder;
    DbxFilesListFolderArg *arg = [[DbxFilesListFolderArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolder:(NSString *)path recursive:(NSNumber *)recursive includeMediaInfo:(NSNumber *)includeMediaInfo includeDeleted:(NSNumber *)includeDeleted includeHasExplicitSharedMembers:(NSNumber *)includeHasExplicitSharedMembers {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolder;
    DbxFilesListFolderArg *arg = [[DbxFilesListFolderArg alloc] initWithPath:path recursive:recursive includeMediaInfo:includeMediaInfo includeDeleted:includeDeleted includeHasExplicitSharedMembers:includeHasExplicitSharedMembers];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolderContinue:(NSString *)cursor {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolderContinue;
    DbxFilesListFolderContinueArg *arg = [[DbxFilesListFolderContinueArg alloc] initWithCursor:cursor];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolderGetLatestCursor:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolderGetLatestCursor;
    DbxFilesListFolderArg *arg = [[DbxFilesListFolderArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolderGetLatestCursor:(NSString *)path recursive:(NSNumber *)recursive includeMediaInfo:(NSNumber *)includeMediaInfo includeDeleted:(NSNumber *)includeDeleted includeHasExplicitSharedMembers:(NSNumber *)includeHasExplicitSharedMembers {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolderGetLatestCursor;
    DbxFilesListFolderArg *arg = [[DbxFilesListFolderArg alloc] initWithPath:path recursive:recursive includeMediaInfo:includeMediaInfo includeDeleted:includeDeleted includeHasExplicitSharedMembers:includeHasExplicitSharedMembers];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolderLongpoll:(NSString *)cursor {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolderLongpoll;
    DbxFilesListFolderLongpollArg *arg = [[DbxFilesListFolderLongpollArg alloc] initWithCursor:cursor];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listFolderLongpoll:(NSString *)cursor timeout:(NSNumber *)timeout {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListFolderLongpoll;
    DbxFilesListFolderLongpollArg *arg = [[DbxFilesListFolderLongpollArg alloc] initWithCursor:cursor timeout:timeout];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listRevisions:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListRevisions;
    DbxFilesListRevisionsArg *arg = [[DbxFilesListRevisionsArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)listRevisions:(NSString *)path limit:(NSNumber *)limit {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesListRevisions;
    DbxFilesListRevisionsArg *arg = [[DbxFilesListRevisionsArg alloc] initWithPath:path limit:limit];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)move:(NSString *)fromPath toPath:(NSString *)toPath {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesMove;
    DbxFilesRelocationArg *arg = [[DbxFilesRelocationArg alloc] initWithFromPath:fromPath toPath:toPath];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)permanentlyDelete:(NSString *)path {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPermanentlyDelete;
    DbxFilesDeleteArg *arg = [[DbxFilesDeleteArg alloc] initWithPath:path];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)propertiesAdd:(NSString *)path propertyGroups:(NSArray<DbxPropertiesPropertyGroup *> *)propertyGroups {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesAdd;
    DbxFilesPropertyGroupWithPath *arg = [[DbxFilesPropertyGroupWithPath alloc] initWithPath:path propertyGroups:propertyGroups];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)propertiesOverwrite:(NSString *)path propertyGroups:(NSArray<DbxPropertiesPropertyGroup *> *)propertyGroups {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesOverwrite;
    DbxFilesPropertyGroupWithPath *arg = [[DbxFilesPropertyGroupWithPath alloc] initWithPath:path propertyGroups:propertyGroups];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)propertiesRemove:(NSString *)path propertyTemplateIds:(NSArray<NSString *> *)propertyTemplateIds {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesRemove;
    DbxFilesRemovePropertiesArg *arg = [[DbxFilesRemovePropertiesArg alloc] initWithPath:path propertyTemplateIds:propertyTemplateIds];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)propertiesTemplateGet:(NSString *)templateId {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesTemplateGet;
    DbxPropertiesGetPropertyTemplateArg *arg = [[DbxPropertiesGetPropertyTemplateArg alloc] initWithTemplateId:templateId];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)propertiesTemplateList {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesTemplateList;
    return [self.client requestRpc:route arg:nil];
}

- (DbxRpcTask *)propertiesUpdate:(NSString *)path updatePropertyGroups:(NSArray<DbxFilesPropertyGroupUpdate *> *)updatePropertyGroups {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesPropertiesUpdate;
    DbxFilesUpdatePropertyGroupArg *arg = [[DbxFilesUpdatePropertyGroupArg alloc] initWithPath:path updatePropertyGroups:updatePropertyGroups];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)restore:(NSString *)path rev:(NSString *)rev {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesRestore;
    DbxFilesRestoreArg *arg = [[DbxFilesRestoreArg alloc] initWithPath:path rev:rev];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)saveUrl:(NSString *)path url:(NSString *)url {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesSaveUrl;
    DbxFilesSaveUrlArg *arg = [[DbxFilesSaveUrlArg alloc] initWithPath:path url:url];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)saveUrlCheckJobStatus:(NSString *)asyncJobId {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesSaveUrlCheckJobStatus;
    DbxAsyncPollArg *arg = [[DbxAsyncPollArg alloc] initWithAsyncJobId:asyncJobId];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)search:(NSString *)path query:(NSString *)query {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesSearch;
    DbxFilesSearchArg *arg = [[DbxFilesSearchArg alloc] initWithPath:path query:query];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)search:(NSString *)path query:(NSString *)query start:(NSNumber *)start maxResults:(NSNumber *)maxResults mode:(DbxFilesSearchMode *)mode {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesSearch;
    DbxFilesSearchArg *arg = [[DbxFilesSearchArg alloc] initWithPath:path query:query start:start maxResults:maxResults mode:mode];
    return [self.client requestRpc:route arg:arg];
}

- (DbxUploadTask *)uploadURL:(NSString *)path inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadURL:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadData:(NSString *)path inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadData:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadStream:(NSString *)path inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadStream:(NSString *)path mode:(DbxFilesWriteMode *)mode autorename:(NSNumber *)autorename clientModified:(NSDate *)clientModified mute:(NSNumber *)mute inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUpload;
    DbxFilesCommitInfo *arg = [[DbxFilesCommitInfo alloc] initWithPath:path mode:mode autorename:autorename clientModified:clientModified mute:mute];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadSessionAppendURL:(NSString *)sessionId offset:(NSNumber *)offset inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppend;
    DbxFilesUploadSessionCursor *arg = [[DbxFilesUploadSessionCursor alloc] initWithSessionId:sessionId offset:offset];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionAppendData:(NSString *)sessionId offset:(NSNumber *)offset inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppend;
    DbxFilesUploadSessionCursor *arg = [[DbxFilesUploadSessionCursor alloc] initWithSessionId:sessionId offset:offset];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionAppendStream:(NSString *)sessionId offset:(NSNumber *)offset inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppend;
    DbxFilesUploadSessionCursor *arg = [[DbxFilesUploadSessionCursor alloc] initWithSessionId:sessionId offset:offset];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadSessionAppendV2URL:(DbxFilesUploadSessionCursor *)cursor inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionAppendV2URL:(DbxFilesUploadSessionCursor *)cursor close:(NSNumber *)close inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor close:close];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionAppendV2Data:(DbxFilesUploadSessionCursor *)cursor inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionAppendV2Data:(DbxFilesUploadSessionCursor *)cursor close:(NSNumber *)close inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor close:close];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionAppendV2Stream:(DbxFilesUploadSessionCursor *)cursor inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadSessionAppendV2Stream:(DbxFilesUploadSessionCursor *)cursor close:(NSNumber *)close inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionAppendV2;
    DbxFilesUploadSessionAppendArg *arg = [[DbxFilesUploadSessionAppendArg alloc] initWithCursor:cursor close:close];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadSessionFinishURL:(DbxFilesUploadSessionCursor *)cursor commit:(DbxFilesCommitInfo *)commit inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionFinish;
    DbxFilesUploadSessionFinishArg *arg = [[DbxFilesUploadSessionFinishArg alloc] initWithCursor:cursor commit:commit];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionFinishData:(DbxFilesUploadSessionCursor *)cursor commit:(DbxFilesCommitInfo *)commit inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionFinish;
    DbxFilesUploadSessionFinishArg *arg = [[DbxFilesUploadSessionFinishArg alloc] initWithCursor:cursor commit:commit];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionFinishStream:(DbxFilesUploadSessionCursor *)cursor commit:(DbxFilesCommitInfo *)commit inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionFinish;
    DbxFilesUploadSessionFinishArg *arg = [[DbxFilesUploadSessionFinishArg alloc] initWithCursor:cursor commit:commit];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxRpcTask *)uploadSessionFinishBatch:(NSArray<DbxFilesUploadSessionFinishArg *> *)entries {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionFinishBatch;
    DbxFilesUploadSessionFinishBatchArg *arg = [[DbxFilesUploadSessionFinishBatchArg alloc] initWithEntries:entries];
    return [self.client requestRpc:route arg:arg];
}

- (DbxRpcTask *)uploadSessionFinishBatchCheck:(NSString *)asyncJobId {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionFinishBatchCheck;
    DbxAsyncPollArg *arg = [[DbxAsyncPollArg alloc] initWithAsyncJobId:asyncJobId];
    return [self.client requestRpc:route arg:arg];
}

- (DbxUploadTask *)uploadSessionStartURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] init];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionStartURL:(NSNumber *)close inputURL:(NSURL *)inputURL {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] initWithClose:close];
    return [self.client requestUpload:route arg:arg inputURL:inputURL];
}

- (DbxUploadTask *)uploadSessionStartData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] init];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionStartData:(NSNumber *)close inputData:(NSData *)inputData {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] initWithClose:close];
    return [self.client requestUpload:route arg:arg inputData:inputData];
}

- (DbxUploadTask *)uploadSessionStartStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] init];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

- (DbxUploadTask *)uploadSessionStartStream:(NSNumber *)close inputStream:(NSInputStream *)inputStream {
    DbxRoute *route = DbxFilesRouteObjects.dbxFilesUploadSessionStart;
    DbxFilesUploadSessionStartArg *arg = [[DbxFilesUploadSessionStartArg alloc] initWithClose:close];
    return [self.client requestUpload:route arg:arg inputStream:inputStream];
}

@end
