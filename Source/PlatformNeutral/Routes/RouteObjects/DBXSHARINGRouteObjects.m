///
/// Auto-generated by Stone, do not modify.
///

#import "DBXSHARINGRouteObjects.h"
#import "DBXSHARINGRoutes.h"
#import "DBXStoneBase.h"

@implementation DBXSHARINGRouteObjects 

static DBXRoute *DBXSHARINGAddFileMember;
static DBXRoute *DBXSHARINGAddFolderMember;
static DBXRoute *DBXSHARINGChangeFileMemberAccess;
static DBXRoute *DBXSHARINGCheckJobStatus;
static DBXRoute *DBXSHARINGCheckRemoveMemberJobStatus;
static DBXRoute *DBXSHARINGCheckShareJobStatus;
static DBXRoute *DBXSHARINGCreateSharedLink;
static DBXRoute *DBXSHARINGCreateSharedLinkWithSettings;
static DBXRoute *DBXSHARINGGetFileMetadata;
static DBXRoute *DBXSHARINGGetFileMetadataBatch;
static DBXRoute *DBXSHARINGGetFolderMetadata;
static DBXRoute *DBXSHARINGGetSharedLinkFile;
static DBXRoute *DBXSHARINGGetSharedLinkMetadata;
static DBXRoute *DBXSHARINGGetSharedLinks;
static DBXRoute *DBXSHARINGListFileMembers;
static DBXRoute *DBXSHARINGListFileMembersBatch;
static DBXRoute *DBXSHARINGListFileMembersContinue;
static DBXRoute *DBXSHARINGListFolderMembers;
static DBXRoute *DBXSHARINGListFolderMembersContinue;
static DBXRoute *DBXSHARINGListFolders;
static DBXRoute *DBXSHARINGListFoldersContinue;
static DBXRoute *DBXSHARINGListMountableFolders;
static DBXRoute *DBXSHARINGListMountableFoldersContinue;
static DBXRoute *DBXSHARINGListReceivedFiles;
static DBXRoute *DBXSHARINGListReceivedFilesContinue;
static DBXRoute *DBXSHARINGListSharedLinks;
static DBXRoute *DBXSHARINGModifySharedLinkSettings;
static DBXRoute *DBXSHARINGMountFolder;
static DBXRoute *DBXSHARINGRelinquishFileMembership;
static DBXRoute *DBXSHARINGRelinquishFolderMembership;
static DBXRoute *DBXSHARINGRemoveFileMember;
static DBXRoute *DBXSHARINGRemoveFileMember2;
static DBXRoute *DBXSHARINGRemoveFolderMember;
static DBXRoute *DBXSHARINGRevokeSharedLink;
static DBXRoute *DBXSHARINGShareFolder;
static DBXRoute *DBXSHARINGTransferFolder;
static DBXRoute *DBXSHARINGUnmountFolder;
static DBXRoute *DBXSHARINGUnshareFile;
static DBXRoute *DBXSHARINGUnshareFolder;
static DBXRoute *DBXSHARINGUpdateFolderMember;
static DBXRoute *DBXSHARINGUpdateFolderPolicy;

+ (DBXRoute *)DBXSHARINGAddFileMember {
    if (!DBXSHARINGAddFileMember) {
        DBXSHARINGAddFileMember = [[DBXRoute alloc] init:
            @"add_file_member"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[NSArray<DBXSHARINGFileMemberActionResult *> class]
            errorType:[DBXSHARINGAddFileMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:^id(id array) { return [DBXArraySerializer deserialize:array withBlock:^id(id elem) { return [DBXSHARINGFileMemberActionResultSerializer deserialize:elem]; }]; }
        ];
    }
    return DBXSHARINGAddFileMember;
}

+ (DBXRoute *)DBXSHARINGAddFolderMember {
    if (!DBXSHARINGAddFolderMember) {
        DBXSHARINGAddFolderMember = [[DBXRoute alloc] init:
            @"add_folder_member"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGAddFolderMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGAddFolderMember;
}

+ (DBXRoute *)DBXSHARINGChangeFileMemberAccess {
    if (!DBXSHARINGChangeFileMemberAccess) {
        DBXSHARINGChangeFileMemberAccess = [[DBXRoute alloc] init:
            @"change_file_member_access"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGFileMemberActionResult class]
            errorType:[DBXSHARINGFileMemberActionError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGChangeFileMemberAccess;
}

+ (DBXRoute *)DBXSHARINGCheckJobStatus {
    if (!DBXSHARINGCheckJobStatus) {
        DBXSHARINGCheckJobStatus = [[DBXRoute alloc] init:
            @"check_job_status"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGJobStatus class]
            errorType:[DBXASYNCPollError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGCheckJobStatus;
}

+ (DBXRoute *)DBXSHARINGCheckRemoveMemberJobStatus {
    if (!DBXSHARINGCheckRemoveMemberJobStatus) {
        DBXSHARINGCheckRemoveMemberJobStatus = [[DBXRoute alloc] init:
            @"check_remove_member_job_status"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGRemoveMemberJobStatus class]
            errorType:[DBXASYNCPollError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGCheckRemoveMemberJobStatus;
}

+ (DBXRoute *)DBXSHARINGCheckShareJobStatus {
    if (!DBXSHARINGCheckShareJobStatus) {
        DBXSHARINGCheckShareJobStatus = [[DBXRoute alloc] init:
            @"check_share_job_status"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGShareFolderJobStatus class]
            errorType:[DBXASYNCPollError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGCheckShareJobStatus;
}

+ (DBXRoute *)DBXSHARINGCreateSharedLink {
    if (!DBXSHARINGCreateSharedLink) {
        DBXSHARINGCreateSharedLink = [[DBXRoute alloc] init:
            @"create_shared_link"
            namespace_:@"sharing"
            deprecated:@YES
            resultType:[DBXSHARINGPathLinkMetadata class]
            errorType:[DBXSHARINGCreateSharedLinkError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGCreateSharedLink;
}

+ (DBXRoute *)DBXSHARINGCreateSharedLinkWithSettings {
    if (!DBXSHARINGCreateSharedLinkWithSettings) {
        DBXSHARINGCreateSharedLinkWithSettings = [[DBXRoute alloc] init:
            @"create_shared_link_with_settings"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedLinkMetadata class]
            errorType:[DBXSHARINGCreateSharedLinkWithSettingsError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGCreateSharedLinkWithSettings;
}

+ (DBXRoute *)DBXSHARINGGetFileMetadata {
    if (!DBXSHARINGGetFileMetadata) {
        DBXSHARINGGetFileMetadata = [[DBXRoute alloc] init:
            @"get_file_metadata"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFileMetadata class]
            errorType:[DBXSHARINGGetFileMetadataError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGGetFileMetadata;
}

+ (DBXRoute *)DBXSHARINGGetFileMetadataBatch {
    if (!DBXSHARINGGetFileMetadataBatch) {
        DBXSHARINGGetFileMetadataBatch = [[DBXRoute alloc] init:
            @"get_file_metadata/batch"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[NSArray<DBXSHARINGGetFileMetadataBatchResult *> class]
            errorType:[DBXSHARINGSharingUserError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:^id(id array) { return [DBXArraySerializer deserialize:array withBlock:^id(id elem) { return [DBXSHARINGGetFileMetadataBatchResultSerializer deserialize:elem]; }]; }
        ];
    }
    return DBXSHARINGGetFileMetadataBatch;
}

+ (DBXRoute *)DBXSHARINGGetFolderMetadata {
    if (!DBXSHARINGGetFolderMetadata) {
        DBXSHARINGGetFolderMetadata = [[DBXRoute alloc] init:
            @"get_folder_metadata"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFolderMetadata class]
            errorType:[DBXSHARINGSharedFolderAccessError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGGetFolderMetadata;
}

+ (DBXRoute *)DBXSHARINGGetSharedLinkFile {
    if (!DBXSHARINGGetSharedLinkFile) {
        DBXSHARINGGetSharedLinkFile = [[DBXRoute alloc] init:
            @"get_shared_link_file"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedLinkMetadata class]
            errorType:[DBXSHARINGGetSharedLinkFileError class]
            attrs:@{@"host": @"content",
                    @"style": @"download"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGGetSharedLinkFile;
}

+ (DBXRoute *)DBXSHARINGGetSharedLinkMetadata {
    if (!DBXSHARINGGetSharedLinkMetadata) {
        DBXSHARINGGetSharedLinkMetadata = [[DBXRoute alloc] init:
            @"get_shared_link_metadata"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedLinkMetadata class]
            errorType:[DBXSHARINGSharedLinkError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGGetSharedLinkMetadata;
}

+ (DBXRoute *)DBXSHARINGGetSharedLinks {
    if (!DBXSHARINGGetSharedLinks) {
        DBXSHARINGGetSharedLinks = [[DBXRoute alloc] init:
            @"get_shared_links"
            namespace_:@"sharing"
            deprecated:@YES
            resultType:[DBXSHARINGGetSharedLinksResult class]
            errorType:[DBXSHARINGGetSharedLinksError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGGetSharedLinks;
}

+ (DBXRoute *)DBXSHARINGListFileMembers {
    if (!DBXSHARINGListFileMembers) {
        DBXSHARINGListFileMembers = [[DBXRoute alloc] init:
            @"list_file_members"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFileMembers class]
            errorType:[DBXSHARINGListFileMembersError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFileMembers;
}

+ (DBXRoute *)DBXSHARINGListFileMembersBatch {
    if (!DBXSHARINGListFileMembersBatch) {
        DBXSHARINGListFileMembersBatch = [[DBXRoute alloc] init:
            @"list_file_members/batch"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[NSArray<DBXSHARINGListFileMembersBatchResult *> class]
            errorType:[DBXSHARINGSharingUserError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:^id(id array) { return [DBXArraySerializer deserialize:array withBlock:^id(id elem) { return [DBXSHARINGListFileMembersBatchResultSerializer deserialize:elem]; }]; }
        ];
    }
    return DBXSHARINGListFileMembersBatch;
}

+ (DBXRoute *)DBXSHARINGListFileMembersContinue {
    if (!DBXSHARINGListFileMembersContinue) {
        DBXSHARINGListFileMembersContinue = [[DBXRoute alloc] init:
            @"list_file_members/continue"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFileMembers class]
            errorType:[DBXSHARINGListFileMembersContinueError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFileMembersContinue;
}

+ (DBXRoute *)DBXSHARINGListFolderMembers {
    if (!DBXSHARINGListFolderMembers) {
        DBXSHARINGListFolderMembers = [[DBXRoute alloc] init:
            @"list_folder_members"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFolderMembers class]
            errorType:[DBXSHARINGSharedFolderAccessError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFolderMembers;
}

+ (DBXRoute *)DBXSHARINGListFolderMembersContinue {
    if (!DBXSHARINGListFolderMembersContinue) {
        DBXSHARINGListFolderMembersContinue = [[DBXRoute alloc] init:
            @"list_folder_members/continue"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFolderMembers class]
            errorType:[DBXSHARINGListFolderMembersContinueError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFolderMembersContinue;
}

+ (DBXRoute *)DBXSHARINGListFolders {
    if (!DBXSHARINGListFolders) {
        DBXSHARINGListFolders = [[DBXRoute alloc] init:
            @"list_folders"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFoldersResult class]
            errorType:nil
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFolders;
}

+ (DBXRoute *)DBXSHARINGListFoldersContinue {
    if (!DBXSHARINGListFoldersContinue) {
        DBXSHARINGListFoldersContinue = [[DBXRoute alloc] init:
            @"list_folders/continue"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFoldersResult class]
            errorType:[DBXSHARINGListFoldersContinueError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListFoldersContinue;
}

+ (DBXRoute *)DBXSHARINGListMountableFolders {
    if (!DBXSHARINGListMountableFolders) {
        DBXSHARINGListMountableFolders = [[DBXRoute alloc] init:
            @"list_mountable_folders"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFoldersResult class]
            errorType:nil
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListMountableFolders;
}

+ (DBXRoute *)DBXSHARINGListMountableFoldersContinue {
    if (!DBXSHARINGListMountableFoldersContinue) {
        DBXSHARINGListMountableFoldersContinue = [[DBXRoute alloc] init:
            @"list_mountable_folders/continue"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFoldersResult class]
            errorType:[DBXSHARINGListFoldersContinueError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListMountableFoldersContinue;
}

+ (DBXRoute *)DBXSHARINGListReceivedFiles {
    if (!DBXSHARINGListReceivedFiles) {
        DBXSHARINGListReceivedFiles = [[DBXRoute alloc] init:
            @"list_received_files"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFilesResult class]
            errorType:[DBXSHARINGSharingUserError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListReceivedFiles;
}

+ (DBXRoute *)DBXSHARINGListReceivedFilesContinue {
    if (!DBXSHARINGListReceivedFilesContinue) {
        DBXSHARINGListReceivedFilesContinue = [[DBXRoute alloc] init:
            @"list_received_files/continue"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListFilesResult class]
            errorType:[DBXSHARINGListFilesContinueError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListReceivedFilesContinue;
}

+ (DBXRoute *)DBXSHARINGListSharedLinks {
    if (!DBXSHARINGListSharedLinks) {
        DBXSHARINGListSharedLinks = [[DBXRoute alloc] init:
            @"list_shared_links"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGListSharedLinksResult class]
            errorType:[DBXSHARINGListSharedLinksError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGListSharedLinks;
}

+ (DBXRoute *)DBXSHARINGModifySharedLinkSettings {
    if (!DBXSHARINGModifySharedLinkSettings) {
        DBXSHARINGModifySharedLinkSettings = [[DBXRoute alloc] init:
            @"modify_shared_link_settings"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedLinkMetadata class]
            errorType:[DBXSHARINGModifySharedLinkSettingsError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGModifySharedLinkSettings;
}

+ (DBXRoute *)DBXSHARINGMountFolder {
    if (!DBXSHARINGMountFolder) {
        DBXSHARINGMountFolder = [[DBXRoute alloc] init:
            @"mount_folder"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFolderMetadata class]
            errorType:[DBXSHARINGMountFolderError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGMountFolder;
}

+ (DBXRoute *)DBXSHARINGRelinquishFileMembership {
    if (!DBXSHARINGRelinquishFileMembership) {
        DBXSHARINGRelinquishFileMembership = [[DBXRoute alloc] init:
            @"relinquish_file_membership"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGRelinquishFileMembershipError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRelinquishFileMembership;
}

+ (DBXRoute *)DBXSHARINGRelinquishFolderMembership {
    if (!DBXSHARINGRelinquishFolderMembership) {
        DBXSHARINGRelinquishFolderMembership = [[DBXRoute alloc] init:
            @"relinquish_folder_membership"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXASYNCLaunchEmptyResult class]
            errorType:[DBXSHARINGRelinquishFolderMembershipError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRelinquishFolderMembership;
}

+ (DBXRoute *)DBXSHARINGRemoveFileMember {
    if (!DBXSHARINGRemoveFileMember) {
        DBXSHARINGRemoveFileMember = [[DBXRoute alloc] init:
            @"remove_file_member"
            namespace_:@"sharing"
            deprecated:@YES
            resultType:[DBXSHARINGFileMemberActionIndividualResult class]
            errorType:[DBXSHARINGRemoveFileMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRemoveFileMember;
}

+ (DBXRoute *)DBXSHARINGRemoveFileMember2 {
    if (!DBXSHARINGRemoveFileMember2) {
        DBXSHARINGRemoveFileMember2 = [[DBXRoute alloc] init:
            @"remove_file_member_2"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGFileMemberRemoveActionResult class]
            errorType:[DBXSHARINGRemoveFileMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRemoveFileMember2;
}

+ (DBXRoute *)DBXSHARINGRemoveFolderMember {
    if (!DBXSHARINGRemoveFolderMember) {
        DBXSHARINGRemoveFolderMember = [[DBXRoute alloc] init:
            @"remove_folder_member"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXASYNCLaunchResultBase class]
            errorType:[DBXSHARINGRemoveFolderMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRemoveFolderMember;
}

+ (DBXRoute *)DBXSHARINGRevokeSharedLink {
    if (!DBXSHARINGRevokeSharedLink) {
        DBXSHARINGRevokeSharedLink = [[DBXRoute alloc] init:
            @"revoke_shared_link"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGRevokeSharedLinkError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGRevokeSharedLink;
}

+ (DBXRoute *)DBXSHARINGShareFolder {
    if (!DBXSHARINGShareFolder) {
        DBXSHARINGShareFolder = [[DBXRoute alloc] init:
            @"share_folder"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGShareFolderLaunch class]
            errorType:[DBXSHARINGShareFolderError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGShareFolder;
}

+ (DBXRoute *)DBXSHARINGTransferFolder {
    if (!DBXSHARINGTransferFolder) {
        DBXSHARINGTransferFolder = [[DBXRoute alloc] init:
            @"transfer_folder"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGTransferFolderError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGTransferFolder;
}

+ (DBXRoute *)DBXSHARINGUnmountFolder {
    if (!DBXSHARINGUnmountFolder) {
        DBXSHARINGUnmountFolder = [[DBXRoute alloc] init:
            @"unmount_folder"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGUnmountFolderError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGUnmountFolder;
}

+ (DBXRoute *)DBXSHARINGUnshareFile {
    if (!DBXSHARINGUnshareFile) {
        DBXSHARINGUnshareFile = [[DBXRoute alloc] init:
            @"unshare_file"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:nil
            errorType:[DBXSHARINGUnshareFileError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGUnshareFile;
}

+ (DBXRoute *)DBXSHARINGUnshareFolder {
    if (!DBXSHARINGUnshareFolder) {
        DBXSHARINGUnshareFolder = [[DBXRoute alloc] init:
            @"unshare_folder"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXASYNCLaunchEmptyResult class]
            errorType:[DBXSHARINGUnshareFolderError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGUnshareFolder;
}

+ (DBXRoute *)DBXSHARINGUpdateFolderMember {
    if (!DBXSHARINGUpdateFolderMember) {
        DBXSHARINGUpdateFolderMember = [[DBXRoute alloc] init:
            @"update_folder_member"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGMemberAccessLevelResult class]
            errorType:[DBXSHARINGUpdateFolderMemberError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGUpdateFolderMember;
}

+ (DBXRoute *)DBXSHARINGUpdateFolderPolicy {
    if (!DBXSHARINGUpdateFolderPolicy) {
        DBXSHARINGUpdateFolderPolicy = [[DBXRoute alloc] init:
            @"update_folder_policy"
            namespace_:@"sharing"
            deprecated:@NO
            resultType:[DBXSHARINGSharedFolderMetadata class]
            errorType:[DBXSHARINGUpdateFolderPolicyError class]
            attrs:@{@"host": @"api",
                    @"style": @"rpc"}
            arraySerialBlock:nil
            arrayDeserialBlock:nil
        ];
    }
    return DBXSHARINGUpdateFolderPolicy;
}

@end
